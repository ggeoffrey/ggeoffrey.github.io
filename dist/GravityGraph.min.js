/*! GravityGraph.min.js 27-11-2015 */
!function(){function a(a){return a&&(a.ownerDocument||a.document||a).documentElement}function b(a){return a&&(a.ownerDocument&&a.ownerDocument.defaultView||a.document&&a||a.defaultView)}function c(a,b){return b>a?-1:a>b?1:a>=b?0:NaN}function d(a){return null===a?NaN:+a}function e(a){return!isNaN(a)}function f(a){return{left:function(b,c,d,e){for(arguments.length<3&&(d=0),arguments.length<4&&(e=b.length);e>d;){var f=d+e>>>1;a(b[f],c)<0?d=f+1:e=f}return d},right:function(b,c,d,e){for(arguments.length<3&&(d=0),arguments.length<4&&(e=b.length);e>d;){var f=d+e>>>1;a(b[f],c)>0?e=f:d=f+1}return d}}}function g(a){return a.length}function h(a){for(var b=1;a*b%1;)b*=10;return b}function i(a,b){for(var c in b)Object.defineProperty(a.prototype,c,{value:b[c],enumerable:!1})}function j(){this._=Object.create(null)}function k(a){return(a+="")===wg||a[0]===xg?xg+a:a}function l(a){return(a+="")[0]===xg?a.slice(1):a}function m(a){return k(a)in this._}function n(a){return(a=k(a))in this._&&delete this._[a]}function o(){var a=[];for(var b in this._)a.push(l(b));return a}function p(){var a=0;for(var b in this._)++a;return a}function q(){for(var a in this._)return!1;return!0}function r(){this._=Object.create(null)}function s(a){return a}function t(a,b,c){return function(){var d=c.apply(b,arguments);return d===b?a:d}}function u(a,b){if(b in a)return b;b=b.charAt(0).toUpperCase()+b.slice(1);for(var c=0,d=yg.length;d>c;++c){var e=yg[c]+b;if(e in a)return e}}function v(){}function w(){}function x(a){function b(){for(var b,d=c,e=-1,f=d.length;++e<f;)(b=d[e].on)&&b.apply(this,arguments);return a}var c=[],d=new j;return b.on=function(b,e){var f,g=d.get(b);return arguments.length<2?g&&g.on:(g&&(g.on=null,c=c.slice(0,f=c.indexOf(g)).concat(c.slice(f+1)),d.remove(b)),e&&c.push(d.set(b,{on:e})),a)},b}function y(){jg.event.preventDefault()}function z(){for(var a,b=jg.event;a=b.sourceEvent;)b=a;return b}function A(a){for(var b=new w,c=0,d=arguments.length;++c<d;)b[arguments[c]]=x(b);return b.of=function(c,d){return function(e){try{var f=e.sourceEvent=jg.event;e.target=a,jg.event=e,b[e.type].apply(c,d)}finally{jg.event=f}}},b}function B(a){return Ag(a,Eg),a}function C(a){return"function"==typeof a?a:function(){return Bg(a,this)}}function D(a){return"function"==typeof a?a:function(){return Cg(a,this)}}function E(a,b){function c(){this.removeAttribute(a)}function d(){this.removeAttributeNS(a.space,a.local)}function e(){this.setAttribute(a,b)}function f(){this.setAttributeNS(a.space,a.local,b)}function g(){var c=b.apply(this,arguments);null==c?this.removeAttribute(a):this.setAttribute(a,c)}function h(){var c=b.apply(this,arguments);null==c?this.removeAttributeNS(a.space,a.local):this.setAttributeNS(a.space,a.local,c)}return a=jg.ns.qualify(a),null==b?a.local?d:c:"function"==typeof b?a.local?h:g:a.local?f:e}function F(a){return a.trim().replace(/\s+/g," ")}function G(a){return new RegExp("(?:^|\\s+)"+jg.requote(a)+"(?:\\s+|$)","g")}function H(a){return(a+"").trim().split(/^|\s+/)}function I(a,b){function c(){for(var c=-1;++c<e;)a[c](this,b)}function d(){for(var c=-1,d=b.apply(this,arguments);++c<e;)a[c](this,d)}a=H(a).map(J);var e=a.length;return"function"==typeof b?d:c}function J(a){var b=G(a);return function(c,d){if(e=c.classList)return d?e.add(a):e.remove(a);var e=c.getAttribute("class")||"";d?(b.lastIndex=0,b.test(e)||c.setAttribute("class",F(e+" "+a))):c.setAttribute("class",F(e.replace(b," ")))}}function K(a,b,c){function d(){this.style.removeProperty(a)}function e(){this.style.setProperty(a,b,c)}function f(){var d=b.apply(this,arguments);null==d?this.style.removeProperty(a):this.style.setProperty(a,d,c)}return null==b?d:"function"==typeof b?f:e}function L(a,b){function c(){delete this[a]}function d(){this[a]=b}function e(){var c=b.apply(this,arguments);null==c?delete this[a]:this[a]=c}return null==b?c:"function"==typeof b?e:d}function M(a){function b(){var b=this.ownerDocument,c=this.namespaceURI;return c?b.createElementNS(c,a):b.createElement(a)}function c(){return this.ownerDocument.createElementNS(a.space,a.local)}return"function"==typeof a?a:(a=jg.ns.qualify(a)).local?c:b}function N(){var a=this.parentNode;a&&a.removeChild(this)}function O(a){return{__data__:a}}function P(a){return function(){return Dg(this,a)}}function Q(a){return arguments.length||(a=c),function(b,c){return b&&c?a(b.__data__,c.__data__):!b-!c}}function R(a,b){for(var c=0,d=a.length;d>c;c++)for(var e,f=a[c],g=0,h=f.length;h>g;g++)(e=f[g])&&b(e,g,c);return a}function S(a){return Ag(a,Gg),a}function T(a){var b,c;return function(d,e,f){var g,h=a[f].update,i=h.length;for(f!=c&&(c=f,b=0),e>=b&&(b=e+1);!(g=h[b])&&++b<i;);return g}}function U(a,b,c){function d(){var b=this[g];b&&(this.removeEventListener(a,b,b.$),delete this[g])}function e(){var e=i(b,lg(arguments));d.call(this),this.addEventListener(a,this[g]=e,e.$=c),e._=b}function f(){var b,c=new RegExp("^__on([^.]+)"+jg.requote(a)+"$");for(var d in this)if(b=d.match(c)){var e=this[d];this.removeEventListener(b[1],e,e.$),delete this[d]}}var g="__on"+a,h=a.indexOf("."),i=V;h>0&&(a=a.slice(0,h));var j=Hg.get(a);return j&&(a=j,i=W),h?b?e:d:b?v:f}function V(a,b){return function(c){var d=jg.event;jg.event=c,b[0]=this.__data__;try{a.apply(this,b)}finally{jg.event=d}}}function W(a,b){var c=V(a,b);return function(a){var b=this,d=a.relatedTarget;d&&(d===b||8&d.compareDocumentPosition(b))||c.call(b,a)}}function X(c){var d=".dragsuppress-"+ ++Jg,e="click"+d,f=jg.select(b(c)).on("touchmove"+d,y).on("dragstart"+d,y).on("selectstart"+d,y);if(null==Ig&&(Ig="onselectstart"in c?!1:u(c.style,"userSelect")),Ig){var g=a(c).style,h=g[Ig];g[Ig]="none"}return function(a){if(f.on(d,null),Ig&&(g[Ig]=h),a){var b=function(){f.on(e,null)};f.on(e,function(){y(),b()},!0),setTimeout(b,0)}}}function Y(a,c){c.changedTouches&&(c=c.changedTouches[0]);var d=a.ownerSVGElement||a;if(d.createSVGPoint){var e=d.createSVGPoint();if(0>Kg){var f=b(a);if(f.scrollX||f.scrollY){d=jg.select("body").append("svg").style({position:"absolute",top:0,left:0,margin:0,padding:0,border:"none"},"important");var g=d[0][0].getScreenCTM();Kg=!(g.f||g.e),d.remove()}}return Kg?(e.x=c.pageX,e.y=c.pageY):(e.x=c.clientX,e.y=c.clientY),e=e.matrixTransform(a.getScreenCTM().inverse()),[e.x,e.y]}var h=a.getBoundingClientRect();return[c.clientX-h.left-a.clientLeft,c.clientY-h.top-a.clientTop]}function Z(){return jg.event.changedTouches[0].identifier}function $(a){return a>0?1:0>a?-1:0}function _(a,b,c){return(b[0]-a[0])*(c[1]-a[1])-(b[1]-a[1])*(c[0]-a[0])}function aa(a){return a>1?0:-1>a?Ng:Math.acos(a)}function ba(a){return a>1?Qg:-1>a?-Qg:Math.asin(a)}function ca(a){return((a=Math.exp(a))-1/a)/2}function da(a){return((a=Math.exp(a))+1/a)/2}function ea(a){return((a=Math.exp(2*a))-1)/(a+1)}function fa(a){return(a=Math.sin(a/2))*a}function ga(){}function ha(a,b,c){return this instanceof ha?(this.h=+a,this.s=+b,void(this.l=+c)):arguments.length<2?a instanceof ha?new ha(a.h,a.s,a.l):va(""+a,wa,ha):new ha(a,b,c)}function ia(a,b,c){function d(a){return a>360?a-=360:0>a&&(a+=360),60>a?f+(g-f)*a/60:180>a?g:240>a?f+(g-f)*(240-a)/60:f}function e(a){return Math.round(255*d(a))}var f,g;return a=isNaN(a)?0:(a%=360)<0?a+360:a,b=isNaN(b)?0:0>b?0:b>1?1:b,c=0>c?0:c>1?1:c,g=.5>=c?c*(1+b):c+b-c*b,f=2*c-g,new ra(e(a+120),e(a),e(a-120))}function ja(a,b,c){return this instanceof ja?(this.h=+a,this.c=+b,void(this.l=+c)):arguments.length<2?a instanceof ja?new ja(a.h,a.c,a.l):a instanceof la?na(a.l,a.a,a.b):na((a=xa((a=jg.rgb(a)).r,a.g,a.b)).l,a.a,a.b):new ja(a,b,c)}function ka(a,b,c){return isNaN(a)&&(a=0),isNaN(b)&&(b=0),new la(c,Math.cos(a*=Rg)*b,Math.sin(a)*b)}function la(a,b,c){return this instanceof la?(this.l=+a,this.a=+b,void(this.b=+c)):arguments.length<2?a instanceof la?new la(a.l,a.a,a.b):a instanceof ja?ka(a.h,a.c,a.l):xa((a=ra(a)).r,a.g,a.b):new la(a,b,c)}function ma(a,b,c){var d=(a+16)/116,e=d+b/500,f=d-c/200;return e=oa(e)*ah,d=oa(d)*bh,f=oa(f)*ch,new ra(qa(3.2404542*e-1.5371385*d-.4985314*f),qa(-.969266*e+1.8760108*d+.041556*f),qa(.0556434*e-.2040259*d+1.0572252*f))}function na(a,b,c){return a>0?new ja(Math.atan2(c,b)*Sg,Math.sqrt(b*b+c*c),a):new ja(NaN,NaN,a)}function oa(a){return a>.206893034?a*a*a:(a-4/29)/7.787037}function pa(a){return a>.008856?Math.pow(a,1/3):7.787037*a+4/29}function qa(a){return Math.round(255*(.00304>=a?12.92*a:1.055*Math.pow(a,1/2.4)-.055))}function ra(a,b,c){return this instanceof ra?(this.r=~~a,this.g=~~b,void(this.b=~~c)):arguments.length<2?a instanceof ra?new ra(a.r,a.g,a.b):va(""+a,ra,ia):new ra(a,b,c)}function sa(a){return new ra(a>>16,a>>8&255,255&a)}function ta(a){return sa(a)+""}function ua(a){return 16>a?"0"+Math.max(0,a).toString(16):Math.min(255,a).toString(16)}function va(a,b,c){var d,e,f,g=0,h=0,i=0;if(d=/([a-z]+)\((.*)\)/i.exec(a))switch(e=d[2].split(","),d[1]){case"hsl":return c(parseFloat(e[0]),parseFloat(e[1])/100,parseFloat(e[2])/100);case"rgb":return b(za(e[0]),za(e[1]),za(e[2]))}return(f=fh.get(a.toLowerCase()))?b(f.r,f.g,f.b):(null==a||"#"!==a.charAt(0)||isNaN(f=parseInt(a.slice(1),16))||(4===a.length?(g=(3840&f)>>4,g=g>>4|g,h=240&f,h=h>>4|h,i=15&f,i=i<<4|i):7===a.length&&(g=(16711680&f)>>16,h=(65280&f)>>8,i=255&f)),b(g,h,i))}function wa(a,b,c){var d,e,f=Math.min(a/=255,b/=255,c/=255),g=Math.max(a,b,c),h=g-f,i=(g+f)/2;return h?(e=.5>i?h/(g+f):h/(2-g-f),d=a==g?(b-c)/h+(c>b?6:0):b==g?(c-a)/h+2:(a-b)/h+4,d*=60):(d=NaN,e=i>0&&1>i?0:d),new ha(d,e,i)}function xa(a,b,c){a=ya(a),b=ya(b),c=ya(c);var d=pa((.4124564*a+.3575761*b+.1804375*c)/ah),e=pa((.2126729*a+.7151522*b+.072175*c)/bh),f=pa((.0193339*a+.119192*b+.9503041*c)/ch);return la(116*e-16,500*(d-e),200*(e-f))}function ya(a){return(a/=255)<=.04045?a/12.92:Math.pow((a+.055)/1.055,2.4)}function za(a){var b=parseFloat(a);return"%"===a.charAt(a.length-1)?Math.round(2.55*b):b}function Aa(a){return"function"==typeof a?a:function(){return a}}function Ba(a){return function(b,c,d){return 2===arguments.length&&"function"==typeof c&&(d=c,c=null),Ca(b,c,a,d)}}function Ca(a,b,c,d){function e(){var a,b=i.status;if(!b&&Ea(i)||b>=200&&300>b||304===b){try{a=c.call(f,i)}catch(d){return void g.error.call(f,d)}g.load.call(f,a)}else g.error.call(f,i)}var f={},g=jg.dispatch("beforesend","progress","load","error"),h={},i=new XMLHttpRequest,j=null;return!this.XDomainRequest||"withCredentials"in i||!/^(http(s)?:)?\/\//.test(a)||(i=new XDomainRequest),"onload"in i?i.onload=i.onerror=e:i.onreadystatechange=function(){i.readyState>3&&e()},i.onprogress=function(a){var b=jg.event;jg.event=a;try{g.progress.call(f,i)}finally{jg.event=b}},f.header=function(a,b){return a=(a+"").toLowerCase(),arguments.length<2?h[a]:(null==b?delete h[a]:h[a]=b+"",f)},f.mimeType=function(a){return arguments.length?(b=null==a?null:a+"",f):b},f.responseType=function(a){return arguments.length?(j=a,f):j},f.response=function(a){return c=a,f},["get","post"].forEach(function(a){f[a]=function(){return f.send.apply(f,[a].concat(lg(arguments)))}}),f.send=function(c,d,e){if(2===arguments.length&&"function"==typeof d&&(e=d,d=null),i.open(c,a,!0),null==b||"accept"in h||(h.accept=b+",*/*"),i.setRequestHeader)for(var k in h)i.setRequestHeader(k,h[k]);return null!=b&&i.overrideMimeType&&i.overrideMimeType(b),null!=j&&(i.responseType=j),null!=e&&f.on("error",e).on("load",function(a){e(null,a)}),g.beforesend.call(f,i),i.send(null==d?null:d),f},f.abort=function(){return i.abort(),f},jg.rebind(f,g,"on"),null==d?f:f.get(Da(d))}function Da(a){return 1===a.length?function(b,c){a(null==b?c:null)}:a}function Ea(a){var b=a.responseType;return b&&"text"!==b?a.response:a.responseText}function Fa(){var a=Ga(),b=Ha()-a;b>24?(isFinite(b)&&(clearTimeout(jh),jh=setTimeout(Fa,b)),ih=0):(ih=1,lh(Fa))}function Ga(){var a=Date.now();for(kh=gh;kh;)a>=kh.t&&(kh.f=kh.c(a-kh.t)),kh=kh.n;return a}function Ha(){for(var a,b=gh,c=1/0;b;)b.f?b=a?a.n=b.n:gh=b.n:(b.t<c&&(c=b.t),b=(a=b).n);return hh=a,c}function Ia(a,b){return b-(a?Math.ceil(Math.log(a)/Math.LN10):1)}function Ja(a,b){var c=Math.pow(10,3*vg(8-b));return{scale:b>8?function(a){return a/c}:function(a){return a*c},symbol:a}}function Ka(a){var b=a.decimal,c=a.thousands,d=a.grouping,e=a.currency,f=d&&c?function(a,b){for(var e=a.length,f=[],g=0,h=d[0],i=0;e>0&&h>0&&(i+h+1>b&&(h=Math.max(1,b-i)),f.push(a.substring(e-=h,e+h)),!((i+=h+1)>b));)h=d[g=(g+1)%d.length];return f.reverse().join(c)}:s;return function(a){var c=nh.exec(a),d=c[1]||" ",g=c[2]||">",h=c[3]||"-",i=c[4]||"",j=c[5],k=+c[6],l=c[7],m=c[8],n=c[9],o=1,p="",q="",r=!1,s=!0;switch(m&&(m=+m.substring(1)),(j||"0"===d&&"="===g)&&(j=d="0",g="="),n){case"n":l=!0,n="g";break;case"%":o=100,q="%",n="f";break;case"p":o=100,q="%",n="r";break;case"b":case"o":case"x":case"X":"#"===i&&(p="0"+n.toLowerCase());case"c":s=!1;case"d":r=!0,m=0;break;case"s":o=-1,n="r"}"$"===i&&(p=e[0],q=e[1]),"r"!=n||m||(n="g"),null!=m&&("g"==n?m=Math.max(1,Math.min(21,m)):("e"==n||"f"==n)&&(m=Math.max(0,Math.min(20,m)))),n=oh.get(n)||La;var t=j&&l;return function(a){var c=q;if(r&&a%1)return"";var e=0>a||0===a&&0>1/a?(a=-a,"-"):"-"===h?"":h;if(0>o){var i=jg.formatPrefix(a,m);a=i.scale(a),c=i.symbol+q}else a*=o;a=n(a,m);var u,v,w=a.lastIndexOf(".");if(0>w){var x=s?a.lastIndexOf("e"):-1;0>x?(u=a,v=""):(u=a.substring(0,x),v=a.substring(x))}else u=a.substring(0,w),v=b+a.substring(w+1);!j&&l&&(u=f(u,1/0));var y=p.length+u.length+v.length+(t?0:e.length),z=k>y?new Array(y=k-y+1).join(d):"";return t&&(u=f(z+u,z.length?k-v.length:1/0)),e+=p,a=u+v,("<"===g?e+a+z:">"===g?z+e+a:"^"===g?z.substring(0,y>>=1)+e+a+z.substring(y):e+(t?a:z+a))+c}}}function La(a){return a+""}function Ma(){this._=new Date(arguments.length>1?Date.UTC.apply(this,arguments):arguments[0])}function Na(a,b,c){function d(b){var c=a(b),d=f(c,1);return d-b>b-c?c:d}function e(c){return b(c=a(new qh(c-1)),1),c}function f(a,c){return b(a=new qh(+a),c),a}function g(a,d,f){var g=e(a),h=[];if(f>1)for(;d>g;)c(g)%f||h.push(new Date(+g)),b(g,1);else for(;d>g;)h.push(new Date(+g)),b(g,1);return h}function h(a,b,c){try{qh=Ma;var d=new Ma;return d._=a,g(d,b,c)}finally{qh=Date}}a.floor=a,a.round=d,a.ceil=e,a.offset=f,a.range=g;var i=a.utc=Oa(a);return i.floor=i,i.round=Oa(d),i.ceil=Oa(e),i.offset=Oa(f),i.range=h,a}function Oa(a){return function(b,c){try{qh=Ma;var d=new Ma;return d._=b,a(d,c)._}finally{qh=Date}}}function Pa(a){function b(a){function b(b){for(var c,e,f,g=[],h=-1,i=0;++h<d;)37===a.charCodeAt(h)&&(g.push(a.slice(i,h)),null!=(e=sh[c=a.charAt(++h)])&&(c=a.charAt(++h)),(f=C[c])&&(c=f(b,null==e?"e"===c?" ":"0":e)),g.push(c),i=h+1);return g.push(a.slice(i,h)),g.join("")}var d=a.length;return b.parse=function(b){var d={y:1900,m:0,d:1,H:0,M:0,S:0,L:0,Z:null},e=c(d,a,b,0);if(e!=b.length)return null;"p"in d&&(d.H=d.H%12+12*d.p);var f=null!=d.Z&&qh!==Ma,g=new(f?Ma:qh);return"j"in d?g.setFullYear(d.y,0,d.j):"w"in d&&("W"in d||"U"in d)?(g.setFullYear(d.y,0,1),g.setFullYear(d.y,0,"W"in d?(d.w+6)%7+7*d.W-(g.getDay()+5)%7:d.w+7*d.U-(g.getDay()+6)%7)):g.setFullYear(d.y,d.m,d.d),g.setHours(d.H+(d.Z/100|0),d.M+d.Z%100,d.S,d.L),f?g._:g},b.toString=function(){return a},b}function c(a,b,c,d){for(var e,f,g,h=0,i=b.length,j=c.length;i>h;){if(d>=j)return-1;if(e=b.charCodeAt(h++),37===e){if(g=b.charAt(h++),f=D[g in sh?b.charAt(h++):g],!f||(d=f(a,c,d))<0)return-1}else if(e!=c.charCodeAt(d++))return-1}return d}function d(a,b,c){w.lastIndex=0;var d=w.exec(b.slice(c));return d?(a.w=x.get(d[0].toLowerCase()),c+d[0].length):-1}function e(a,b,c){u.lastIndex=0;var d=u.exec(b.slice(c));return d?(a.w=v.get(d[0].toLowerCase()),c+d[0].length):-1}function f(a,b,c){A.lastIndex=0;var d=A.exec(b.slice(c));return d?(a.m=B.get(d[0].toLowerCase()),c+d[0].length):-1}function g(a,b,c){y.lastIndex=0;var d=y.exec(b.slice(c));return d?(a.m=z.get(d[0].toLowerCase()),c+d[0].length):-1}function h(a,b,d){return c(a,C.c.toString(),b,d)}function i(a,b,d){return c(a,C.x.toString(),b,d)}function j(a,b,d){return c(a,C.X.toString(),b,d)}function k(a,b,c){var d=t.get(b.slice(c,c+=2).toLowerCase());return null==d?-1:(a.p=d,c)}var l=a.dateTime,m=a.date,n=a.time,o=a.periods,p=a.days,q=a.shortDays,r=a.months,s=a.shortMonths;b.utc=function(a){function c(a){try{qh=Ma;var b=new qh;return b._=a,d(b)}finally{qh=Date}}var d=b(a);return c.parse=function(a){try{qh=Ma;var b=d.parse(a);return b&&b._}finally{qh=Date}},c.toString=d.toString,c},b.multi=b.utc.multi=hb;var t=jg.map(),u=Ra(p),v=Sa(p),w=Ra(q),x=Sa(q),y=Ra(r),z=Sa(r),A=Ra(s),B=Sa(s);o.forEach(function(a,b){t.set(a.toLowerCase(),b)});var C={a:function(a){return q[a.getDay()]},A:function(a){return p[a.getDay()]},b:function(a){return s[a.getMonth()]},B:function(a){return r[a.getMonth()]},c:b(l),d:function(a,b){return Qa(a.getDate(),b,2)},e:function(a,b){return Qa(a.getDate(),b,2)},H:function(a,b){return Qa(a.getHours(),b,2)},I:function(a,b){return Qa(a.getHours()%12||12,b,2)},j:function(a,b){return Qa(1+ph.dayOfYear(a),b,3)},L:function(a,b){return Qa(a.getMilliseconds(),b,3)},m:function(a,b){return Qa(a.getMonth()+1,b,2)},M:function(a,b){return Qa(a.getMinutes(),b,2)},p:function(a){return o[+(a.getHours()>=12)]},S:function(a,b){return Qa(a.getSeconds(),b,2)},U:function(a,b){return Qa(ph.sundayOfYear(a),b,2)},w:function(a){return a.getDay()},W:function(a,b){return Qa(ph.mondayOfYear(a),b,2)},x:b(m),X:b(n),y:function(a,b){return Qa(a.getFullYear()%100,b,2)},Y:function(a,b){return Qa(a.getFullYear()%1e4,b,4)},Z:fb,"%":function(){return"%"}},D={a:d,A:e,b:f,B:g,c:h,d:_a,e:_a,H:bb,I:bb,j:ab,L:eb,m:$a,M:cb,p:k,S:db,U:Ua,w:Ta,W:Va,x:i,X:j,y:Xa,Y:Wa,Z:Ya,"%":gb};return b}function Qa(a,b,c){var d=0>a?"-":"",e=(d?-a:a)+"",f=e.length;return d+(c>f?new Array(c-f+1).join(b)+e:e)}function Ra(a){return new RegExp("^(?:"+a.map(jg.requote).join("|")+")","i")}function Sa(a){for(var b=new j,c=-1,d=a.length;++c<d;)b.set(a[c].toLowerCase(),c);return b}function Ta(a,b,c){th.lastIndex=0;var d=th.exec(b.slice(c,c+1));return d?(a.w=+d[0],c+d[0].length):-1}function Ua(a,b,c){th.lastIndex=0;var d=th.exec(b.slice(c));return d?(a.U=+d[0],c+d[0].length):-1}function Va(a,b,c){th.lastIndex=0;var d=th.exec(b.slice(c));return d?(a.W=+d[0],c+d[0].length):-1}function Wa(a,b,c){th.lastIndex=0;var d=th.exec(b.slice(c,c+4));return d?(a.y=+d[0],c+d[0].length):-1}function Xa(a,b,c){th.lastIndex=0;var d=th.exec(b.slice(c,c+2));return d?(a.y=Za(+d[0]),c+d[0].length):-1}function Ya(a,b,c){return/^[+-]\d{4}$/.test(b=b.slice(c,c+5))?(a.Z=-b,c+5):-1}function Za(a){return a+(a>68?1900:2e3)}function $a(a,b,c){th.lastIndex=0;var d=th.exec(b.slice(c,c+2));return d?(a.m=d[0]-1,c+d[0].length):-1}function _a(a,b,c){th.lastIndex=0;var d=th.exec(b.slice(c,c+2));return d?(a.d=+d[0],c+d[0].length):-1}function ab(a,b,c){th.lastIndex=0;var d=th.exec(b.slice(c,c+3));return d?(a.j=+d[0],c+d[0].length):-1}function bb(a,b,c){th.lastIndex=0;var d=th.exec(b.slice(c,c+2));return d?(a.H=+d[0],c+d[0].length):-1}function cb(a,b,c){th.lastIndex=0;var d=th.exec(b.slice(c,c+2));return d?(a.M=+d[0],c+d[0].length):-1}function db(a,b,c){th.lastIndex=0;var d=th.exec(b.slice(c,c+2));return d?(a.S=+d[0],c+d[0].length):-1}function eb(a,b,c){th.lastIndex=0;var d=th.exec(b.slice(c,c+3));return d?(a.L=+d[0],c+d[0].length):-1}function fb(a){var b=a.getTimezoneOffset(),c=b>0?"-":"+",d=vg(b)/60|0,e=vg(b)%60;return c+Qa(d,"0",2)+Qa(e,"0",2)}function gb(a,b,c){uh.lastIndex=0;var d=uh.exec(b.slice(c,c+1));return d?c+d[0].length:-1}function hb(a){for(var b=a.length,c=-1;++c<b;)a[c][0]=this(a[c][0]);return function(b){for(var c=0,d=a[c];!d[1](b);)d=a[++c];return d[0](b)}}function ib(){}function jb(a,b,c){var d=c.s=a+b,e=d-a,f=d-e;c.t=a-f+(b-e)}function kb(a,b){a&&yh.hasOwnProperty(a.type)&&yh[a.type](a,b)}function lb(a,b,c){var d,e=-1,f=a.length-c;for(b.lineStart();++e<f;)d=a[e],b.point(d[0],d[1],d[2]);b.lineEnd()}function mb(a,b){var c=-1,d=a.length;for(b.polygonStart();++c<d;)lb(a[c],b,1);b.polygonEnd()}function nb(){function a(a,b){a*=Rg,b=b*Rg/2+Ng/4;var c=a-d,g=c>=0?1:-1,h=g*c,i=Math.cos(b),j=Math.sin(b),k=f*j,l=e*i+k*Math.cos(h),m=k*g*Math.sin(h);Ah.add(Math.atan2(m,l)),d=a,e=i,f=j}var b,c,d,e,f;Bh.point=function(g,h){Bh.point=a,d=(b=g)*Rg,e=Math.cos(h=(c=h)*Rg/2+Ng/4),f=Math.sin(h)},Bh.lineEnd=function(){a(b,c)}}function ob(a){var b=a[0],c=a[1],d=Math.cos(c);return[d*Math.cos(b),d*Math.sin(b),Math.sin(c)]}function pb(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]}function qb(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]]}function rb(a,b){a[0]+=b[0],a[1]+=b[1],a[2]+=b[2]}function sb(a,b){return[a[0]*b,a[1]*b,a[2]*b]}function tb(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);a[0]/=b,a[1]/=b,a[2]/=b}function ub(a){return[Math.atan2(a[1],a[0]),ba(a[2])]}function vb(a,b){return vg(a[0]-b[0])<Lg&&vg(a[1]-b[1])<Lg}function wb(a,b){a*=Rg;var c=Math.cos(b*=Rg);xb(c*Math.cos(a),c*Math.sin(a),Math.sin(b))}function xb(a,b,c){++Ch,Eh+=(a-Eh)/Ch,Fh+=(b-Fh)/Ch,Gh+=(c-Gh)/Ch}function yb(){function a(a,e){a*=Rg;var f=Math.cos(e*=Rg),g=f*Math.cos(a),h=f*Math.sin(a),i=Math.sin(e),j=Math.atan2(Math.sqrt((j=c*i-d*h)*j+(j=d*g-b*i)*j+(j=b*h-c*g)*j),b*g+c*h+d*i);Dh+=j,Hh+=j*(b+(b=g)),Ih+=j*(c+(c=h)),Jh+=j*(d+(d=i)),xb(b,c,d)}var b,c,d;Nh.point=function(e,f){e*=Rg;var g=Math.cos(f*=Rg);b=g*Math.cos(e),c=g*Math.sin(e),d=Math.sin(f),Nh.point=a,xb(b,c,d)}}function zb(){Nh.point=wb}function Ab(){function a(a,b){a*=Rg;var c=Math.cos(b*=Rg),g=c*Math.cos(a),h=c*Math.sin(a),i=Math.sin(b),j=e*i-f*h,k=f*g-d*i,l=d*h-e*g,m=Math.sqrt(j*j+k*k+l*l),n=d*g+e*h+f*i,o=m&&-aa(n)/m,p=Math.atan2(m,n);Kh+=o*j,Lh+=o*k,Mh+=o*l,Dh+=p,Hh+=p*(d+(d=g)),Ih+=p*(e+(e=h)),Jh+=p*(f+(f=i)),xb(d,e,f)}var b,c,d,e,f;Nh.point=function(g,h){b=g,c=h,Nh.point=a,g*=Rg;var i=Math.cos(h*=Rg);d=i*Math.cos(g),e=i*Math.sin(g),f=Math.sin(h),xb(d,e,f)},Nh.lineEnd=function(){a(b,c),Nh.lineEnd=zb,Nh.point=wb}}function Bb(a,b){function c(c,d){return c=a(c,d),b(c[0],c[1])}return a.invert&&b.invert&&(c.invert=function(c,d){return c=b.invert(c,d),c&&a.invert(c[0],c[1])}),c}function Cb(){return!0}function Db(a,b,c,d,e){var f=[],g=[];if(a.forEach(function(a){if(!((b=a.length-1)<=0)){var b,c=a[0],d=a[b];if(vb(c,d)){e.lineStart();for(var h=0;b>h;++h)e.point((c=a[h])[0],c[1]);return void e.lineEnd()}var i=new Fb(c,a,null,!0),j=new Fb(c,null,i,!1);i.o=j,f.push(i),g.push(j),i=new Fb(d,a,null,!1),j=new Fb(d,null,i,!0),i.o=j,f.push(i),g.push(j)}}),g.sort(b),Eb(f),Eb(g),f.length){for(var h=0,i=c,j=g.length;j>h;++h)g[h].e=i=!i;for(var k,l,m=f[0];;){for(var n=m,o=!0;n.v;)if((n=n.n)===m)return;k=n.z,e.lineStart();do{if(n.v=n.o.v=!0,n.e){if(o)for(var h=0,j=k.length;j>h;++h)e.point((l=k[h])[0],l[1]);else d(n.x,n.n.x,1,e);n=n.n}else{if(o){k=n.p.z;for(var h=k.length-1;h>=0;--h)e.point((l=k[h])[0],l[1])}else d(n.x,n.p.x,-1,e);n=n.p}n=n.o,k=n.z,o=!o}while(!n.v);e.lineEnd()}}}function Eb(a){if(b=a.length){for(var b,c,d=0,e=a[0];++d<b;)e.n=c=a[d],c.p=e,e=c;e.n=c=a[0],c.p=e}}function Fb(a,b,c,d){this.x=a,this.z=b,this.o=c,this.e=d,this.v=!1,this.n=this.p=null}function Gb(a,b,c,d){return function(e,f){function g(b,c){var d=e(b,c);a(b=d[0],c=d[1])&&f.point(b,c)}function h(a,b){var c=e(a,b);q.point(c[0],c[1])}function i(){s.point=h,q.lineStart()}function j(){s.point=g,q.lineEnd()}function k(a,b){p.push([a,b]);var c=e(a,b);u.point(c[0],c[1])}function l(){u.lineStart(),p=[]}function m(){k(p[0][0],p[0][1]),u.lineEnd();var a,b=u.clean(),c=t.buffer(),d=c.length;if(p.pop(),o.push(p),p=null,d)if(1&b){a=c[0];var e,d=a.length-1,g=-1;if(d>0){for(v||(f.polygonStart(),v=!0),f.lineStart();++g<d;)f.point((e=a[g])[0],e[1]);f.lineEnd()}}else d>1&&2&b&&c.push(c.pop().concat(c.shift())),n.push(c.filter(Hb))}var n,o,p,q=b(f),r=e.invert(d[0],d[1]),s={point:g,lineStart:i,lineEnd:j,polygonStart:function(){s.point=k,s.lineStart=l,s.lineEnd=m,n=[],o=[]},polygonEnd:function(){s.point=g,s.lineStart=i,s.lineEnd=j,n=jg.merge(n);var a=Nb(r,o);n.length?(v||(f.polygonStart(),v=!0),Db(n,Jb,a,c,f)):a&&(v||(f.polygonStart(),v=!0),f.lineStart(),c(null,null,1,f),f.lineEnd()),v&&(f.polygonEnd(),v=!1),n=o=null},sphere:function(){f.polygonStart(),f.lineStart(),c(null,null,1,f),f.lineEnd(),f.polygonEnd()}},t=Ib(),u=b(t),v=!1;return s}}function Hb(a){return a.length>1}function Ib(){var a,b=[];return{lineStart:function(){b.push(a=[])},point:function(b,c){a.push([b,c])},lineEnd:v,buffer:function(){var c=b;return b=[],a=null,c},rejoin:function(){b.length>1&&b.push(b.pop().concat(b.shift()))}}}function Jb(a,b){return((a=a.x)[0]<0?a[1]-Qg-Lg:Qg-a[1])-((b=b.x)[0]<0?b[1]-Qg-Lg:Qg-b[1])}function Kb(a){var b,c=NaN,d=NaN,e=NaN;return{lineStart:function(){a.lineStart(),b=1},point:function(f,g){var h=f>0?Ng:-Ng,i=vg(f-c);vg(i-Ng)<Lg?(a.point(c,d=(d+g)/2>0?Qg:-Qg),a.point(e,d),a.lineEnd(),a.lineStart(),a.point(h,d),a.point(f,d),b=0):e!==h&&i>=Ng&&(vg(c-e)<Lg&&(c-=e*Lg),vg(f-h)<Lg&&(f-=h*Lg),d=Lb(c,d,f,g),a.point(e,d),a.lineEnd(),a.lineStart(),a.point(h,d),b=0),a.point(c=f,d=g),e=h},lineEnd:function(){a.lineEnd(),c=d=NaN},clean:function(){return 2-b}}}function Lb(a,b,c,d){var e,f,g=Math.sin(a-c);return vg(g)>Lg?Math.atan((Math.sin(b)*(f=Math.cos(d))*Math.sin(c)-Math.sin(d)*(e=Math.cos(b))*Math.sin(a))/(e*f*g)):(b+d)/2}function Mb(a,b,c,d){var e;if(null==a)e=c*Qg,d.point(-Ng,e),d.point(0,e),d.point(Ng,e),d.point(Ng,0),d.point(Ng,-e),d.point(0,-e),d.point(-Ng,-e),d.point(-Ng,0),d.point(-Ng,e);else if(vg(a[0]-b[0])>Lg){var f=a[0]<b[0]?Ng:-Ng;e=c*f/2,d.point(-f,e),d.point(0,e),d.point(f,e)}else d.point(b[0],b[1])}function Nb(a,b){var c=a[0],d=a[1],e=[Math.sin(c),-Math.cos(c),0],f=0,g=0;Ah.reset();for(var h=0,i=b.length;i>h;++h){var j=b[h],k=j.length;if(k)for(var l=j[0],m=l[0],n=l[1]/2+Ng/4,o=Math.sin(n),p=Math.cos(n),q=1;;){q===k&&(q=0),a=j[q];var r=a[0],s=a[1]/2+Ng/4,t=Math.sin(s),u=Math.cos(s),v=r-m,w=v>=0?1:-1,x=w*v,y=x>Ng,z=o*t;if(Ah.add(Math.atan2(z*w*Math.sin(x),p*u+z*Math.cos(x))),f+=y?v+w*Og:v,y^m>=c^r>=c){var A=qb(ob(l),ob(a));tb(A);var B=qb(e,A);tb(B);var C=(y^v>=0?-1:1)*ba(B[2]);(d>C||d===C&&(A[0]||A[1]))&&(g+=y^v>=0?1:-1)}if(!q++)break;m=r,o=t,p=u,l=a}}return(-Lg>f||Lg>f&&0>Ah)^1&g}function Ob(a){function b(a,b){return Math.cos(a)*Math.cos(b)>f}function c(a){var c,f,i,j,k;return{lineStart:function(){j=i=!1,k=1},point:function(l,m){var n,o=[l,m],p=b(l,m),q=g?p?0:e(l,m):p?e(l+(0>l?Ng:-Ng),m):0;if(!c&&(j=i=p)&&a.lineStart(),p!==i&&(n=d(c,o),(vb(c,n)||vb(o,n))&&(o[0]+=Lg,o[1]+=Lg,p=b(o[0],o[1]))),p!==i)k=0,p?(a.lineStart(),n=d(o,c),a.point(n[0],n[1])):(n=d(c,o),a.point(n[0],n[1]),a.lineEnd()),c=n;else if(h&&c&&g^p){var r;q&f||!(r=d(o,c,!0))||(k=0,g?(a.lineStart(),a.point(r[0][0],r[0][1]),a.point(r[1][0],r[1][1]),a.lineEnd()):(a.point(r[1][0],r[1][1]),a.lineEnd(),a.lineStart(),a.point(r[0][0],r[0][1])))}!p||c&&vb(c,o)||a.point(o[0],o[1]),c=o,i=p,f=q},lineEnd:function(){i&&a.lineEnd(),c=null},clean:function(){return k|(j&&i)<<1}}}function d(a,b,c){var d=ob(a),e=ob(b),g=[1,0,0],h=qb(d,e),i=pb(h,h),j=h[0],k=i-j*j;if(!k)return!c&&a;var l=f*i/k,m=-f*j/k,n=qb(g,h),o=sb(g,l),p=sb(h,m);rb(o,p);var q=n,r=pb(o,q),s=pb(q,q),t=r*r-s*(pb(o,o)-1);if(!(0>t)){var u=Math.sqrt(t),v=sb(q,(-r-u)/s);if(rb(v,o),v=ub(v),!c)return v;var w,x=a[0],y=b[0],z=a[1],A=b[1];x>y&&(w=x,x=y,y=w);var B=y-x,C=vg(B-Ng)<Lg,D=C||Lg>B;if(!C&&z>A&&(w=z,z=A,A=w),D?C?z+A>0^v[1]<(vg(v[0]-x)<Lg?z:A):z<=v[1]&&v[1]<=A:B>Ng^(x<=v[0]&&v[0]<=y)){var E=sb(q,(-r+u)/s);return rb(E,o),[v,ub(E)]}}}function e(b,c){var d=g?a:Ng-a,e=0;return-d>b?e|=1:b>d&&(e|=2),-d>c?e|=4:c>d&&(e|=8),e}var f=Math.cos(a),g=f>0,h=vg(f)>Lg,i=nc(a,6*Rg);return Gb(b,c,i,g?[0,-a]:[-Ng,a-Ng])}function Pb(a,b,c,d){return function(e){var f,g=e.a,h=e.b,i=g.x,j=g.y,k=h.x,l=h.y,m=0,n=1,o=k-i,p=l-j;if(f=a-i,o||!(f>0)){if(f/=o,0>o){if(m>f)return;n>f&&(n=f)}else if(o>0){if(f>n)return;f>m&&(m=f)}if(f=c-i,o||!(0>f)){if(f/=o,0>o){if(f>n)return;f>m&&(m=f)}else if(o>0){if(m>f)return;n>f&&(n=f)}if(f=b-j,p||!(f>0)){if(f/=p,0>p){if(m>f)return;n>f&&(n=f)}else if(p>0){if(f>n)return;f>m&&(m=f)}if(f=d-j,p||!(0>f)){if(f/=p,0>p){if(f>n)return;f>m&&(m=f)}else if(p>0){if(m>f)return;n>f&&(n=f)}return m>0&&(e.a={x:i+m*o,y:j+m*p}),1>n&&(e.b={x:i+n*o,y:j+n*p}),e}}}}}}function Qb(a,b,c,d){function e(d,e){return vg(d[0]-a)<Lg?e>0?0:3:vg(d[0]-c)<Lg?e>0?2:1:vg(d[1]-b)<Lg?e>0?1:0:e>0?3:2}function f(a,b){return g(a.x,b.x)}function g(a,b){var c=e(a,1),d=e(b,1);return c!==d?c-d:0===c?b[1]-a[1]:1===c?a[0]-b[0]:2===c?a[1]-b[1]:b[0]-a[0]}return function(h){function i(a){for(var b=0,c=q.length,d=a[1],e=0;c>e;++e)for(var f,g=1,h=q[e],i=h.length,j=h[0];i>g;++g)f=h[g],j[1]<=d?f[1]>d&&_(j,f,a)>0&&++b:f[1]<=d&&_(j,f,a)<0&&--b,j=f;return 0!==b}function j(f,h,i,j){var k=0,l=0;if(null==f||(k=e(f,i))!==(l=e(h,i))||g(f,h)<0^i>0){do j.point(0===k||3===k?a:c,k>1?d:b);while((k=(k+i+4)%4)!==l)}else j.point(h[0],h[1])}function k(e,f){return e>=a&&c>=e&&f>=b&&d>=f}function l(a,b){k(a,b)&&h.point(a,b)}function m(){D.point=o,q&&q.push(r=[]),y=!0,x=!1,v=w=NaN}function n(){p&&(o(s,t),u&&x&&B.rejoin(),p.push(B.buffer())),D.point=l,x&&h.lineEnd()}function o(a,b){a=Math.max(-Ph,Math.min(Ph,a)),b=Math.max(-Ph,Math.min(Ph,b));var c=k(a,b);if(q&&r.push([a,b]),y)s=a,t=b,u=c,y=!1,c&&(h.lineStart(),h.point(a,b));else if(c&&x)h.point(a,b);else{var d={a:{x:v,y:w},b:{x:a,y:b}};C(d)?(x||(h.lineStart(),h.point(d.a.x,d.a.y)),h.point(d.b.x,d.b.y),c||h.lineEnd(),z=!1):c&&(h.lineStart(),h.point(a,b),z=!1)}v=a,w=b,x=c}var p,q,r,s,t,u,v,w,x,y,z,A=h,B=Ib(),C=Pb(a,b,c,d),D={point:l,lineStart:m,lineEnd:n,polygonStart:function(){h=B,p=[],q=[],z=!0},polygonEnd:function(){h=A,p=jg.merge(p);var b=i([a,d]),c=z&&b,e=p.length;(c||e)&&(h.polygonStart(),c&&(h.lineStart(),j(null,null,1,h),h.lineEnd()),e&&Db(p,f,b,j,h),h.polygonEnd()),p=q=r=null}};return D}}function Rb(a){var b=0,c=Ng/3,d=fc(a),e=d(b,c);return e.parallels=function(a){return arguments.length?d(b=a[0]*Ng/180,c=a[1]*Ng/180):[b/Ng*180,c/Ng*180]},e}function Sb(a,b){function c(a,b){var c=Math.sqrt(f-2*e*Math.sin(b))/e;return[c*Math.sin(a*=e),g-c*Math.cos(a)]}var d=Math.sin(a),e=(d+Math.sin(b))/2,f=1+d*(2*e-d),g=Math.sqrt(f)/e;return c.invert=function(a,b){var c=g-b;return[Math.atan2(a,c)/e,ba((f-(a*a+c*c)*e*e)/(2*e))]},c}function Tb(){function a(a,b){Rh+=e*a-d*b,d=a,e=b}var b,c,d,e;Wh.point=function(f,g){Wh.point=a,b=d=f,c=e=g},Wh.lineEnd=function(){a(b,c)}}function Ub(a,b){Sh>a&&(Sh=a),a>Uh&&(Uh=a),Th>b&&(Th=b),b>Vh&&(Vh=b)}function Vb(){function a(a,b){g.push("M",a,",",b,f)}function b(a,b){g.push("M",a,",",b),h.point=c}function c(a,b){g.push("L",a,",",b)}function d(){h.point=a}function e(){g.push("Z")}var f=Wb(4.5),g=[],h={point:a,lineStart:function(){h.point=b},lineEnd:d,polygonStart:function(){h.lineEnd=e},polygonEnd:function(){h.lineEnd=d,h.point=a},pointRadius:function(a){return f=Wb(a),h},result:function(){if(g.length){var a=g.join("");return g=[],a}}};return h}function Wb(a){return"m0,"+a+"a"+a+","+a+" 0 1,1 0,"+-2*a+"a"+a+","+a+" 0 1,1 0,"+2*a+"z"}function Xb(a,b){Eh+=a,Fh+=b,++Gh}function Yb(){function a(a,d){var e=a-b,f=d-c,g=Math.sqrt(e*e+f*f);Hh+=g*(b+a)/2,Ih+=g*(c+d)/2,Jh+=g,Xb(b=a,c=d)}var b,c;Yh.point=function(d,e){Yh.point=a,Xb(b=d,c=e)}}function Zb(){Yh.point=Xb}function $b(){function a(a,b){var c=a-d,f=b-e,g=Math.sqrt(c*c+f*f);Hh+=g*(d+a)/2,Ih+=g*(e+b)/2,Jh+=g,g=e*a-d*b,Kh+=g*(d+a),Lh+=g*(e+b),Mh+=3*g,Xb(d=a,e=b)}var b,c,d,e;Yh.point=function(f,g){Yh.point=a,Xb(b=d=f,c=e=g)},Yh.lineEnd=function(){a(b,c)}}function _b(a){function b(b,c){a.moveTo(b+g,c),a.arc(b,c,g,0,Og)}function c(b,c){a.moveTo(b,c),h.point=d}function d(b,c){a.lineTo(b,c)}function e(){h.point=b}function f(){a.closePath()}var g=4.5,h={point:b,lineStart:function(){h.point=c},lineEnd:e,polygonStart:function(){h.lineEnd=f},polygonEnd:function(){h.lineEnd=e,h.point=b},pointRadius:function(a){return g=a,h},result:v};return h}function ac(a){function b(a){return(h?d:c)(a)}function c(b){return dc(b,function(c,d){c=a(c,d),b.point(c[0],c[1])})}function d(b){function c(c,d){c=a(c,d),b.point(c[0],c[1])}function d(){t=NaN,y.point=f,b.lineStart()}function f(c,d){var f=ob([c,d]),g=a(c,d);e(t,u,s,v,w,x,t=g[0],u=g[1],s=c,v=f[0],w=f[1],x=f[2],h,b),b.point(t,u)}function g(){y.point=c,b.lineEnd()}function i(){d(),y.point=j,y.lineEnd=k}function j(a,b){f(l=a,m=b),n=t,o=u,p=v,q=w,r=x,y.point=f}function k(){e(t,u,s,v,w,x,n,o,l,p,q,r,h,b),y.lineEnd=g,g()}var l,m,n,o,p,q,r,s,t,u,v,w,x,y={point:c,lineStart:d,lineEnd:g,polygonStart:function(){
b.polygonStart(),y.lineStart=i},polygonEnd:function(){b.polygonEnd(),y.lineStart=d}};return y}function e(b,c,d,h,i,j,k,l,m,n,o,p,q,r){var s=k-b,t=l-c,u=s*s+t*t;if(u>4*f&&q--){var v=h+n,w=i+o,x=j+p,y=Math.sqrt(v*v+w*w+x*x),z=Math.asin(x/=y),A=vg(vg(x)-1)<Lg||vg(d-m)<Lg?(d+m)/2:Math.atan2(w,v),B=a(A,z),C=B[0],D=B[1],E=C-b,F=D-c,G=t*E-s*F;(G*G/u>f||vg((s*E+t*F)/u-.5)>.3||g>h*n+i*o+j*p)&&(e(b,c,d,h,i,j,C,D,A,v/=y,w/=y,x,q,r),r.point(C,D),e(C,D,A,v,w,x,k,l,m,n,o,p,q,r))}}var f=.5,g=Math.cos(30*Rg),h=16;return b.precision=function(a){return arguments.length?(h=(f=a*a)>0&&16,b):Math.sqrt(f)},b}function bc(a){var b=ac(function(b,c){return a([b*Sg,c*Sg])});return function(a){return gc(b(a))}}function cc(a){this.stream=a}function dc(a,b){return{point:b,sphere:function(){a.sphere()},lineStart:function(){a.lineStart()},lineEnd:function(){a.lineEnd()},polygonStart:function(){a.polygonStart()},polygonEnd:function(){a.polygonEnd()}}}function ec(a){return fc(function(){return a})()}function fc(a){function b(a){return a=h(a[0]*Rg,a[1]*Rg),[a[0]*m+i,j-a[1]*m]}function c(a){return a=h.invert((a[0]-i)/m,(j-a[1])/m),a&&[a[0]*Sg,a[1]*Sg]}function d(){h=Bb(g=jc(r,t,u),f);var a=f(p,q);return i=n-a[0]*m,j=o+a[1]*m,e()}function e(){return k&&(k.valid=!1,k=null),b}var f,g,h,i,j,k,l=ac(function(a,b){return a=f(a,b),[a[0]*m+i,j-a[1]*m]}),m=150,n=480,o=250,p=0,q=0,r=0,t=0,u=0,v=Oh,w=s,x=null,y=null;return b.stream=function(a){return k&&(k.valid=!1),k=gc(v(g,l(w(a)))),k.valid=!0,k},b.clipAngle=function(a){return arguments.length?(v=null==a?(x=a,Oh):Ob((x=+a)*Rg),e()):x},b.clipExtent=function(a){return arguments.length?(y=a,w=a?Qb(a[0][0],a[0][1],a[1][0],a[1][1]):s,e()):y},b.scale=function(a){return arguments.length?(m=+a,d()):m},b.translate=function(a){return arguments.length?(n=+a[0],o=+a[1],d()):[n,o]},b.center=function(a){return arguments.length?(p=a[0]%360*Rg,q=a[1]%360*Rg,d()):[p*Sg,q*Sg]},b.rotate=function(a){return arguments.length?(r=a[0]%360*Rg,t=a[1]%360*Rg,u=a.length>2?a[2]%360*Rg:0,d()):[r*Sg,t*Sg,u*Sg]},jg.rebind(b,l,"precision"),function(){return f=a.apply(this,arguments),b.invert=f.invert&&c,d()}}function gc(a){return dc(a,function(b,c){a.point(b*Rg,c*Rg)})}function hc(a,b){return[a,b]}function ic(a,b){return[a>Ng?a-Og:-Ng>a?a+Og:a,b]}function jc(a,b,c){return a?b||c?Bb(lc(a),mc(b,c)):lc(a):b||c?mc(b,c):ic}function kc(a){return function(b,c){return b+=a,[b>Ng?b-Og:-Ng>b?b+Og:b,c]}}function lc(a){var b=kc(a);return b.invert=kc(-a),b}function mc(a,b){function c(a,b){var c=Math.cos(b),h=Math.cos(a)*c,i=Math.sin(a)*c,j=Math.sin(b),k=j*d+h*e;return[Math.atan2(i*f-k*g,h*d-j*e),ba(k*f+i*g)]}var d=Math.cos(a),e=Math.sin(a),f=Math.cos(b),g=Math.sin(b);return c.invert=function(a,b){var c=Math.cos(b),h=Math.cos(a)*c,i=Math.sin(a)*c,j=Math.sin(b),k=j*f-i*g;return[Math.atan2(i*f+j*g,h*d+k*e),ba(k*d-h*e)]},c}function nc(a,b){var c=Math.cos(a),d=Math.sin(a);return function(e,f,g,h){var i=g*b;null!=e?(e=oc(c,e),f=oc(c,f),(g>0?f>e:e>f)&&(e+=g*Og)):(e=a+g*Og,f=a-.5*i);for(var j,k=e;g>0?k>f:f>k;k-=i)h.point((j=ub([c,-d*Math.cos(k),-d*Math.sin(k)]))[0],j[1])}}function oc(a,b){var c=ob(b);c[0]-=a,tb(c);var d=aa(-c[1]);return((-c[2]<0?-d:d)+2*Math.PI-Lg)%(2*Math.PI)}function pc(a,b,c){var d=jg.range(a,b-Lg,c).concat(b);return function(a){return d.map(function(b){return[a,b]})}}function qc(a,b,c){var d=jg.range(a,b-Lg,c).concat(b);return function(a){return d.map(function(b){return[b,a]})}}function rc(a){return a.source}function sc(a){return a.target}function tc(a,b,c,d){var e=Math.cos(b),f=Math.sin(b),g=Math.cos(d),h=Math.sin(d),i=e*Math.cos(a),j=e*Math.sin(a),k=g*Math.cos(c),l=g*Math.sin(c),m=2*Math.asin(Math.sqrt(fa(d-b)+e*g*fa(c-a))),n=1/Math.sin(m),o=m?function(a){var b=Math.sin(a*=m)*n,c=Math.sin(m-a)*n,d=c*i+b*k,e=c*j+b*l,g=c*f+b*h;return[Math.atan2(e,d)*Sg,Math.atan2(g,Math.sqrt(d*d+e*e))*Sg]}:function(){return[a*Sg,b*Sg]};return o.distance=m,o}function uc(){function a(a,e){var f=Math.sin(e*=Rg),g=Math.cos(e),h=vg((a*=Rg)-b),i=Math.cos(h);Zh+=Math.atan2(Math.sqrt((h=g*Math.sin(h))*h+(h=d*f-c*g*i)*h),c*f+d*g*i),b=a,c=f,d=g}var b,c,d;$h.point=function(e,f){b=e*Rg,c=Math.sin(f*=Rg),d=Math.cos(f),$h.point=a},$h.lineEnd=function(){$h.point=$h.lineEnd=v}}function vc(a,b){function c(b,c){var d=Math.cos(b),e=Math.cos(c),f=a(d*e);return[f*e*Math.sin(b),f*Math.sin(c)]}return c.invert=function(a,c){var d=Math.sqrt(a*a+c*c),e=b(d),f=Math.sin(e),g=Math.cos(e);return[Math.atan2(a*f,d*g),Math.asin(d&&c*f/d)]},c}function wc(a,b){function c(a,b){g>0?-Qg+Lg>b&&(b=-Qg+Lg):b>Qg-Lg&&(b=Qg-Lg);var c=g/Math.pow(e(b),f);return[c*Math.sin(f*a),g-c*Math.cos(f*a)]}var d=Math.cos(a),e=function(a){return Math.tan(Ng/4+a/2)},f=a===b?Math.sin(a):Math.log(d/Math.cos(b))/Math.log(e(b)/e(a)),g=d*Math.pow(e(a),f)/f;return f?(c.invert=function(a,b){var c=g-b,d=$(f)*Math.sqrt(a*a+c*c);return[Math.atan2(a,c)/f,2*Math.atan(Math.pow(g/d,1/f))-Qg]},c):yc}function xc(a,b){function c(a,b){var c=f-b;return[c*Math.sin(e*a),f-c*Math.cos(e*a)]}var d=Math.cos(a),e=a===b?Math.sin(a):(d-Math.cos(b))/(b-a),f=d/e+a;return vg(e)<Lg?hc:(c.invert=function(a,b){var c=f-b;return[Math.atan2(a,c)/e,f-$(e)*Math.sqrt(a*a+c*c)]},c)}function yc(a,b){return[a,Math.log(Math.tan(Ng/4+b/2))]}function zc(a){var b,c=ec(a),d=c.scale,e=c.translate,f=c.clipExtent;return c.scale=function(){var a=d.apply(c,arguments);return a===c?b?c.clipExtent(null):c:a},c.translate=function(){var a=e.apply(c,arguments);return a===c?b?c.clipExtent(null):c:a},c.clipExtent=function(a){var g=f.apply(c,arguments);if(g===c){if(b=null==a){var h=Ng*d(),i=e();f([[i[0]-h,i[1]-h],[i[0]+h,i[1]+h]])}}else b&&(g=null);return g},c.clipExtent(null)}function Ac(a,b){return[Math.log(Math.tan(Ng/4+b/2)),-a]}function Bc(a){return a[0]}function Cc(a){return a[1]}function Dc(a){return a[2]}function Ec(a){for(var b=a.length,c=[0,1],d=2,e=2;b>e;e++){for(;d>1&&_(a[c[d-2]],a[c[d-1]],a[e])<=0;)--d;c[d++]=e}return c.slice(0,d)}function Fc(a,b){return a[0]-b[0]||a[1]-b[1]}function Gc(a,b,c){return(c[0]-b[0])*(a[1]-b[1])<(c[1]-b[1])*(a[0]-b[0])}function Hc(a,b,c,d){var e=a[0],f=c[0],g=b[0]-e,h=d[0]-f,i=a[1],j=c[1],k=b[1]-i,l=d[1]-j,m=(h*(i-j)-l*(e-f))/(l*g-h*k);return[e+m*g,i+m*k]}function Ic(a){var b=a[0],c=a[a.length-1];return!(b[0]-c[0]||b[1]-c[1])}function Jc(){cd(this),this.edge=this.site=this.circle=null}function Kc(a){var b=ki.pop()||new Jc;return b.site=a,b}function Lc(a){Vc(a),hi.remove(a),ki.push(a),cd(a)}function Mc(a){var b=a.circle,c=b.x,d=b.cy,e={x:c,y:d},f=a.P,g=a.N,h=[a];Lc(a);for(var i=f;i.circle&&vg(c-i.circle.x)<Lg&&vg(d-i.circle.cy)<Lg;)f=i.P,h.unshift(i),Lc(i),i=f;h.unshift(i),Vc(i);for(var j=g;j.circle&&vg(c-j.circle.x)<Lg&&vg(d-j.circle.cy)<Lg;)g=j.N,h.push(j),Lc(j),j=g;h.push(j),Vc(j);var k,l=h.length;for(k=1;l>k;++k)j=h[k],i=h[k-1],_c(j.edge,i.site,j.site,e);i=h[0],j=h[l-1],j.edge=Zc(i.site,j.site,null,e),Uc(i),Uc(j)}function Nc(a){for(var b,c,d,e,f=a.x,g=a.y,h=hi._;h;)if(d=Oc(h,g)-f,d>Lg)h=h.L;else{if(e=f-Pc(h,g),!(e>Lg)){d>-Lg?(b=h.P,c=h):e>-Lg?(b=h,c=h.N):b=c=h;break}if(!h.R){b=h;break}h=h.R}var i=Kc(a);if(hi.insert(b,i),b||c){if(b===c)return Vc(b),c=Kc(b.site),hi.insert(i,c),i.edge=c.edge=Zc(b.site,i.site),Uc(b),void Uc(c);if(!c)return void(i.edge=Zc(b.site,i.site));Vc(b),Vc(c);var j=b.site,k=j.x,l=j.y,m=a.x-k,n=a.y-l,o=c.site,p=o.x-k,q=o.y-l,r=2*(m*q-n*p),s=m*m+n*n,t=p*p+q*q,u={x:(q*s-n*t)/r+k,y:(m*t-p*s)/r+l};_c(c.edge,j,o,u),i.edge=Zc(j,a,null,u),c.edge=Zc(a,o,null,u),Uc(b),Uc(c)}}function Oc(a,b){var c=a.site,d=c.x,e=c.y,f=e-b;if(!f)return d;var g=a.P;if(!g)return-(1/0);c=g.site;var h=c.x,i=c.y,j=i-b;if(!j)return h;var k=h-d,l=1/f-1/j,m=k/j;return l?(-m+Math.sqrt(m*m-2*l*(k*k/(-2*j)-i+j/2+e-f/2)))/l+d:(d+h)/2}function Pc(a,b){var c=a.N;if(c)return Oc(c,b);var d=a.site;return d.y===b?d.x:1/0}function Qc(a){this.site=a,this.edges=[]}function Rc(a){for(var b,c,d,e,f,g,h,i,j,k,l=a[0][0],m=a[1][0],n=a[0][1],o=a[1][1],p=gi,q=p.length;q--;)if(f=p[q],f&&f.prepare())for(h=f.edges,i=h.length,g=0;i>g;)k=h[g].end(),d=k.x,e=k.y,j=h[++g%i].start(),b=j.x,c=j.y,(vg(d-b)>Lg||vg(e-c)>Lg)&&(h.splice(g,0,new ad($c(f.site,k,vg(d-l)<Lg&&o-e>Lg?{x:l,y:vg(b-l)<Lg?c:o}:vg(e-o)<Lg&&m-d>Lg?{x:vg(c-o)<Lg?b:m,y:o}:vg(d-m)<Lg&&e-n>Lg?{x:m,y:vg(b-m)<Lg?c:n}:vg(e-n)<Lg&&d-l>Lg?{x:vg(c-n)<Lg?b:l,y:n}:null),f.site,null)),++i)}function Sc(a,b){return b.angle-a.angle}function Tc(){cd(this),this.x=this.y=this.arc=this.site=this.cy=null}function Uc(a){var b=a.P,c=a.N;if(b&&c){var d=b.site,e=a.site,f=c.site;if(d!==f){var g=e.x,h=e.y,i=d.x-g,j=d.y-h,k=f.x-g,l=f.y-h,m=2*(i*l-j*k);if(!(m>=-Mg)){var n=i*i+j*j,o=k*k+l*l,p=(l*n-j*o)/m,q=(i*o-k*n)/m,l=q+h,r=li.pop()||new Tc;r.arc=a,r.site=e,r.x=p+g,r.y=l+Math.sqrt(p*p+q*q),r.cy=l,a.circle=r;for(var s=null,t=ji._;t;)if(r.y<t.y||r.y===t.y&&r.x<=t.x){if(!t.L){s=t.P;break}t=t.L}else{if(!t.R){s=t;break}t=t.R}ji.insert(s,r),s||(ii=r)}}}}function Vc(a){var b=a.circle;b&&(b.P||(ii=b.N),ji.remove(b),li.push(b),cd(b),a.circle=null)}function Wc(a){for(var b,c=fi,d=Pb(a[0][0],a[0][1],a[1][0],a[1][1]),e=c.length;e--;)b=c[e],(!Xc(b,a)||!d(b)||vg(b.a.x-b.b.x)<Lg&&vg(b.a.y-b.b.y)<Lg)&&(b.a=b.b=null,c.splice(e,1))}function Xc(a,b){var c=a.b;if(c)return!0;var d,e,f=a.a,g=b[0][0],h=b[1][0],i=b[0][1],j=b[1][1],k=a.l,l=a.r,m=k.x,n=k.y,o=l.x,p=l.y,q=(m+o)/2,r=(n+p)/2;if(p===n){if(g>q||q>=h)return;if(m>o){if(f){if(f.y>=j)return}else f={x:q,y:i};c={x:q,y:j}}else{if(f){if(f.y<i)return}else f={x:q,y:j};c={x:q,y:i}}}else if(d=(m-o)/(p-n),e=r-d*q,-1>d||d>1)if(m>o){if(f){if(f.y>=j)return}else f={x:(i-e)/d,y:i};c={x:(j-e)/d,y:j}}else{if(f){if(f.y<i)return}else f={x:(j-e)/d,y:j};c={x:(i-e)/d,y:i}}else if(p>n){if(f){if(f.x>=h)return}else f={x:g,y:d*g+e};c={x:h,y:d*h+e}}else{if(f){if(f.x<g)return}else f={x:h,y:d*h+e};c={x:g,y:d*g+e}}return a.a=f,a.b=c,!0}function Yc(a,b){this.l=a,this.r=b,this.a=this.b=null}function Zc(a,b,c,d){var e=new Yc(a,b);return fi.push(e),c&&_c(e,a,b,c),d&&_c(e,b,a,d),gi[a.i].edges.push(new ad(e,a,b)),gi[b.i].edges.push(new ad(e,b,a)),e}function $c(a,b,c){var d=new Yc(a,null);return d.a=b,d.b=c,fi.push(d),d}function _c(a,b,c,d){a.a||a.b?a.l===c?a.b=d:a.a=d:(a.a=d,a.l=b,a.r=c)}function ad(a,b,c){var d=a.a,e=a.b;this.edge=a,this.site=b,this.angle=c?Math.atan2(c.y-b.y,c.x-b.x):a.l===b?Math.atan2(e.x-d.x,d.y-e.y):Math.atan2(d.x-e.x,e.y-d.y)}function bd(){this._=null}function cd(a){a.U=a.C=a.L=a.R=a.P=a.N=null}function dd(a,b){var c=b,d=b.R,e=c.U;e?e.L===c?e.L=d:e.R=d:a._=d,d.U=e,c.U=d,c.R=d.L,c.R&&(c.R.U=c),d.L=c}function ed(a,b){var c=b,d=b.L,e=c.U;e?e.L===c?e.L=d:e.R=d:a._=d,d.U=e,c.U=d,c.L=d.R,c.L&&(c.L.U=c),d.R=c}function fd(a){for(;a.L;)a=a.L;return a}function gd(a,b){var c,d,e,f=a.sort(hd).pop();for(fi=[],gi=new Array(a.length),hi=new bd,ji=new bd;;)if(e=ii,f&&(!e||f.y<e.y||f.y===e.y&&f.x<e.x))(f.x!==c||f.y!==d)&&(gi[f.i]=new Qc(f),Nc(f),c=f.x,d=f.y),f=a.pop();else{if(!e)break;Mc(e.arc)}b&&(Wc(b),Rc(b));var g={cells:gi,edges:fi};return hi=ji=fi=gi=null,g}function hd(a,b){return b.y-a.y||b.x-a.x}function id(a,b,c){return(a.x-c.x)*(b.y-a.y)-(a.x-b.x)*(c.y-a.y)}function jd(a){return a.x}function kd(a){return a.y}function ld(){return{leaf:!0,nodes:[],point:null,x:null,y:null}}function md(a,b,c,d,e,f){if(!a(b,c,d,e,f)){var g=.5*(c+e),h=.5*(d+f),i=b.nodes;i[0]&&md(a,i[0],c,d,g,h),i[1]&&md(a,i[1],g,d,e,h),i[2]&&md(a,i[2],c,h,g,f),i[3]&&md(a,i[3],g,h,e,f)}}function nd(a,b,c,d,e,f,g){var h,i=1/0;return function j(a,k,l,m,n){if(!(k>f||l>g||d>m||e>n)){if(o=a.point){var o,p=b-a.x,q=c-a.y,r=p*p+q*q;if(i>r){var s=Math.sqrt(i=r);d=b-s,e=c-s,f=b+s,g=c+s,h=o}}for(var t=a.nodes,u=.5*(k+m),v=.5*(l+n),w=b>=u,x=c>=v,y=x<<1|w,z=y+4;z>y;++y)if(a=t[3&y])switch(3&y){case 0:j(a,k,l,u,v);break;case 1:j(a,u,l,m,v);break;case 2:j(a,k,v,u,n);break;case 3:j(a,u,v,m,n)}}}(a,d,e,f,g),h}function od(a){return a.x}function pd(a){return a.y}function qd(a){return a.z}function rd(){return{leaf:!0,nodes:[],point:null,x:null,y:null,z:null}}function sd(a,b,c,d,e,f,g,h){if(!a(b,c,d,e,f,g,h)){var i=.5*(c+f),j=.5*(d+g),k=.5*(e+h),l=b.nodes;l[0]&&sd(a,l[0],c,d,e,i,j,k),l[1]&&sd(a,l[1],i,d,e,f,j,k),l[2]&&sd(a,l[2],c,j,e,i,g,k),l[3]&&sd(a,l[3],i,j,e,f,g,k),l[4]&&sd(a,l[4],c,d,k,i,j,h),l[5]&&sd(a,l[5],i,d,k,f,j,h),l[6]&&sd(a,l[6],c,j,k,i,g,h),l[7]&&sd(a,l[7],i,j,k,f,g,h)}}function td(a,b,c,d,e,f,g,h,i,j){var k,l=1/0;return function m(a,n,o,p,q,r,s){if(!(n>h||o>i||p>j||e>q||f>r||g>s)){if(t=a.point){var t,u=b-a.x,v=c-a.y,w=d-a.z,x=u*u+v*v+w*w;if(l>x){var y=Math.sqrt(l=x);e=b-y,f=c-y,g=d-y,h=b+y,i=c+y,j=d+y,k=t}}for(var z=a.nodes,A=.5*(n+q),B=.5*(o+r),C=.5*(p+s),D=b>=A,E=c>=B,F=d>=C,G=F<<2|E<<1|D,H=G+8;H>G;++G)if(a=z[7&G])switch(7&G){case 0:m(a,n,o,p,A,B,C);break;case 1:m(a,A,o,p,q,B,C);break;case 2:m(a,n,B,p,A,r,C);break;case 3:m(a,A,B,p,q,r,C);break;case 4:m(a,n,o,C,A,B,s);break;case 5:m(a,A,o,C,q,B,s);break;case 6:m(a,n,B,C,A,r,s);break;case 7:m(a,A,B,C,q,r,s)}}}(a,e,f,g,h,i,j),k}function ud(a,b){a=jg.rgb(a),b=jg.rgb(b);var c=a.r,d=a.g,e=a.b,f=b.r-c,g=b.g-d,h=b.b-e;return function(a){return"#"+ua(Math.round(c+f*a))+ua(Math.round(d+g*a))+ua(Math.round(e+h*a))}}function vd(a,b){var c,d={},e={};for(c in a)c in b?d[c]=yd(a[c],b[c]):e[c]=a[c];for(c in b)c in a||(e[c]=b[c]);return function(a){for(c in d)e[c]=d[c](a);return e}}function wd(a,b){return a=+a,b=+b,function(c){return a*(1-c)+b*c}}function xd(a,b){var c,d,e,f=ni.lastIndex=oi.lastIndex=0,g=-1,h=[],i=[];for(a+="",b+="";(c=ni.exec(a))&&(d=oi.exec(b));)(e=d.index)>f&&(e=b.slice(f,e),h[g]?h[g]+=e:h[++g]=e),(c=c[0])===(d=d[0])?h[g]?h[g]+=d:h[++g]=d:(h[++g]=null,i.push({i:g,x:wd(c,d)})),f=oi.lastIndex;return f<b.length&&(e=b.slice(f),h[g]?h[g]+=e:h[++g]=e),h.length<2?i[0]?(b=i[0].x,function(a){return b(a)+""}):function(){return b}:(b=i.length,function(a){for(var c,d=0;b>d;++d)h[(c=i[d]).i]=c.x(a);return h.join("")})}function yd(a,b){for(var c,d=jg.interpolators.length;--d>=0&&!(c=jg.interpolators[d](a,b)););return c}function zd(a,b){var c,d=[],e=[],f=a.length,g=b.length,h=Math.min(a.length,b.length);for(c=0;h>c;++c)d.push(yd(a[c],b[c]));for(;f>c;++c)e[c]=a[c];for(;g>c;++c)e[c]=b[c];return function(a){for(c=0;h>c;++c)e[c]=d[c](a);return e}}function Ad(a){return function(b){return 0>=b?0:b>=1?1:a(b)}}function Bd(a){return function(b){return 1-a(1-b)}}function Cd(a){return function(b){return.5*(.5>b?a(2*b):2-a(2-2*b))}}function Dd(a){return a*a}function Ed(a){return a*a*a}function Fd(a){if(0>=a)return 0;if(a>=1)return 1;var b=a*a,c=b*a;return 4*(.5>a?c:3*(a-b)+c-.75)}function Gd(a){return function(b){return Math.pow(b,a)}}function Hd(a){return 1-Math.cos(a*Qg)}function Id(a){return Math.pow(2,10*(a-1))}function Jd(a){return 1-Math.sqrt(1-a*a)}function Kd(a,b){var c;return arguments.length<2&&(b=.45),arguments.length?c=b/Og*Math.asin(1/a):(a=1,c=b/4),function(d){return 1+a*Math.pow(2,-10*d)*Math.sin((d-c)*Og/b)}}function Ld(a){return a||(a=1.70158),function(b){return b*b*((a+1)*b-a)}}function Md(a){return 1/2.75>a?7.5625*a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375}function Nd(a,b){a=jg.hcl(a),b=jg.hcl(b);var c=a.h,d=a.c,e=a.l,f=b.h-c,g=b.c-d,h=b.l-e;return isNaN(g)&&(g=0,d=isNaN(d)?b.c:d),isNaN(f)?(f=0,c=isNaN(c)?b.h:c):f>180?f-=360:-180>f&&(f+=360),function(a){return ka(c+f*a,d+g*a,e+h*a)+""}}function Od(a,b){a=jg.hsl(a),b=jg.hsl(b);var c=a.h,d=a.s,e=a.l,f=b.h-c,g=b.s-d,h=b.l-e;return isNaN(g)&&(g=0,d=isNaN(d)?b.s:d),isNaN(f)?(f=0,c=isNaN(c)?b.h:c):f>180?f-=360:-180>f&&(f+=360),function(a){return ia(c+f*a,d+g*a,e+h*a)+""}}function Pd(a,b){a=jg.lab(a),b=jg.lab(b);var c=a.l,d=a.a,e=a.b,f=b.l-c,g=b.a-d,h=b.b-e;return function(a){return ma(c+f*a,d+g*a,e+h*a)+""}}function Qd(a,b){return b-=a,function(c){return Math.round(a+b*c)}}function Rd(a){var b=[a.a,a.b],c=[a.c,a.d],d=Td(b),e=Sd(b,c),f=Td(Ud(c,b,-e))||0;b[0]*c[1]<c[0]*b[1]&&(b[0]*=-1,b[1]*=-1,d*=-1,e*=-1),this.rotate=(d?Math.atan2(b[1],b[0]):Math.atan2(-c[0],c[1]))*Sg,this.translate=[a.e,a.f],this.scale=[d,f],this.skew=f?Math.atan2(e,f)*Sg:0}function Sd(a,b){return a[0]*b[0]+a[1]*b[1]}function Td(a){var b=Math.sqrt(Sd(a,a));return b&&(a[0]/=b,a[1]/=b),b}function Ud(a,b,c){return a[0]+=c*b[0],a[1]+=c*b[1],a}function Vd(a,b){var c,d=[],e=[],f=jg.transform(a),g=jg.transform(b),h=f.translate,i=g.translate,j=f.rotate,k=g.rotate,l=f.skew,m=g.skew,n=f.scale,o=g.scale;return h[0]!=i[0]||h[1]!=i[1]?(d.push("translate(",null,",",null,")"),e.push({i:1,x:wd(h[0],i[0])},{i:3,x:wd(h[1],i[1])})):i[0]||i[1]?d.push("translate("+i+")"):d.push(""),j!=k?(j-k>180?k+=360:k-j>180&&(j+=360),e.push({i:d.push(d.pop()+"rotate(",null,")")-2,x:wd(j,k)})):k&&d.push(d.pop()+"rotate("+k+")"),l!=m?e.push({i:d.push(d.pop()+"skewX(",null,")")-2,x:wd(l,m)}):m&&d.push(d.pop()+"skewX("+m+")"),n[0]!=o[0]||n[1]!=o[1]?(c=d.push(d.pop()+"scale(",null,",",null,")"),e.push({i:c-4,x:wd(n[0],o[0])},{i:c-2,x:wd(n[1],o[1])})):(1!=o[0]||1!=o[1])&&d.push(d.pop()+"scale("+o+")"),c=e.length,function(a){for(var b,f=-1;++f<c;)d[(b=e[f]).i]=b.x(a);return d.join("")}}function Wd(a,b){return b=(b-=a=+a)||1/b,function(c){return(c-a)/b}}function Xd(a,b){return b=(b-=a=+a)||1/b,function(c){return Math.max(0,Math.min(1,(c-a)/b))}}function Yd(a){for(var b=a.source,c=a.target,d=$d(b,c),e=[b];b!==d;)b=b.parent,e.push(b);for(var f=e.length;c!==d;)e.splice(f,0,c),c=c.parent;return e}function Zd(a){for(var b=[],c=a.parent;null!=c;)b.push(a),a=c,c=c.parent;return b.push(a),b}function $d(a,b){if(a===b)return a;for(var c=Zd(a),d=Zd(b),e=c.pop(),f=d.pop(),g=null;e===f;)g=e,e=c.pop(),f=d.pop();return g}function _d(a){a.fixed|=2}function ae(a){a.fixed&=-7}function be(a){a.fixed|=4,a.px=a.x,a.py=a.y}function ce(a){a.fixed&=-5}function de(a,b,c){var d=0,e=0;if(a.charge=0,!a.leaf)for(var f,g=a.nodes,h=g.length,i=-1;++i<h;)f=g[i],null!=f&&(de(f,b,c),a.charge+=f.charge,d+=f.charge*f.cx,e+=f.charge*f.cy);if(a.point){a.leaf||(a.point.x+=Math.random()-.5,a.point.y+=Math.random()-.5);var j=b*c[a.point.index];a.charge+=a.pointCharge=j,d+=j*a.point.x,e+=j*a.point.y}a.cx=d/a.charge,a.cy=e/a.charge}function ee(a,b,c){var d=0,e=0,f=0;if(a.charge=0,!a.leaf)for(var g,h=a.nodes,i=h.length,j=-1;++j<i;)g=h[j],null!=g&&(ee(g,b,c),a.charge+=g.charge,d+=g.charge*g.cx,e+=g.charge*g.cy,f+=g.charge*g.cz);if(a.point){a.leaf||(a.point.x+=Math.random()-.5,a.point.y+=Math.random()-.5,a.point.z+=Math.random()-.5);var k=b*c[a.point.index];a.charge+=a.pointCharge=k,d+=k*a.point.x,e+=k*a.point.y,f+=k*a.point.z}a.cx=d/a.charge,a.cy=e/a.charge,a.cz=f/a.charge}function fe(a,b){return jg.rebind(a,b,"sort","children","value"),a.nodes=a,a.links=le,a}function ge(a,b){for(var c=[a];null!=(a=c.pop());)if(b(a),(e=a.children)&&(d=e.length))for(var d,e;--d>=0;)c.push(e[d])}function he(a,b){for(var c=[a],d=[];null!=(a=c.pop());)if(d.push(a),(f=a.children)&&(e=f.length))for(var e,f,g=-1;++g<e;)c.push(f[g]);for(;null!=(a=d.pop());)b(a)}function ie(a){return a.children}function je(a){return a.value}function ke(a,b){return b.value-a.value}function le(a){return jg.merge(a.map(function(a){return(a.children||[]).map(function(b){return{source:a,target:b}})}))}function me(a){return a.x}function ne(a){return a.y}function oe(a,b,c){a.y0=b,a.y=c}function pe(a){return jg.range(a.length)}function qe(a){for(var b=-1,c=a[0].length,d=[];++b<c;)d[b]=0;return d}function re(a){for(var b,c=1,d=0,e=a[0][1],f=a.length;f>c;++c)(b=a[c][1])>e&&(d=c,e=b);return d}function se(a){return a.reduce(te,0)}function te(a,b){return a+b[1]}function ue(a,b){return ve(a,Math.ceil(Math.log(b.length)/Math.LN2+1))}function ve(a,b){for(var c=-1,d=+a[0],e=(a[1]-d)/b,f=[];++c<=b;)f[c]=e*c+d;return f}function we(a){return[jg.min(a),jg.max(a)]}function xe(a,b){return a.value-b.value}function ye(a,b){var c=a._pack_next;a._pack_next=b,b._pack_prev=a,b._pack_next=c,c._pack_prev=b}function ze(a,b){a._pack_next=b,b._pack_prev=a}function Ae(a,b){var c=b.x-a.x,d=b.y-a.y,e=a.r+b.r;return.999*e*e>c*c+d*d}function Be(a){function b(a){k=Math.min(a.x-a.r,k),l=Math.max(a.x+a.r,l),m=Math.min(a.y-a.r,m),n=Math.max(a.y+a.r,n)}if((c=a.children)&&(j=c.length)){var c,d,e,f,g,h,i,j,k=1/0,l=-(1/0),m=1/0,n=-(1/0);if(c.forEach(Ce),d=c[0],d.x=-d.r,d.y=0,b(d),j>1&&(e=c[1],e.x=e.r,e.y=0,b(e),j>2))for(f=c[2],Fe(d,e,f),b(f),ye(d,f),d._pack_prev=f,ye(f,e),e=d._pack_next,g=3;j>g;g++){Fe(d,e,f=c[g]);var o=0,p=1,q=1;for(h=e._pack_next;h!==e;h=h._pack_next,p++)if(Ae(h,f)){o=1;break}if(1==o)for(i=d._pack_prev;i!==h._pack_prev&&!Ae(i,f);i=i._pack_prev,q++);o?(q>p||p==q&&e.r<d.r?ze(d,e=h):ze(d=i,e),g--):(ye(d,f),e=f,b(f))}var r=(k+l)/2,s=(m+n)/2,t=0;for(g=0;j>g;g++)f=c[g],f.x-=r,f.y-=s,t=Math.max(t,f.r+Math.sqrt(f.x*f.x+f.y*f.y));a.r=t,c.forEach(De)}}function Ce(a){a._pack_next=a._pack_prev=a}function De(a){delete a._pack_next,delete a._pack_prev}function Ee(a,b,c,d){var e=a.children;if(a.x=b+=d*a.x,a.y=c+=d*a.y,a.r*=d,e)for(var f=-1,g=e.length;++f<g;)Ee(e[f],b,c,d)}function Fe(a,b,c){var d=a.r+c.r,e=b.x-a.x,f=b.y-a.y;if(d&&(e||f)){var g=b.r+c.r,h=e*e+f*f;g*=g,d*=d;var i=.5+(d-g)/(2*h),j=Math.sqrt(Math.max(0,2*g*(d+h)-(d-=h)*d-g*g))/(2*h);c.x=a.x+i*e+j*f,c.y=a.y+i*f-j*e}else c.x=a.x+d,c.y=a.y}function Ge(a,b){return a.parent==b.parent?1:2}function He(a){var b=a.children;return b.length?b[0]:a.t}function Ie(a){var b,c=a.children;return(b=c.length)?c[b-1]:a.t}function Je(a,b,c){var d=c/(b.i-a.i);b.c-=d,b.s+=c,a.c+=d,b.z+=c,b.m+=c}function Ke(a){for(var b,c=0,d=0,e=a.children,f=e.length;--f>=0;)b=e[f],b.z+=c,b.m+=c,c+=b.s+(d+=b.c)}function Le(a,b,c){return a.a.parent===b.parent?a.a:c}function Me(a){return 1+jg.max(a,function(a){return a.y})}function Ne(a){return a.reduce(function(a,b){return a+b.x},0)/a.length}function Oe(a){var b=a.children;return b&&b.length?Oe(b[0]):a}function Pe(a){var b,c=a.children;return c&&(b=c.length)?Pe(c[b-1]):a}function Qe(a){return{x:a.x,y:a.y,dx:a.dx,dy:a.dy}}function Re(a,b){var c=a.x+b[3],d=a.y+b[0],e=a.dx-b[1]-b[3],f=a.dy-b[0]-b[2];return 0>e&&(c+=e/2,e=0),0>f&&(d+=f/2,f=0),{x:c,y:d,dx:e,dy:f}}function Se(a){var b=a[0],c=a[a.length-1];return c>b?[b,c]:[c,b]}function Te(a){return a.rangeExtent?a.rangeExtent():Se(a.range())}function Ue(a,b,c,d){var e=c(a[0],a[1]),f=d(b[0],b[1]);return function(a){return f(e(a))}}function Ve(a,b){var c,d=0,e=a.length-1,f=a[d],g=a[e];return f>g&&(c=d,d=e,e=c,c=f,f=g,g=c),a[d]=b.floor(f),a[e]=b.ceil(g),a}function We(a){return a?{floor:function(b){return Math.floor(b/a)*a},ceil:function(b){return Math.ceil(b/a)*a}}:zi}function Xe(a,b,c,d){var e=[],f=[],g=0,h=Math.min(a.length,b.length)-1;for(a[h]<a[0]&&(a=a.slice().reverse(),b=b.slice().reverse());++g<=h;)e.push(c(a[g-1],a[g])),f.push(d(b[g-1],b[g]));return function(b){var c=jg.bisect(a,b,1,h)-1;return f[c](e[c](b))}}function Ye(a,b,c,d){function e(){var e=Math.min(a.length,b.length)>2?Xe:Ue,i=d?Xd:Wd;return g=e(a,b,i,c),h=e(b,a,i,yd),f}function f(a){return g(a)}var g,h;return f.invert=function(a){return h(a)},f.domain=function(b){return arguments.length?(a=b.map(Number),e()):a},f.range=function(a){return arguments.length?(b=a,e()):b},f.rangeRound=function(a){return f.range(a).interpolate(Qd)},f.clamp=function(a){return arguments.length?(d=a,e()):d},f.interpolate=function(a){return arguments.length?(c=a,e()):c},f.ticks=function(b){return af(a,b)},f.tickFormat=function(b,c){return bf(a,b,c)},f.nice=function(b){return $e(a,b),e()},f.copy=function(){return Ye(a,b,c,d)},e()}function Ze(a,b){return jg.rebind(a,b,"range","rangeRound","interpolate","clamp")}function $e(a,b){return Ve(a,We(_e(a,b)[2]))}function _e(a,b){null==b&&(b=10);var c=Se(a),d=c[1]-c[0],e=Math.pow(10,Math.floor(Math.log(d/b)/Math.LN10)),f=b/d*e;return.15>=f?e*=10:.35>=f?e*=5:.75>=f&&(e*=2),c[0]=Math.ceil(c[0]/e)*e,c[1]=Math.floor(c[1]/e)*e+.5*e,c[2]=e,c}function af(a,b){return jg.range.apply(jg,_e(a,b))}function bf(a,b,c){var d=_e(a,b);if(c){var e=nh.exec(c);if(e.shift(),"s"===e[8]){var f=jg.formatPrefix(Math.max(vg(d[0]),vg(d[1])));return e[7]||(e[7]="."+cf(f.scale(d[2]))),e[8]="f",c=jg.format(e.join("")),function(a){return c(f.scale(a))+f.symbol}}e[7]||(e[7]="."+df(e[8],d)),c=e.join("")}else c=",."+cf(d[2])+"f";return jg.format(c)}function cf(a){return-Math.floor(Math.log(a)/Math.LN10+.01)}function df(a,b){var c=cf(b[2]);return a in Ai?Math.abs(c-cf(Math.max(vg(b[0]),vg(b[1]))))+ +("e"!==a):c-2*("%"===a)}function ef(a,b,c,d){function e(a){return(c?Math.log(0>a?0:a):-Math.log(a>0?0:-a))/Math.log(b)}function f(a){return c?Math.pow(b,a):-Math.pow(b,-a)}function g(b){return a(e(b))}return g.invert=function(b){return f(a.invert(b))},g.domain=function(b){return arguments.length?(c=b[0]>=0,a.domain((d=b.map(Number)).map(e)),g):d},g.base=function(c){return arguments.length?(b=+c,a.domain(d.map(e)),g):b},g.nice=function(){var b=Ve(d.map(e),c?Math:Ci);return a.domain(b),d=b.map(f),g},g.ticks=function(){var a=Se(d),g=[],h=a[0],i=a[1],j=Math.floor(e(h)),k=Math.ceil(e(i)),l=b%1?2:b;if(isFinite(k-j)){if(c){for(;k>j;j++)for(var m=1;l>m;m++)g.push(f(j)*m);g.push(f(j))}else for(g.push(f(j));j++<k;)for(var m=l-1;m>0;m--)g.push(f(j)*m);for(j=0;g[j]<h;j++);for(k=g.length;g[k-1]>i;k--);g=g.slice(j,k)}return g},g.tickFormat=function(a,b){if(!arguments.length)return Bi;arguments.length<2?b=Bi:"function"!=typeof b&&(b=jg.format(b));var d,h=Math.max(.1,a/g.ticks().length),i=c?(d=1e-12,Math.ceil):(d=-1e-12,Math.floor);return function(a){return a/f(i(e(a)+d))<=h?b(a):""}},g.copy=function(){return ef(a.copy(),b,c,d)},Ze(g,a)}function ff(a,b,c){function d(b){return a(e(b))}var e=gf(b),f=gf(1/b);return d.invert=function(b){return f(a.invert(b))},d.domain=function(b){return arguments.length?(a.domain((c=b.map(Number)).map(e)),d):c},d.ticks=function(a){return af(c,a)},d.tickFormat=function(a,b){return bf(c,a,b)},d.nice=function(a){return d.domain($e(c,a))},d.exponent=function(g){return arguments.length?(e=gf(b=g),f=gf(1/b),a.domain(c.map(e)),d):b},d.copy=function(){return ff(a.copy(),b,c)},Ze(d,a)}function gf(a){return function(b){return 0>b?-Math.pow(-b,a):Math.pow(b,a)}}function hf(a,b){function c(c){return f[((e.get(c)||("range"===b.t?e.set(c,a.push(c)):NaN))-1)%f.length]}function d(b,c){return jg.range(a.length).map(function(a){return b+c*a})}var e,f,g;return c.domain=function(d){if(!arguments.length)return a;a=[],e=new j;for(var f,g=-1,h=d.length;++g<h;)e.has(f=d[g])||e.set(f,a.push(f));return c[b.t].apply(c,b.a)},c.range=function(a){return arguments.length?(f=a,g=0,b={t:"range",a:arguments},c):f},c.rangePoints=function(e,h){arguments.length<2&&(h=0);var i=e[0],j=e[1],k=a.length<2?(i=(i+j)/2,0):(j-i)/(a.length-1+h);return f=d(i+k*h/2,k),g=0,b={t:"rangePoints",a:arguments},c},c.rangeRoundPoints=function(e,h){arguments.length<2&&(h=0);var i=e[0],j=e[1],k=a.length<2?(i=j=Math.round((i+j)/2),0):(j-i)/(a.length-1+h)|0;return f=d(i+Math.round(k*h/2+(j-i-(a.length-1+h)*k)/2),k),g=0,b={t:"rangeRoundPoints",a:arguments},c},c.rangeBands=function(e,h,i){arguments.length<2&&(h=0),arguments.length<3&&(i=h);var j=e[1]<e[0],k=e[j-0],l=e[1-j],m=(l-k)/(a.length-h+2*i);return f=d(k+m*i,m),j&&f.reverse(),g=m*(1-h),b={t:"rangeBands",a:arguments},c},c.rangeRoundBands=function(e,h,i){arguments.length<2&&(h=0),arguments.length<3&&(i=h);var j=e[1]<e[0],k=e[j-0],l=e[1-j],m=Math.floor((l-k)/(a.length-h+2*i));return f=d(k+Math.round((l-k-(a.length-h)*m)/2),m),j&&f.reverse(),g=Math.round(m*(1-h)),b={t:"rangeRoundBands",a:arguments},c},c.rangeBand=function(){return g},c.rangeExtent=function(){return Se(b.a[0])},c.copy=function(){return hf(a,b)},c.domain(a)}function jf(a,b){function f(){var c=0,d=b.length;for(h=[];++c<d;)h[c-1]=jg.quantile(a,c/d);return g}function g(a){return isNaN(a=+a)?void 0:b[jg.bisect(h,a)]}var h;return g.domain=function(b){return arguments.length?(a=b.map(d).filter(e).sort(c),f()):a},g.range=function(a){return arguments.length?(b=a,f()):b},g.quantiles=function(){return h},g.invertExtent=function(c){return c=b.indexOf(c),0>c?[NaN,NaN]:[c>0?h[c-1]:a[0],c<h.length?h[c]:a[a.length-1]]},g.copy=function(){return jf(a,b)},f()}function kf(a,b,c){function d(b){return c[Math.max(0,Math.min(g,Math.floor(f*(b-a))))]}function e(){return f=c.length/(b-a),g=c.length-1,d}var f,g;return d.domain=function(c){return arguments.length?(a=+c[0],b=+c[c.length-1],e()):[a,b]},d.range=function(a){return arguments.length?(c=a,e()):c},d.invertExtent=function(b){return b=c.indexOf(b),b=0>b?NaN:b/f+a,[b,b+1/f]},d.copy=function(){return kf(a,b,c)},e()}function lf(a,b){function c(c){return c>=c?b[jg.bisect(a,c)]:void 0}return c.domain=function(b){return arguments.length?(a=b,c):a},c.range=function(a){return arguments.length?(b=a,c):b},c.invertExtent=function(c){return c=b.indexOf(c),[a[c-1],a[c]]},c.copy=function(){return lf(a,b)},c}function mf(a){function b(a){return+a}return b.invert=b,b.domain=b.range=function(c){return arguments.length?(a=c.map(b),b):a},b.ticks=function(b){return af(a,b)},b.tickFormat=function(b,c){return bf(a,b,c)},b.copy=function(){return mf(a)},b}function nf(){return 0}function of(a){return a.innerRadius}function pf(a){return a.outerRadius}function qf(a){return a.startAngle}function rf(a){return a.endAngle}function sf(a){return a&&a.padAngle}function tf(a,b,c,d){return(a-c)*b-(b-d)*a>0?0:1}function uf(a,b,c,d,e){var f=a[0]-b[0],g=a[1]-b[1],h=(e?d:-d)/Math.sqrt(f*f+g*g),i=h*g,j=-h*f,k=a[0]+i,l=a[1]+j,m=b[0]+i,n=b[1]+j,o=(k+m)/2,p=(l+n)/2,q=m-k,r=n-l,s=q*q+r*r,t=c-d,u=k*n-m*l,v=(0>r?-1:1)*Math.sqrt(t*t*s-u*u),w=(u*r-q*v)/s,x=(-u*q-r*v)/s,y=(u*r+q*v)/s,z=(-u*q+r*v)/s,A=w-o,B=x-p,C=y-o,D=z-p;return A*A+B*B>C*C+D*D&&(w=y,x=z),[[w-i,x-j],[w*c/t,x*c/t]]}function vf(a){function b(b){function g(){j.push("M",f(a(k),h))}for(var i,j=[],k=[],l=-1,m=b.length,n=Aa(c),o=Aa(d);++l<m;)e.call(this,i=b[l],l)?k.push([+n.call(this,i,l),+o.call(this,i,l)]):k.length&&(g(),k=[]);return k.length&&g(),j.length?j.join(""):null}var c=Bc,d=Cc,e=Cb,f=wf,g=f.key,h=.7;return b.x=function(a){return arguments.length?(c=a,b):c},b.y=function(a){return arguments.length?(d=a,b):d},b.defined=function(a){return arguments.length?(e=a,b):e},b.interpolate=function(a){return arguments.length?(g="function"==typeof a?f=a:(f=Ii.get(a)||wf).key,b):g},b.tension=function(a){return arguments.length?(h=a,b):h},b}function wf(a){return a.join("L")}function xf(a){return wf(a)+"Z"}function yf(a){for(var b=0,c=a.length,d=a[0],e=[d[0],",",d[1]];++b<c;)e.push("H",(d[0]+(d=a[b])[0])/2,"V",d[1]);return c>1&&e.push("H",d[0]),e.join("")}function zf(a){for(var b=0,c=a.length,d=a[0],e=[d[0],",",d[1]];++b<c;)e.push("V",(d=a[b])[1],"H",d[0]);return e.join("")}function Af(a){for(var b=0,c=a.length,d=a[0],e=[d[0],",",d[1]];++b<c;)e.push("H",(d=a[b])[0],"V",d[1]);return e.join("")}function Bf(a,b){return a.length<4?wf(a):a[1]+Ef(a.slice(1,-1),Ff(a,b))}function Cf(a,b){return a.length<3?wf(a):a[0]+Ef((a.push(a[0]),a),Ff([a[a.length-2]].concat(a,[a[1]]),b))}function Df(a,b){return a.length<3?wf(a):a[0]+Ef(a,Ff(a,b))}function Ef(a,b){if(b.length<1||a.length!=b.length&&a.length!=b.length+2)return wf(a);var c=a.length!=b.length,d="",e=a[0],f=a[1],g=b[0],h=g,i=1;if(c&&(d+="Q"+(f[0]-2*g[0]/3)+","+(f[1]-2*g[1]/3)+","+f[0]+","+f[1],e=a[1],i=2),b.length>1){h=b[1],f=a[i],i++,d+="C"+(e[0]+g[0])+","+(e[1]+g[1])+","+(f[0]-h[0])+","+(f[1]-h[1])+","+f[0]+","+f[1];for(var j=2;j<b.length;j++,i++)f=a[i],h=b[j],d+="S"+(f[0]-h[0])+","+(f[1]-h[1])+","+f[0]+","+f[1]}if(c){var k=a[i];d+="Q"+(f[0]+2*h[0]/3)+","+(f[1]+2*h[1]/3)+","+k[0]+","+k[1]}return d}function Ff(a,b){for(var c,d=[],e=(1-b)/2,f=a[0],g=a[1],h=1,i=a.length;++h<i;)c=f,f=g,g=a[h],d.push([e*(g[0]-c[0]),e*(g[1]-c[1])]);return d}function Gf(a){if(a.length<3)return wf(a);var b=1,c=a.length,d=a[0],e=d[0],f=d[1],g=[e,e,e,(d=a[1])[0]],h=[f,f,f,d[1]],i=[e,",",f,"L",Kf(Li,g),",",Kf(Li,h)];for(a.push(a[c-1]);++b<=c;)d=a[b],g.shift(),g.push(d[0]),h.shift(),h.push(d[1]),Lf(i,g,h);return a.pop(),i.push("L",d),i.join("")}function Hf(a){if(a.length<4)return wf(a);for(var b,c=[],d=-1,e=a.length,f=[0],g=[0];++d<3;)b=a[d],f.push(b[0]),g.push(b[1]);for(c.push(Kf(Li,f)+","+Kf(Li,g)),--d;++d<e;)b=a[d],f.shift(),f.push(b[0]),g.shift(),g.push(b[1]),Lf(c,f,g);return c.join("")}function If(a){for(var b,c,d=-1,e=a.length,f=e+4,g=[],h=[];++d<4;)c=a[d%e],g.push(c[0]),h.push(c[1]);for(b=[Kf(Li,g),",",Kf(Li,h)],--d;++d<f;)c=a[d%e],g.shift(),g.push(c[0]),h.shift(),h.push(c[1]),Lf(b,g,h);return b.join("")}function Jf(a,b){
var c=a.length-1;if(c)for(var d,e,f=a[0][0],g=a[0][1],h=a[c][0]-f,i=a[c][1]-g,j=-1;++j<=c;)d=a[j],e=j/c,d[0]=b*d[0]+(1-b)*(f+e*h),d[1]=b*d[1]+(1-b)*(g+e*i);return Gf(a)}function Kf(a,b){return a[0]*b[0]+a[1]*b[1]+a[2]*b[2]+a[3]*b[3]}function Lf(a,b,c){a.push("C",Kf(Ji,b),",",Kf(Ji,c),",",Kf(Ki,b),",",Kf(Ki,c),",",Kf(Li,b),",",Kf(Li,c))}function Mf(a,b){return(b[1]-a[1])/(b[0]-a[0])}function Nf(a){for(var b=0,c=a.length-1,d=[],e=a[0],f=a[1],g=d[0]=Mf(e,f);++b<c;)d[b]=(g+(g=Mf(e=f,f=a[b+1])))/2;return d[b]=g,d}function Of(a){for(var b,c,d,e,f=[],g=Nf(a),h=-1,i=a.length-1;++h<i;)b=Mf(a[h],a[h+1]),vg(b)<Lg?g[h]=g[h+1]=0:(c=g[h]/b,d=g[h+1]/b,e=c*c+d*d,e>9&&(e=3*b/Math.sqrt(e),g[h]=e*c,g[h+1]=e*d));for(h=-1;++h<=i;)e=(a[Math.min(i,h+1)][0]-a[Math.max(0,h-1)][0])/(6*(1+g[h]*g[h])),f.push([e||0,g[h]*e||0]);return f}function Pf(a){return a.length<3?wf(a):a[0]+Ef(a,Of(a))}function Qf(a){for(var b,c,d,e=-1,f=a.length;++e<f;)b=a[e],c=b[0],d=b[1]-Qg,b[0]=c*Math.cos(d),b[1]=c*Math.sin(d);return a}function Rf(a){function b(b){function i(){p.push("M",h(a(r),l),k,j(a(q.reverse()),l),"Z")}for(var m,n,o,p=[],q=[],r=[],s=-1,t=b.length,u=Aa(c),v=Aa(e),w=c===d?function(){return n}:Aa(d),x=e===f?function(){return o}:Aa(f);++s<t;)g.call(this,m=b[s],s)?(q.push([n=+u.call(this,m,s),o=+v.call(this,m,s)]),r.push([+w.call(this,m,s),+x.call(this,m,s)])):q.length&&(i(),q=[],r=[]);return q.length&&i(),p.length?p.join(""):null}var c=Bc,d=Bc,e=0,f=Cc,g=Cb,h=wf,i=h.key,j=h,k="L",l=.7;return b.x=function(a){return arguments.length?(c=d=a,b):d},b.x0=function(a){return arguments.length?(c=a,b):c},b.x1=function(a){return arguments.length?(d=a,b):d},b.y=function(a){return arguments.length?(e=f=a,b):f},b.y0=function(a){return arguments.length?(e=a,b):e},b.y1=function(a){return arguments.length?(f=a,b):f},b.defined=function(a){return arguments.length?(g=a,b):g},b.interpolate=function(a){return arguments.length?(i="function"==typeof a?h=a:(h=Ii.get(a)||wf).key,j=h.reverse||h,k=h.closed?"M":"L",b):i},b.tension=function(a){return arguments.length?(l=a,b):l},b}function Sf(a){return a.radius}function Tf(a){return[a.x,a.y]}function Uf(a){return function(){var b=a.apply(this,arguments),c=b[0],d=b[1]-Qg;return[c*Math.cos(d),c*Math.sin(d)]}}function Vf(){return 64}function Wf(){return"circle"}function Xf(a){var b=Math.sqrt(a/Ng);return"M0,"+b+"A"+b+","+b+" 0 1,1 0,"+-b+"A"+b+","+b+" 0 1,1 0,"+b+"Z"}function Yf(a){return function(){var b,c;(b=this[a])&&(c=b[b.active])&&(--b.count?delete b[b.active]:delete this[a],b.active+=.5,c.event&&c.event.interrupt.call(this,this.__data__,c.index))}}function Zf(a,b,c){return Ag(a,Si),a.namespace=b,a.id=c,a}function $f(a,b,c,d){var e=a.id,f=a.namespace;return R(a,"function"==typeof c?function(a,g,h){a[f][e].tween.set(b,d(c.call(a,a.__data__,g,h)))}:(c=d(c),function(a){a[f][e].tween.set(b,c)}))}function _f(a){return null==a&&(a=""),function(){this.textContent=a}}function ag(a){return null==a?"__transition__":"__transition_"+a+"__"}function bg(a,b,c,d,e){var f=a[c]||(a[c]={active:0,count:0}),g=f[d];if(!g){var h=e.time;g=f[d]={tween:new j,time:h,delay:e.delay,duration:e.duration,ease:e.ease,index:b},e=null,++f.count,jg.timer(function(e){function i(c){if(f.active>d)return k();var e=f[f.active];e&&(--f.count,delete f[f.active],e.event&&e.event.interrupt.call(a,a.__data__,e.index)),f.active=d,g.event&&g.event.start.call(a,a.__data__,b),g.tween.forEach(function(c,d){(d=d.call(a,a.__data__,b))&&p.push(d)}),m=g.ease,l=g.duration,jg.timer(function(){return o.c=j(c||1)?Cb:j,1},0,h)}function j(c){if(f.active!==d)return 1;for(var e=c/l,h=m(e),i=p.length;i>0;)p[--i].call(a,h);return e>=1?(g.event&&g.event.end.call(a,a.__data__,b),k()):void 0}function k(){return--f.count?delete f[d]:delete a[c],1}var l,m,n=g.delay,o=kh,p=[];return o.t=n+h,e>=n?i(e-n):void(o.c=i)},0,h)}}function cg(a,b,c){a.attr("transform",function(a){var d=b(a);return"translate("+(isFinite(d)?d:c(a))+",0)"})}function dg(a,b,c){a.attr("transform",function(a){var d=b(a);return"translate(0,"+(isFinite(d)?d:c(a))+")"})}function eg(a){return a.toISOString()}function fg(a,b,c){function d(b){return a(b)}function e(a,c){var d=a[1]-a[0],e=d/c,f=jg.bisect(_i,e);return f==_i.length?[b.year,_e(a.map(function(a){return a/31536e6}),c)[2]]:f?b[e/_i[f-1]<_i[f]/e?f-1:f]:[cj,_e(a,c)[2]]}return d.invert=function(b){return gg(a.invert(b))},d.domain=function(b){return arguments.length?(a.domain(b),d):a.domain().map(gg)},d.nice=function(a,b){function c(c){return!isNaN(c)&&!a.range(c,gg(+c+1),b).length}var f=d.domain(),g=Se(f),h=null==a?e(g,10):"number"==typeof a&&e(g,a);return h&&(a=h[0],b=h[1]),d.domain(Ve(f,b>1?{floor:function(b){for(;c(b=a.floor(b));)b=gg(b-1);return b},ceil:function(b){for(;c(b=a.ceil(b));)b=gg(+b+1);return b}}:a))},d.ticks=function(a,b){var c=Se(d.domain()),f=null==a?e(c,10):"number"==typeof a?e(c,a):!a.range&&[{range:a},b];return f&&(a=f[0],b=f[1]),a.range(c[0],gg(+c[1]+1),1>b?1:b)},d.tickFormat=function(){return c},d.copy=function(){return fg(a.copy(),b,c)},Ze(d,a)}function gg(a){return new Date(a)}function hg(a){return JSON.parse(a.responseText)}function ig(a){var b=mg.createRange();return b.selectNode(mg.body),b.createContextualFragment(a.responseText)}var jg={version:"3.5.5"},kg=[].slice,lg=function(a){return kg.call(a)},mg=this.document;if(mg)try{lg(mg.documentElement.childNodes)[0].nodeType}catch(ng){lg=function(a){for(var b=a.length,c=new Array(b);b--;)c[b]=a[b];return c}}if(Date.now||(Date.now=function(){return+new Date}),mg)try{mg.createElement("DIV").style.setProperty("opacity",0,"")}catch(og){var pg=this.Element.prototype,qg=pg.setAttribute,rg=pg.setAttributeNS,sg=this.CSSStyleDeclaration.prototype,tg=sg.setProperty;pg.setAttribute=function(a,b){qg.call(this,a,b+"")},pg.setAttributeNS=function(a,b,c){rg.call(this,a,b,c+"")},sg.setProperty=function(a,b,c){tg.call(this,a,b+"",c)}}jg.ascending=c,jg.descending=function(a,b){return a>b?-1:b>a?1:b>=a?0:NaN},jg.min=function(a,b){var c,d,e=-1,f=a.length;if(1===arguments.length){for(;++e<f;)if(null!=(d=a[e])&&d>=d){c=d;break}for(;++e<f;)null!=(d=a[e])&&c>d&&(c=d)}else{for(;++e<f;)if(null!=(d=b.call(a,a[e],e))&&d>=d){c=d;break}for(;++e<f;)null!=(d=b.call(a,a[e],e))&&c>d&&(c=d)}return c},jg.max=function(a,b){var c,d,e=-1,f=a.length;if(1===arguments.length){for(;++e<f;)if(null!=(d=a[e])&&d>=d){c=d;break}for(;++e<f;)null!=(d=a[e])&&d>c&&(c=d)}else{for(;++e<f;)if(null!=(d=b.call(a,a[e],e))&&d>=d){c=d;break}for(;++e<f;)null!=(d=b.call(a,a[e],e))&&d>c&&(c=d)}return c},jg.extent=function(a,b){var c,d,e,f=-1,g=a.length;if(1===arguments.length){for(;++f<g;)if(null!=(d=a[f])&&d>=d){c=e=d;break}for(;++f<g;)null!=(d=a[f])&&(c>d&&(c=d),d>e&&(e=d))}else{for(;++f<g;)if(null!=(d=b.call(a,a[f],f))&&d>=d){c=e=d;break}for(;++f<g;)null!=(d=b.call(a,a[f],f))&&(c>d&&(c=d),d>e&&(e=d))}return[c,e]},jg.sum=function(a,b){var c,d=0,f=a.length,g=-1;if(1===arguments.length)for(;++g<f;)e(c=+a[g])&&(d+=c);else for(;++g<f;)e(c=+b.call(a,a[g],g))&&(d+=c);return d},jg.mean=function(a,b){var c,f=0,g=a.length,h=-1,i=g;if(1===arguments.length)for(;++h<g;)e(c=d(a[h]))?f+=c:--i;else for(;++h<g;)e(c=d(b.call(a,a[h],h)))?f+=c:--i;return i?f/i:void 0},jg.quantile=function(a,b){var c=(a.length-1)*b+1,d=Math.floor(c),e=+a[d-1],f=c-d;return f?e+f*(a[d]-e):e},jg.median=function(a,b){var f,g=[],h=a.length,i=-1;if(1===arguments.length)for(;++i<h;)e(f=d(a[i]))&&g.push(f);else for(;++i<h;)e(f=d(b.call(a,a[i],i)))&&g.push(f);return g.length?jg.quantile(g.sort(c),.5):void 0},jg.variance=function(a,b){var c,f,g=a.length,h=0,i=0,j=-1,k=0;if(1===arguments.length)for(;++j<g;)e(c=d(a[j]))&&(f=c-h,h+=f/++k,i+=f*(c-h));else for(;++j<g;)e(c=d(b.call(a,a[j],j)))&&(f=c-h,h+=f/++k,i+=f*(c-h));return k>1?i/(k-1):void 0},jg.deviation=function(){var a=jg.variance.apply(this,arguments);return a?Math.sqrt(a):a};var ug=f(c);jg.bisectLeft=ug.left,jg.bisect=jg.bisectRight=ug.right,jg.bisector=function(a){return f(1===a.length?function(b,d){return c(a(b),d)}:a)},jg.shuffle=function(a,b,c){(f=arguments.length)<3&&(c=a.length,2>f&&(b=0));for(var d,e,f=c-b;f;)e=Math.random()*f--|0,d=a[f+b],a[f+b]=a[e+b],a[e+b]=d;return a},jg.permute=function(a,b){for(var c=b.length,d=new Array(c);c--;)d[c]=a[b[c]];return d},jg.pairs=function(a){for(var b,c=0,d=a.length-1,e=a[0],f=new Array(0>d?0:d);d>c;)f[c]=[b=e,e=a[++c]];return f},jg.zip=function(){if(!(d=arguments.length))return[];for(var a=-1,b=jg.min(arguments,g),c=new Array(b);++a<b;)for(var d,e=-1,f=c[a]=new Array(d);++e<d;)f[e]=arguments[e][a];return c},jg.transpose=function(a){return jg.zip.apply(jg,a)},jg.keys=function(a){var b=[];for(var c in a)b.push(c);return b},jg.values=function(a){var b=[];for(var c in a)b.push(a[c]);return b},jg.entries=function(a){var b=[];for(var c in a)b.push({key:c,value:a[c]});return b},jg.merge=function(a){for(var b,c,d,e=a.length,f=-1,g=0;++f<e;)g+=a[f].length;for(c=new Array(g);--e>=0;)for(d=a[e],b=d.length;--b>=0;)c[--g]=d[b];return c};var vg=Math.abs;jg.range=function(a,b,c){if(arguments.length<3&&(c=1,arguments.length<2&&(b=a,a=0)),(b-a)/c===1/0)throw new Error("infinite range");var d,e=[],f=h(vg(c)),g=-1;if(a*=f,b*=f,c*=f,0>c)for(;(d=a+c*++g)>b;)e.push(d/f);else for(;(d=a+c*++g)<b;)e.push(d/f);return e},jg.map=function(a,b){var c=new j;if(a instanceof j)a.forEach(function(a,b){c.set(a,b)});else if(Array.isArray(a)){var d,e=-1,f=a.length;if(1===arguments.length)for(;++e<f;)c.set(e,a[e]);else for(;++e<f;)c.set(b.call(a,d=a[e],e),d)}else for(var g in a)c.set(g,a[g]);return c};var wg="__proto__",xg="\x00";i(j,{has:m,get:function(a){return this._[k(a)]},set:function(a,b){return this._[k(a)]=b},remove:n,keys:o,values:function(){var a=[];for(var b in this._)a.push(this._[b]);return a},entries:function(){var a=[];for(var b in this._)a.push({key:l(b),value:this._[b]});return a},size:p,empty:q,forEach:function(a){for(var b in this._)a.call(this,l(b),this._[b])}}),jg.nest=function(){function a(b,g,h){if(h>=f.length)return d?d.call(e,g):c?g.sort(c):g;for(var i,k,l,m,n=-1,o=g.length,p=f[h++],q=new j;++n<o;)(m=q.get(i=p(k=g[n])))?m.push(k):q.set(i,[k]);return b?(k=b(),l=function(c,d){k.set(c,a(b,d,h))}):(k={},l=function(c,d){k[c]=a(b,d,h)}),q.forEach(l),k}function b(a,c){if(c>=f.length)return a;var d=[],e=g[c++];return a.forEach(function(a,e){d.push({key:a,values:b(e,c)})}),e?d.sort(function(a,b){return e(a.key,b.key)}):d}var c,d,e={},f=[],g=[];return e.map=function(b,c){return a(c,b,0)},e.entries=function(c){return b(a(jg.map,c,0),0)},e.key=function(a){return f.push(a),e},e.sortKeys=function(a){return g[f.length-1]=a,e},e.sortValues=function(a){return c=a,e},e.rollup=function(a){return d=a,e},e},jg.set=function(a){var b=new r;if(a)for(var c=0,d=a.length;d>c;++c)b.add(a[c]);return b},i(r,{has:m,add:function(a){return this._[k(a+="")]=!0,a},remove:n,values:o,size:p,empty:q,forEach:function(a){for(var b in this._)a.call(this,l(b))}}),jg.behavior={},jg.rebind=function(a,b){for(var c,d=1,e=arguments.length;++d<e;)a[c=arguments[d]]=t(a,b,b[c]);return a};var yg=["webkit","ms","moz","Moz","o","O"];jg.dispatch=function(){for(var a=new w,b=-1,c=arguments.length;++b<c;)a[arguments[b]]=x(a);return a},w.prototype.on=function(a,b){var c=a.indexOf("."),d="";if(c>=0&&(d=a.slice(c+1),a=a.slice(0,c)),a)return arguments.length<2?this[a].on(d):this[a].on(d,b);if(2===arguments.length){if(null==b)for(a in this)this.hasOwnProperty(a)&&this[a].on(d,null);return this}},jg.event=null,jg.requote=function(a){return a.replace(zg,"\\$&")};var zg=/[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g,Ag={}.__proto__?function(a,b){a.__proto__=b}:function(a,b){for(var c in b)a[c]=b[c]},Bg=function(a,b){return b.querySelector(a)},Cg=function(a,b){return b.querySelectorAll(a)},Dg=function(a,b){var c=a.matches||a[u(a,"matchesSelector")];return(Dg=function(a,b){return c.call(a,b)})(a,b)};"function"==typeof Sizzle&&(Bg=function(a,b){return Sizzle(a,b)[0]||null},Cg=Sizzle,Dg=Sizzle.matchesSelector),jg.selection=function(){return jg.select(mg.documentElement)};var Eg=jg.selection.prototype=[];Eg.select=function(a){var b,c,d,e,f=[];a=C(a);for(var g=-1,h=this.length;++g<h;){f.push(b=[]),b.parentNode=(d=this[g]).parentNode;for(var i=-1,j=d.length;++i<j;)(e=d[i])?(b.push(c=a.call(e,e.__data__,i,g)),c&&"__data__"in e&&(c.__data__=e.__data__)):b.push(null)}return B(f)},Eg.selectAll=function(a){var b,c,d=[];a=D(a);for(var e=-1,f=this.length;++e<f;)for(var g=this[e],h=-1,i=g.length;++h<i;)(c=g[h])&&(d.push(b=lg(a.call(c,c.__data__,h,e))),b.parentNode=c);return B(d)};var Fg={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/"};jg.ns={prefix:Fg,qualify:function(a){var b=a.indexOf(":"),c=a;return b>=0&&(c=a.slice(0,b),a=a.slice(b+1)),Fg.hasOwnProperty(c)?{space:Fg[c],local:a}:a}},Eg.attr=function(a,b){if(arguments.length<2){if("string"==typeof a){var c=this.node();return a=jg.ns.qualify(a),a.local?c.getAttributeNS(a.space,a.local):c.getAttribute(a)}for(b in a)this.each(E(b,a[b]));return this}return this.each(E(a,b))},Eg.classed=function(a,b){if(arguments.length<2){if("string"==typeof a){var c=this.node(),d=(a=H(a)).length,e=-1;if(b=c.classList){for(;++e<d;)if(!b.contains(a[e]))return!1}else for(b=c.getAttribute("class");++e<d;)if(!G(a[e]).test(b))return!1;return!0}for(b in a)this.each(I(b,a[b]));return this}return this.each(I(a,b))},Eg.style=function(a,c,d){var e=arguments.length;if(3>e){if("string"!=typeof a){2>e&&(c="");for(d in a)this.each(K(d,a[d],c));return this}if(2>e){var f=this.node();return b(f).getComputedStyle(f,null).getPropertyValue(a)}d=""}return this.each(K(a,c,d))},Eg.property=function(a,b){if(arguments.length<2){if("string"==typeof a)return this.node()[a];for(b in a)this.each(L(b,a[b]));return this}return this.each(L(a,b))},Eg.text=function(a){return arguments.length?this.each("function"==typeof a?function(){var b=a.apply(this,arguments);this.textContent=null==b?"":b}:null==a?function(){this.textContent=""}:function(){this.textContent=a}):this.node().textContent},Eg.html=function(a){return arguments.length?this.each("function"==typeof a?function(){var b=a.apply(this,arguments);this.innerHTML=null==b?"":b}:null==a?function(){this.innerHTML=""}:function(){this.innerHTML=a}):this.node().innerHTML},Eg.append=function(a){return a=M(a),this.select(function(){return this.appendChild(a.apply(this,arguments))})},Eg.insert=function(a,b){return a=M(a),b=C(b),this.select(function(){return this.insertBefore(a.apply(this,arguments),b.apply(this,arguments)||null)})},Eg.remove=function(){return this.each(N)},Eg.data=function(a,b){function c(a,c){var d,e,f,g=a.length,l=c.length,m=Math.min(g,l),n=new Array(l),o=new Array(l),p=new Array(g);if(b){var q,r=new j,s=new Array(g);for(d=-1;++d<g;)r.has(q=b.call(e=a[d],e.__data__,d))?p[d]=e:r.set(q,e),s[d]=q;for(d=-1;++d<l;)(e=r.get(q=b.call(c,f=c[d],d)))?e!==!0&&(n[d]=e,e.__data__=f):o[d]=O(f),r.set(q,!0);for(d=-1;++d<g;)r.get(s[d])!==!0&&(p[d]=a[d])}else{for(d=-1;++d<m;)e=a[d],f=c[d],e?(e.__data__=f,n[d]=e):o[d]=O(f);for(;l>d;++d)o[d]=O(c[d]);for(;g>d;++d)p[d]=a[d]}o.update=n,o.parentNode=n.parentNode=p.parentNode=a.parentNode,h.push(o),i.push(n),k.push(p)}var d,e,f=-1,g=this.length;if(!arguments.length){for(a=new Array(g=(d=this[0]).length);++f<g;)(e=d[f])&&(a[f]=e.__data__);return a}var h=S([]),i=B([]),k=B([]);if("function"==typeof a)for(;++f<g;)c(d=this[f],a.call(d,d.parentNode.__data__,f));else for(;++f<g;)c(d=this[f],a);return i.enter=function(){return h},i.exit=function(){return k},i},Eg.datum=function(a){return arguments.length?this.property("__data__",a):this.property("__data__")},Eg.filter=function(a){var b,c,d,e=[];"function"!=typeof a&&(a=P(a));for(var f=0,g=this.length;g>f;f++){e.push(b=[]),b.parentNode=(c=this[f]).parentNode;for(var h=0,i=c.length;i>h;h++)(d=c[h])&&a.call(d,d.__data__,h,f)&&b.push(d)}return B(e)},Eg.order=function(){for(var a=-1,b=this.length;++a<b;)for(var c,d=this[a],e=d.length-1,f=d[e];--e>=0;)(c=d[e])&&(f&&f!==c.nextSibling&&f.parentNode.insertBefore(c,f),f=c);return this},Eg.sort=function(a){a=Q.apply(this,arguments);for(var b=-1,c=this.length;++b<c;)this[b].sort(a);return this.order()},Eg.each=function(a){return R(this,function(b,c,d){a.call(b,b.__data__,c,d)})},Eg.call=function(a){var b=lg(arguments);return a.apply(b[0]=this,b),this},Eg.empty=function(){return!this.node()},Eg.node=function(){for(var a=0,b=this.length;b>a;a++)for(var c=this[a],d=0,e=c.length;e>d;d++){var f=c[d];if(f)return f}return null},Eg.size=function(){var a=0;return R(this,function(){++a}),a};var Gg=[];jg.selection.enter=S,jg.selection.enter.prototype=Gg,Gg.append=Eg.append,Gg.empty=Eg.empty,Gg.node=Eg.node,Gg.call=Eg.call,Gg.size=Eg.size,Gg.select=function(a){for(var b,c,d,e,f,g=[],h=-1,i=this.length;++h<i;){d=(e=this[h]).update,g.push(b=[]),b.parentNode=e.parentNode;for(var j=-1,k=e.length;++j<k;)(f=e[j])?(b.push(d[j]=c=a.call(e.parentNode,f.__data__,j,h)),c.__data__=f.__data__):b.push(null)}return B(g)},Gg.insert=function(a,b){return arguments.length<2&&(b=T(this)),Eg.insert.call(this,a,b)},jg.select=function(b){var c;return"string"==typeof b?(c=[Bg(b,mg)],c.parentNode=mg.documentElement):(c=[b],c.parentNode=a(b)),B([c])},jg.selectAll=function(a){var b;return"string"==typeof a?(b=lg(Cg(a,mg)),b.parentNode=mg.documentElement):(b=a,b.parentNode=null),B([b])},Eg.on=function(a,b,c){var d=arguments.length;if(3>d){if("string"!=typeof a){2>d&&(b=!1);for(c in a)this.each(U(c,a[c],b));return this}if(2>d)return(d=this.node()["__on"+a])&&d._;c=!1}return this.each(U(a,b,c))};var Hg=jg.map({mouseenter:"mouseover",mouseleave:"mouseout"});mg&&Hg.forEach(function(a){"on"+a in mg&&Hg.remove(a)});var Ig,Jg=0;jg.mouse=function(a){return Y(a,z())};var Kg=this.navigator&&/WebKit/.test(this.navigator.userAgent)?-1:0;jg.touch=function(a,b,c){if(arguments.length<3&&(c=b,b=z().changedTouches),b)for(var d,e=0,f=b.length;f>e;++e)if((d=b[e]).identifier===c)return Y(a,d)},jg.behavior.drag=function(){function a(){this.on("mousedown.drag",f).on("touchstart.drag",g)}function c(a,b,c,f,g){return function(){function h(){var a,c,d=b(m,p);d&&(a=d[0]-t[0],c=d[1]-t[1],o|=a|c,t=d,n({type:"drag",x:d[0]+j[0],y:d[1]+j[1],dx:a,dy:c}))}function i(){b(m,p)&&(r.on(f+q,null).on(g+q,null),s(o&&jg.event.target===l),n({type:"dragend"}))}var j,k=this,l=jg.event.target,m=k.parentNode,n=d.of(k,arguments),o=0,p=a(),q=".drag"+(null==p?"":"-"+p),r=jg.select(c(l)).on(f+q,h).on(g+q,i),s=X(l),t=b(m,p);e?(j=e.apply(k,arguments),j=[j.x-t[0],j.y-t[1]]):j=[0,0],n({type:"dragstart"})}}var d=A(a,"drag","dragstart","dragend"),e=null,f=c(v,jg.mouse,b,"mousemove","mouseup"),g=c(Z,jg.touch,s,"touchmove","touchend");return a.origin=function(b){return arguments.length?(e=b,a):e},jg.rebind(a,d,"on")},jg.touches=function(a,b){return arguments.length<2&&(b=z().touches),b?lg(b).map(function(b){var c=Y(a,b);return c.identifier=b.identifier,c}):[]};var Lg=1e-6,Mg=Lg*Lg,Ng=Math.PI,Og=2*Ng,Pg=Og-Lg,Qg=Ng/2,Rg=Ng/180,Sg=180/Ng,Tg=Math.SQRT2,Ug=2,Vg=4;jg.interpolateZoom=function(a,b){function c(a){var b=a*s;if(r){var c=da(p),g=f/(Ug*m)*(c*ea(Tg*b+p)-ca(p));return[d+g*j,e+g*k,f*c/da(Tg*b+p)]}return[d+a*j,e+a*k,f*Math.exp(Tg*b)]}var d=a[0],e=a[1],f=a[2],g=b[0],h=b[1],i=b[2],j=g-d,k=h-e,l=j*j+k*k,m=Math.sqrt(l),n=(i*i-f*f+Vg*l)/(2*f*Ug*m),o=(i*i-f*f-Vg*l)/(2*i*Ug*m),p=Math.log(Math.sqrt(n*n+1)-n),q=Math.log(Math.sqrt(o*o+1)-o),r=q-p,s=(r||Math.log(i/f))/Tg;return c.duration=1e3*s,c},jg.behavior.zoom=function(){function a(a){a.on(F,l).on(Xg+".zoom",n).on("dblclick.zoom",o).on(I,m)}function c(a){return[(a[0]-z.x)/z.k,(a[1]-z.y)/z.k]}function d(a){return[a[0]*z.k+z.x,a[1]*z.k+z.y]}function e(a){z.k=Math.max(C[0],Math.min(C[1],a))}function f(a,b){b=d(b),z.x+=a[0]-b[0],z.y+=a[1]-b[1]}function g(b,c,d,g){b.__chart__={x:z.x,y:z.y,k:z.k},e(Math.pow(2,g)),f(q=c,d),b=jg.select(b),D>0&&(b=b.transition().duration(D)),b.call(a.event)}function h(){v&&v.domain(u.range().map(function(a){return(a-z.x)/z.k}).map(u.invert)),x&&x.domain(w.range().map(function(a){return(a-z.y)/z.k}).map(w.invert))}function i(a){E++||a({type:"zoomstart"})}function j(a){h(),a({type:"zoom",scale:z.k,translate:[z.x,z.y]})}function k(a){--E||a({type:"zoomend"}),q=null}function l(){function a(){l=1,f(jg.mouse(e),n),j(h)}function d(){m.on(G,null).on(H,null),o(l&&jg.event.target===g),k(h)}var e=this,g=jg.event.target,h=J.of(e,arguments),l=0,m=jg.select(b(e)).on(G,a).on(H,d),n=c(jg.mouse(e)),o=X(e);Ri.call(e),i(h)}function m(){function a(){var a=jg.touches(o);return n=z.k,a.forEach(function(a){a.identifier in q&&(q[a.identifier]=c(a))}),a}function b(){var b=jg.event.target;jg.select(b).on(u,d).on(v,h),w.push(b);for(var c=jg.event.changedTouches,e=0,f=c.length;f>e;++e)q[c[e].identifier]=null;var i=a(),j=Date.now();if(1===i.length){if(500>j-t){var k=i[0];g(o,k,q[k.identifier],Math.floor(Math.log(z.k)/Math.LN2)+1),y()}t=j}else if(i.length>1){var k=i[0],l=i[1],m=k[0]-l[0],n=k[1]-l[1];r=m*m+n*n}}function d(){var a,b,c,d,g=jg.touches(o);Ri.call(o);for(var h=0,i=g.length;i>h;++h,d=null)if(c=g[h],d=q[c.identifier]){if(b)break;a=c,b=d}if(d){var k=(k=c[0]-a[0])*k+(k=c[1]-a[1])*k,l=r&&Math.sqrt(k/r);a=[(a[0]+c[0])/2,(a[1]+c[1])/2],b=[(b[0]+d[0])/2,(b[1]+d[1])/2],e(l*n)}t=null,f(a,b),j(p)}function h(){if(jg.event.touches.length){for(var b=jg.event.changedTouches,c=0,d=b.length;d>c;++c)delete q[b[c].identifier];for(var e in q)return void a()}jg.selectAll(w).on(s,null),x.on(F,l).on(I,m),A(),k(p)}var n,o=this,p=J.of(o,arguments),q={},r=0,s=".zoom-"+jg.event.changedTouches[0].identifier,u="touchmove"+s,v="touchend"+s,w=[],x=jg.select(o),A=X(o);b(),i(p),x.on(F,null).on(I,b)}function n(){var a=J.of(this,arguments);s?clearTimeout(s):(p=c(q=r||jg.mouse(this)),Ri.call(this),i(a)),s=setTimeout(function(){s=null,k(a)},50),y(),e(Math.pow(2,.002*Wg())*z.k),f(q,p),j(a)}function o(){var a=jg.mouse(this),b=Math.log(z.k)/Math.LN2;g(this,a,c(a),jg.event.shiftKey?Math.ceil(b)-1:Math.floor(b)+1)}var p,q,r,s,t,u,v,w,x,z={x:0,y:0,k:1},B=[960,500],C=Yg,D=250,E=0,F="mousedown.zoom",G="mousemove.zoom",H="mouseup.zoom",I="touchstart.zoom",J=A(a,"zoomstart","zoom","zoomend");return Xg||(Xg="onwheel"in mg?(Wg=function(){return-jg.event.deltaY*(jg.event.deltaMode?120:1)},"wheel"):"onmousewheel"in mg?(Wg=function(){return jg.event.wheelDelta},"mousewheel"):(Wg=function(){return-jg.event.detail},"MozMousePixelScroll")),a.event=function(a){a.each(function(){var a=J.of(this,arguments),b=z;Pi?jg.select(this).transition().each("start.zoom",function(){z=this.__chart__||{x:0,y:0,k:1},i(a)}).tween("zoom:zoom",function(){var c=B[0],d=B[1],e=q?q[0]:c/2,f=q?q[1]:d/2,g=jg.interpolateZoom([(e-z.x)/z.k,(f-z.y)/z.k,c/z.k],[(e-b.x)/b.k,(f-b.y)/b.k,c/b.k]);return function(b){var d=g(b),h=c/d[2];this.__chart__=z={x:e-d[0]*h,y:f-d[1]*h,k:h},j(a)}}).each("interrupt.zoom",function(){k(a)}).each("end.zoom",function(){k(a)}):(this.__chart__=z,i(a),j(a),k(a))})},a.translate=function(b){return arguments.length?(z={x:+b[0],y:+b[1],k:z.k},h(),a):[z.x,z.y]},a.scale=function(b){return arguments.length?(z={x:z.x,y:z.y,k:+b},h(),a):z.k},a.scaleExtent=function(b){return arguments.length?(C=null==b?Yg:[+b[0],+b[1]],a):C},a.center=function(b){return arguments.length?(r=b&&[+b[0],+b[1]],a):r},a.size=function(b){return arguments.length?(B=b&&[+b[0],+b[1]],a):B},a.duration=function(b){return arguments.length?(D=+b,a):D},a.x=function(b){return arguments.length?(v=b,u=b.copy(),z={x:0,y:0,k:1},a):v},a.y=function(b){return arguments.length?(x=b,w=b.copy(),z={x:0,y:0,k:1},a):x},jg.rebind(a,J,"on")};var Wg,Xg,Yg=[0,1/0];jg.color=ga,ga.prototype.toString=function(){return this.rgb()+""},jg.hsl=ha;var Zg=ha.prototype=new ga;Zg.brighter=function(a){return a=Math.pow(.7,arguments.length?a:1),new ha(this.h,this.s,this.l/a)},Zg.darker=function(a){return a=Math.pow(.7,arguments.length?a:1),new ha(this.h,this.s,a*this.l)},Zg.rgb=function(){return ia(this.h,this.s,this.l)},jg.hcl=ja;var $g=ja.prototype=new ga;$g.brighter=function(a){return new ja(this.h,this.c,Math.min(100,this.l+_g*(arguments.length?a:1)))},$g.darker=function(a){return new ja(this.h,this.c,Math.max(0,this.l-_g*(arguments.length?a:1)))},$g.rgb=function(){return ka(this.h,this.c,this.l).rgb()},jg.lab=la;var _g=18,ah=.95047,bh=1,ch=1.08883,dh=la.prototype=new ga;dh.brighter=function(a){return new la(Math.min(100,this.l+_g*(arguments.length?a:1)),this.a,this.b)},dh.darker=function(a){return new la(Math.max(0,this.l-_g*(arguments.length?a:1)),this.a,this.b)},dh.rgb=function(){return ma(this.l,this.a,this.b)},jg.rgb=ra;var eh=ra.prototype=new ga;eh.brighter=function(a){a=Math.pow(.7,arguments.length?a:1);var b=this.r,c=this.g,d=this.b,e=30;return b||c||d?(b&&e>b&&(b=e),c&&e>c&&(c=e),d&&e>d&&(d=e),new ra(Math.min(255,b/a),Math.min(255,c/a),Math.min(255,d/a))):new ra(e,e,e)},eh.darker=function(a){return a=Math.pow(.7,arguments.length?a:1),new ra(a*this.r,a*this.g,a*this.b)},eh.hsl=function(){return wa(this.r,this.g,this.b)},eh.toString=function(){return"#"+ua(this.r)+ua(this.g)+ua(this.b)};var fh=jg.map({aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074});fh.forEach(function(a,b){fh.set(a,sa(b))}),jg.functor=Aa,jg.xhr=Ba(s),jg.dsv=function(a,b){function c(a,c,f){arguments.length<3&&(f=c,c=null);var g=Ca(a,b,null==c?d:e(c),f);return g.row=function(a){return arguments.length?g.response(null==(c=a)?d:e(a)):c},g}function d(a){return c.parse(a.responseText)}function e(a){return function(b){return c.parse(b.responseText,a)}}function f(b){return b.map(g).join(a)}function g(a){return h.test(a)?'"'+a.replace(/\"/g,'""')+'"':a}var h=new RegExp('["'+a+"\n]"),i=a.charCodeAt(0);return c.parse=function(a,b){var d;return c.parseRows(a,function(a,c){if(d)return d(a,c-1);var e=new Function("d","return {"+a.map(function(a,b){return JSON.stringify(a)+": d["+b+"]"}).join(",")+"}");d=b?function(a,c){return b(e(a),c)}:e})},c.parseRows=function(a,b){function c(){if(k>=j)return g;if(e)return e=!1,f;var b=k;if(34===a.charCodeAt(b)){for(var c=b;c++<j;)if(34===a.charCodeAt(c)){if(34!==a.charCodeAt(c+1))break;++c}k=c+2;var d=a.charCodeAt(c+1);return 13===d?(e=!0,10===a.charCodeAt(c+2)&&++k):10===d&&(e=!0),a.slice(b+1,c).replace(/""/g,'"')}for(;j>k;){var d=a.charCodeAt(k++),h=1;if(10===d)e=!0;else if(13===d)e=!0,10===a.charCodeAt(k)&&(++k,++h);else if(d!==i)continue;return a.slice(b,k-h)}return a.slice(b)}for(var d,e,f={},g={},h=[],j=a.length,k=0,l=0;(d=c())!==g;){for(var m=[];d!==f&&d!==g;)m.push(d),d=c();b&&null==(m=b(m,l++))||h.push(m)}return h},c.format=function(b){if(Array.isArray(b[0]))return c.formatRows(b);var d=new r,e=[];return b.forEach(function(a){for(var b in a)d.has(b)||e.push(d.add(b))}),[e.map(g).join(a)].concat(b.map(function(b){return e.map(function(a){return g(b[a])}).join(a)})).join("\n")},c.formatRows=function(a){return a.map(f).join("\n")},c},jg.csv=jg.dsv(",","text/csv"),jg.tsv=jg.dsv("	","text/tab-separated-values");var gh,hh,ih,jh,kh,lh=this[u(this,"requestAnimationFrame")]||function(a){setTimeout(a,17)};jg.timer=function(a,b,c){var d=arguments.length;2>d&&(b=0),3>d&&(c=Date.now());var e=c+b,f={c:a,t:e,f:!1,n:null};hh?hh.n=f:gh=f,hh=f,ih||(jh=clearTimeout(jh),ih=1,lh(Fa))},jg.timer.flush=function(){Ga(),Ha()},jg.round=function(a,b){return b?Math.round(a*(b=Math.pow(10,b)))/b:Math.round(a)};var mh=["y","z","a","f","p","n","µ","m","","k","M","G","T","P","E","Z","Y"].map(Ja);jg.formatPrefix=function(a,b){var c=0;return a&&(0>a&&(a*=-1),b&&(a=jg.round(a,Ia(a,b))),c=1+Math.floor(1e-12+Math.log(a)/Math.LN10),c=Math.max(-24,Math.min(24,3*Math.floor((c-1)/3)))),mh[8+c/3]};var nh=/(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,oh=jg.map({b:function(a){return a.toString(2)},c:function(a){return String.fromCharCode(a)},o:function(a){return a.toString(8)},x:function(a){return a.toString(16)},X:function(a){return a.toString(16).toUpperCase()},g:function(a,b){return a.toPrecision(b)},e:function(a,b){return a.toExponential(b)},f:function(a,b){return a.toFixed(b)},r:function(a,b){return(a=jg.round(a,Ia(a,b))).toFixed(Math.max(0,Math.min(20,Ia(a*(1+1e-15),b))))}}),ph=jg.time={},qh=Date;Ma.prototype={getDate:function(){return this._.getUTCDate()},getDay:function(){return this._.getUTCDay()},getFullYear:function(){return this._.getUTCFullYear()},getHours:function(){return this._.getUTCHours()},getMilliseconds:function(){return this._.getUTCMilliseconds()},getMinutes:function(){return this._.getUTCMinutes()},getMonth:function(){return this._.getUTCMonth()},getSeconds:function(){return this._.getUTCSeconds()},getTime:function(){return this._.getTime()},getTimezoneOffset:function(){return 0},valueOf:function(){return this._.valueOf()},setDate:function(){rh.setUTCDate.apply(this._,arguments)},setDay:function(){rh.setUTCDay.apply(this._,arguments)},setFullYear:function(){rh.setUTCFullYear.apply(this._,arguments)},setHours:function(){rh.setUTCHours.apply(this._,arguments)},setMilliseconds:function(){rh.setUTCMilliseconds.apply(this._,arguments)},setMinutes:function(){rh.setUTCMinutes.apply(this._,arguments)},setMonth:function(){rh.setUTCMonth.apply(this._,arguments)},setSeconds:function(){rh.setUTCSeconds.apply(this._,arguments)},setTime:function(){rh.setTime.apply(this._,arguments)}};var rh=Date.prototype;ph.year=Na(function(a){return a=ph.day(a),a.setMonth(0,1),a},function(a,b){a.setFullYear(a.getFullYear()+b)},function(a){return a.getFullYear()}),ph.years=ph.year.range,ph.years.utc=ph.year.utc.range,ph.day=Na(function(a){var b=new qh(2e3,0);return b.setFullYear(a.getFullYear(),a.getMonth(),a.getDate()),
b},function(a,b){a.setDate(a.getDate()+b)},function(a){return a.getDate()-1}),ph.days=ph.day.range,ph.days.utc=ph.day.utc.range,ph.dayOfYear=function(a){var b=ph.year(a);return Math.floor((a-b-6e4*(a.getTimezoneOffset()-b.getTimezoneOffset()))/864e5)},["sunday","monday","tuesday","wednesday","thursday","friday","saturday"].forEach(function(a,b){b=7-b;var c=ph[a]=Na(function(a){return(a=ph.day(a)).setDate(a.getDate()-(a.getDay()+b)%7),a},function(a,b){a.setDate(a.getDate()+7*Math.floor(b))},function(a){var c=ph.year(a).getDay();return Math.floor((ph.dayOfYear(a)+(c+b)%7)/7)-(c!==b)});ph[a+"s"]=c.range,ph[a+"s"].utc=c.utc.range,ph[a+"OfYear"]=function(a){var c=ph.year(a).getDay();return Math.floor((ph.dayOfYear(a)+(c+b)%7)/7)}}),ph.week=ph.sunday,ph.weeks=ph.sunday.range,ph.weeks.utc=ph.sunday.utc.range,ph.weekOfYear=ph.sundayOfYear;var sh={"-":"",_:" ",0:"0"},th=/^\s*\d+/,uh=/^%/;jg.locale=function(a){return{numberFormat:Ka(a),timeFormat:Pa(a)}};var vh=jg.locale({decimal:".",thousands:",",grouping:[3],currency:["$",""],dateTime:"%a %b %e %X %Y",date:"%m/%d/%Y",time:"%H:%M:%S",periods:["AM","PM"],days:["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],shortDays:["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],months:["January","February","March","April","May","June","July","August","September","October","November","December"],shortMonths:["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]});jg.format=vh.numberFormat,jg.geo={},ib.prototype={s:0,t:0,add:function(a){jb(a,this.t,wh),jb(wh.s,this.s,this),this.s?this.t+=wh.t:this.s=wh.t},reset:function(){this.s=this.t=0},valueOf:function(){return this.s}};var wh=new ib;jg.geo.stream=function(a,b){a&&xh.hasOwnProperty(a.type)?xh[a.type](a,b):kb(a,b)};var xh={Feature:function(a,b){kb(a.geometry,b)},FeatureCollection:function(a,b){for(var c=a.features,d=-1,e=c.length;++d<e;)kb(c[d].geometry,b)}},yh={Sphere:function(a,b){b.sphere()},Point:function(a,b){a=a.coordinates,b.point(a[0],a[1],a[2])},MultiPoint:function(a,b){for(var c=a.coordinates,d=-1,e=c.length;++d<e;)a=c[d],b.point(a[0],a[1],a[2])},LineString:function(a,b){lb(a.coordinates,b,0)},MultiLineString:function(a,b){for(var c=a.coordinates,d=-1,e=c.length;++d<e;)lb(c[d],b,0)},Polygon:function(a,b){mb(a.coordinates,b)},MultiPolygon:function(a,b){for(var c=a.coordinates,d=-1,e=c.length;++d<e;)mb(c[d],b)},GeometryCollection:function(a,b){for(var c=a.geometries,d=-1,e=c.length;++d<e;)kb(c[d],b)}};jg.geo.area=function(a){return zh=0,jg.geo.stream(a,Bh),zh};var zh,Ah=new ib,Bh={sphere:function(){zh+=4*Ng},point:v,lineStart:v,lineEnd:v,polygonStart:function(){Ah.reset(),Bh.lineStart=nb},polygonEnd:function(){var a=2*Ah;zh+=0>a?4*Ng+a:a,Bh.lineStart=Bh.lineEnd=Bh.point=v}};jg.geo.bounds=function(){function a(a,b){t.push(u=[k=a,m=a]),l>b&&(l=b),b>n&&(n=b)}function b(b,c){var d=ob([b*Rg,c*Rg]);if(r){var e=qb(r,d),f=[e[1],-e[0],0],g=qb(f,e);tb(g),g=ub(g);var i=b-o,j=i>0?1:-1,p=g[0]*Sg*j,q=vg(i)>180;if(q^(p>j*o&&j*b>p)){var s=g[1]*Sg;s>n&&(n=s)}else if(p=(p+360)%360-180,q^(p>j*o&&j*b>p)){var s=-g[1]*Sg;l>s&&(l=s)}else l>c&&(l=c),c>n&&(n=c);q?o>b?h(k,b)>h(k,m)&&(m=b):h(b,m)>h(k,m)&&(k=b):m>=k?(k>b&&(k=b),b>m&&(m=b)):b>o?h(k,b)>h(k,m)&&(m=b):h(b,m)>h(k,m)&&(k=b)}else a(b,c);r=d,o=b}function c(){v.point=b}function d(){u[0]=k,u[1]=m,v.point=a,r=null}function e(a,c){if(r){var d=a-o;s+=vg(d)>180?d+(d>0?360:-360):d}else p=a,q=c;Bh.point(a,c),b(a,c)}function f(){Bh.lineStart()}function g(){e(p,q),Bh.lineEnd(),vg(s)>Lg&&(k=-(m=180)),u[0]=k,u[1]=m,r=null}function h(a,b){return(b-=a)<0?b+360:b}function i(a,b){return a[0]-b[0]}function j(a,b){return b[0]<=b[1]?b[0]<=a&&a<=b[1]:a<b[0]||b[1]<a}var k,l,m,n,o,p,q,r,s,t,u,v={point:a,lineStart:c,lineEnd:d,polygonStart:function(){v.point=e,v.lineStart=f,v.lineEnd=g,s=0,Bh.polygonStart()},polygonEnd:function(){Bh.polygonEnd(),v.point=a,v.lineStart=c,v.lineEnd=d,0>Ah?(k=-(m=180),l=-(n=90)):s>Lg?n=90:-Lg>s&&(l=-90),u[0]=k,u[1]=m}};return function(a){n=m=-(k=l=1/0),t=[],jg.geo.stream(a,v);var b=t.length;if(b){t.sort(i);for(var c,d=1,e=t[0],f=[e];b>d;++d)c=t[d],j(c[0],e)||j(c[1],e)?(h(e[0],c[1])>h(e[0],e[1])&&(e[1]=c[1]),h(c[0],e[1])>h(e[0],e[1])&&(e[0]=c[0])):f.push(e=c);for(var g,c,o=-(1/0),b=f.length-1,d=0,e=f[b];b>=d;e=c,++d)c=f[d],(g=h(e[1],c[0]))>o&&(o=g,k=c[0],m=e[1])}return t=u=null,k===1/0||l===1/0?[[NaN,NaN],[NaN,NaN]]:[[k,l],[m,n]]}}(),jg.geo.centroid=function(a){Ch=Dh=Eh=Fh=Gh=Hh=Ih=Jh=Kh=Lh=Mh=0,jg.geo.stream(a,Nh);var b=Kh,c=Lh,d=Mh,e=b*b+c*c+d*d;return Mg>e&&(b=Hh,c=Ih,d=Jh,Lg>Dh&&(b=Eh,c=Fh,d=Gh),e=b*b+c*c+d*d,Mg>e)?[NaN,NaN]:[Math.atan2(c,b)*Sg,ba(d/Math.sqrt(e))*Sg]};var Ch,Dh,Eh,Fh,Gh,Hh,Ih,Jh,Kh,Lh,Mh,Nh={sphere:v,point:wb,lineStart:yb,lineEnd:zb,polygonStart:function(){Nh.lineStart=Ab},polygonEnd:function(){Nh.lineStart=yb}},Oh=Gb(Cb,Kb,Mb,[-Ng,-Ng/2]),Ph=1e9;jg.geo.clipExtent=function(){var a,b,c,d,e,f,g={stream:function(a){return e&&(e.valid=!1),e=f(a),e.valid=!0,e},extent:function(h){return arguments.length?(f=Qb(a=+h[0][0],b=+h[0][1],c=+h[1][0],d=+h[1][1]),e&&(e.valid=!1,e=null),g):[[a,b],[c,d]]}};return g.extent([[0,0],[960,500]])},(jg.geo.conicEqualArea=function(){return Rb(Sb)}).raw=Sb,jg.geo.albers=function(){return jg.geo.conicEqualArea().rotate([96,0]).center([-.6,38.7]).parallels([29.5,45.5]).scale(1070)},jg.geo.albersUsa=function(){function a(a){var f=a[0],g=a[1];return b=null,c(f,g),b||(d(f,g),b)||e(f,g),b}var b,c,d,e,f=jg.geo.albers(),g=jg.geo.conicEqualArea().rotate([154,0]).center([-2,58.5]).parallels([55,65]),h=jg.geo.conicEqualArea().rotate([157,0]).center([-3,19.9]).parallels([8,18]),i={point:function(a,c){b=[a,c]}};return a.invert=function(a){var b=f.scale(),c=f.translate(),d=(a[0]-c[0])/b,e=(a[1]-c[1])/b;return(e>=.12&&.234>e&&d>=-.425&&-.214>d?g:e>=.166&&.234>e&&d>=-.214&&-.115>d?h:f).invert(a)},a.stream=function(a){var b=f.stream(a),c=g.stream(a),d=h.stream(a);return{point:function(a,e){b.point(a,e),c.point(a,e),d.point(a,e)},sphere:function(){b.sphere(),c.sphere(),d.sphere()},lineStart:function(){b.lineStart(),c.lineStart(),d.lineStart()},lineEnd:function(){b.lineEnd(),c.lineEnd(),d.lineEnd()},polygonStart:function(){b.polygonStart(),c.polygonStart(),d.polygonStart()},polygonEnd:function(){b.polygonEnd(),c.polygonEnd(),d.polygonEnd()}}},a.precision=function(b){return arguments.length?(f.precision(b),g.precision(b),h.precision(b),a):f.precision()},a.scale=function(b){return arguments.length?(f.scale(b),g.scale(.35*b),h.scale(b),a.translate(f.translate())):f.scale()},a.translate=function(b){if(!arguments.length)return f.translate();var j=f.scale(),k=+b[0],l=+b[1];return c=f.translate(b).clipExtent([[k-.455*j,l-.238*j],[k+.455*j,l+.238*j]]).stream(i).point,d=g.translate([k-.307*j,l+.201*j]).clipExtent([[k-.425*j+Lg,l+.12*j+Lg],[k-.214*j-Lg,l+.234*j-Lg]]).stream(i).point,e=h.translate([k-.205*j,l+.212*j]).clipExtent([[k-.214*j+Lg,l+.166*j+Lg],[k-.115*j-Lg,l+.234*j-Lg]]).stream(i).point,a},a.scale(1070)};var Qh,Rh,Sh,Th,Uh,Vh,Wh={point:v,lineStart:v,lineEnd:v,polygonStart:function(){Rh=0,Wh.lineStart=Tb},polygonEnd:function(){Wh.lineStart=Wh.lineEnd=Wh.point=v,Qh+=vg(Rh/2)}},Xh={point:Ub,lineStart:v,lineEnd:v,polygonStart:v,polygonEnd:v},Yh={point:Xb,lineStart:Yb,lineEnd:Zb,polygonStart:function(){Yh.lineStart=$b},polygonEnd:function(){Yh.point=Xb,Yh.lineStart=Yb,Yh.lineEnd=Zb}};jg.geo.path=function(){function a(a){return a&&("function"==typeof h&&f.pointRadius(+h.apply(this,arguments)),g&&g.valid||(g=e(f)),jg.geo.stream(a,g)),f.result()}function b(){return g=null,a}var c,d,e,f,g,h=4.5;return a.area=function(a){return Qh=0,jg.geo.stream(a,e(Wh)),Qh},a.centroid=function(a){return Eh=Fh=Gh=Hh=Ih=Jh=Kh=Lh=Mh=0,jg.geo.stream(a,e(Yh)),Mh?[Kh/Mh,Lh/Mh]:Jh?[Hh/Jh,Ih/Jh]:Gh?[Eh/Gh,Fh/Gh]:[NaN,NaN]},a.bounds=function(a){return Uh=Vh=-(Sh=Th=1/0),jg.geo.stream(a,e(Xh)),[[Sh,Th],[Uh,Vh]]},a.projection=function(a){return arguments.length?(e=(c=a)?a.stream||bc(a):s,b()):c},a.context=function(a){return arguments.length?(f=null==(d=a)?new Vb:new _b(a),"function"!=typeof h&&f.pointRadius(h),b()):d},a.pointRadius=function(b){return arguments.length?(h="function"==typeof b?b:(f.pointRadius(+b),+b),a):h},a.projection(jg.geo.albersUsa()).context(null)},jg.geo.transform=function(a){return{stream:function(b){var c=new cc(b);for(var d in a)c[d]=a[d];return c}}},cc.prototype={point:function(a,b){this.stream.point(a,b)},sphere:function(){this.stream.sphere()},lineStart:function(){this.stream.lineStart()},lineEnd:function(){this.stream.lineEnd()},polygonStart:function(){this.stream.polygonStart()},polygonEnd:function(){this.stream.polygonEnd()}},jg.geo.projection=ec,jg.geo.projectionMutator=fc,(jg.geo.equirectangular=function(){return ec(hc)}).raw=hc.invert=hc,jg.geo.rotation=function(a){function b(b){return b=a(b[0]*Rg,b[1]*Rg),b[0]*=Sg,b[1]*=Sg,b}return a=jc(a[0]%360*Rg,a[1]*Rg,a.length>2?a[2]*Rg:0),b.invert=function(b){return b=a.invert(b[0]*Rg,b[1]*Rg),b[0]*=Sg,b[1]*=Sg,b},b},ic.invert=hc,jg.geo.circle=function(){function a(){var a="function"==typeof d?d.apply(this,arguments):d,b=jc(-a[0]*Rg,-a[1]*Rg,0).invert,e=[];return c(null,null,1,{point:function(a,c){e.push(a=b(a,c)),a[0]*=Sg,a[1]*=Sg}}),{type:"Polygon",coordinates:[e]}}var b,c,d=[0,0],e=6;return a.origin=function(b){return arguments.length?(d=b,a):d},a.angle=function(d){return arguments.length?(c=nc((b=+d)*Rg,e*Rg),a):b},a.precision=function(d){return arguments.length?(c=nc(b*Rg,(e=+d)*Rg),a):e},a.angle(90)},jg.geo.distance=function(a,b){var c,d=(b[0]-a[0])*Rg,e=a[1]*Rg,f=b[1]*Rg,g=Math.sin(d),h=Math.cos(d),i=Math.sin(e),j=Math.cos(e),k=Math.sin(f),l=Math.cos(f);return Math.atan2(Math.sqrt((c=l*g)*c+(c=j*k-i*l*h)*c),i*k+j*l*h)},jg.geo.graticule=function(){function a(){return{type:"MultiLineString",coordinates:b()}}function b(){return jg.range(Math.ceil(f/q)*q,e,q).map(m).concat(jg.range(Math.ceil(j/r)*r,i,r).map(n)).concat(jg.range(Math.ceil(d/o)*o,c,o).filter(function(a){return vg(a%q)>Lg}).map(k)).concat(jg.range(Math.ceil(h/p)*p,g,p).filter(function(a){return vg(a%r)>Lg}).map(l))}var c,d,e,f,g,h,i,j,k,l,m,n,o=10,p=o,q=90,r=360,s=2.5;return a.lines=function(){return b().map(function(a){return{type:"LineString",coordinates:a}})},a.outline=function(){return{type:"Polygon",coordinates:[m(f).concat(n(i).slice(1),m(e).reverse().slice(1),n(j).reverse().slice(1))]}},a.extent=function(b){return arguments.length?a.majorExtent(b).minorExtent(b):a.minorExtent()},a.majorExtent=function(b){return arguments.length?(f=+b[0][0],e=+b[1][0],j=+b[0][1],i=+b[1][1],f>e&&(b=f,f=e,e=b),j>i&&(b=j,j=i,i=b),a.precision(s)):[[f,j],[e,i]]},a.minorExtent=function(b){return arguments.length?(d=+b[0][0],c=+b[1][0],h=+b[0][1],g=+b[1][1],d>c&&(b=d,d=c,c=b),h>g&&(b=h,h=g,g=b),a.precision(s)):[[d,h],[c,g]]},a.step=function(b){return arguments.length?a.majorStep(b).minorStep(b):a.minorStep()},a.majorStep=function(b){return arguments.length?(q=+b[0],r=+b[1],a):[q,r]},a.minorStep=function(b){return arguments.length?(o=+b[0],p=+b[1],a):[o,p]},a.precision=function(b){return arguments.length?(s=+b,k=pc(h,g,90),l=qc(d,c,s),m=pc(j,i,90),n=qc(f,e,s),a):s},a.majorExtent([[-180,-90+Lg],[180,90-Lg]]).minorExtent([[-180,-80-Lg],[180,80+Lg]])},jg.geo.greatArc=function(){function a(){return{type:"LineString",coordinates:[b||d.apply(this,arguments),c||e.apply(this,arguments)]}}var b,c,d=rc,e=sc;return a.distance=function(){return jg.geo.distance(b||d.apply(this,arguments),c||e.apply(this,arguments))},a.source=function(c){return arguments.length?(d=c,b="function"==typeof c?null:c,a):d},a.target=function(b){return arguments.length?(e=b,c="function"==typeof b?null:b,a):e},a.precision=function(){return arguments.length?a:0},a},jg.geo.interpolate=function(a,b){return tc(a[0]*Rg,a[1]*Rg,b[0]*Rg,b[1]*Rg)},jg.geo.length=function(a){return Zh=0,jg.geo.stream(a,$h),Zh};var Zh,$h={sphere:v,point:v,lineStart:uc,lineEnd:v,polygonStart:v,polygonEnd:v},_h=vc(function(a){return Math.sqrt(2/(1+a))},function(a){return 2*Math.asin(a/2)});(jg.geo.azimuthalEqualArea=function(){return ec(_h)}).raw=_h;var ai=vc(function(a){var b=Math.acos(a);return b&&b/Math.sin(b)},s);(jg.geo.azimuthalEquidistant=function(){return ec(ai)}).raw=ai,(jg.geo.conicConformal=function(){return Rb(wc)}).raw=wc,(jg.geo.conicEquidistant=function(){return Rb(xc)}).raw=xc;var bi=vc(function(a){return 1/a},Math.atan);(jg.geo.gnomonic=function(){return ec(bi)}).raw=bi,yc.invert=function(a,b){return[a,2*Math.atan(Math.exp(b))-Qg]},(jg.geo.mercator=function(){return zc(yc)}).raw=yc;var ci=vc(function(){return 1},Math.asin);(jg.geo.orthographic=function(){return ec(ci)}).raw=ci;var di=vc(function(a){return 1/(1+a)},function(a){return 2*Math.atan(a)});(jg.geo.stereographic=function(){return ec(di)}).raw=di,Ac.invert=function(a,b){return[-b,2*Math.atan(Math.exp(a))-Qg]},(jg.geo.transverseMercator=function(){var a=zc(Ac),b=a.center,c=a.rotate;return a.center=function(a){return a?b([-a[1],a[0]]):(a=b(),[a[1],-a[0]])},a.rotate=function(a){return a?c([a[0],a[1],a.length>2?a[2]+90:90]):(a=c(),[a[0],a[1],a[2]-90])},c([0,0,90])}).raw=Ac,jg.geom={},jg.geom.hull=function(a){function b(a){if(a.length<3)return[];var b,e=Aa(c),f=Aa(d),g=a.length,h=[],i=[];for(b=0;g>b;b++)h.push([+e.call(this,a[b],b),+f.call(this,a[b],b),b]);for(h.sort(Fc),b=0;g>b;b++)i.push([h[b][0],-h[b][1]]);var j=Ec(h),k=Ec(i),l=k[0]===j[0],m=k[k.length-1]===j[j.length-1],n=[];for(b=j.length-1;b>=0;--b)n.push(a[h[j[b]][2]]);for(b=+l;b<k.length-m;++b)n.push(a[h[k[b]][2]]);return n}var c=Bc,d=Cc;return arguments.length?b(a):(b.x=function(a){return arguments.length?(c=a,b):c},b.y=function(a){return arguments.length?(d=a,b):d},b)},jg.geom.polygon=function(a){return Ag(a,ei),a};var ei=jg.geom.polygon.prototype=[];ei.area=function(){for(var a,b=-1,c=this.length,d=this[c-1],e=0;++b<c;)a=d,d=this[b],e+=a[1]*d[0]-a[0]*d[1];return.5*e},ei.centroid=function(a){var b,c,d=-1,e=this.length,f=0,g=0,h=this[e-1];for(arguments.length||(a=-1/(6*this.area()));++d<e;)b=h,h=this[d],c=b[0]*h[1]-h[0]*b[1],f+=(b[0]+h[0])*c,g+=(b[1]+h[1])*c;return[f*a,g*a]},ei.clip=function(a){for(var b,c,d,e,f,g,h=Ic(a),i=-1,j=this.length-Ic(this),k=this[j-1];++i<j;){for(b=a.slice(),a.length=0,e=this[i],f=b[(d=b.length-h)-1],c=-1;++c<d;)g=b[c],Gc(g,k,e)?(Gc(f,k,e)||a.push(Hc(f,g,k,e)),a.push(g)):Gc(f,k,e)&&a.push(Hc(f,g,k,e)),f=g;h&&a.push(a[0]),k=e}return a};var fi,gi,hi,ii,ji,ki=[],li=[];Qc.prototype.prepare=function(){for(var a,b=this.edges,c=b.length;c--;)a=b[c].edge,a.b&&a.a||b.splice(c,1);return b.sort(Sc),b.length},ad.prototype={start:function(){return this.edge.l===this.site?this.edge.a:this.edge.b},end:function(){return this.edge.l===this.site?this.edge.b:this.edge.a}},bd.prototype={insert:function(a,b){var c,d,e;if(a){if(b.P=a,b.N=a.N,a.N&&(a.N.P=b),a.N=b,a.R){for(a=a.R;a.L;)a=a.L;a.L=b}else a.R=b;c=a}else this._?(a=fd(this._),b.P=null,b.N=a,a.P=a.L=b,c=a):(b.P=b.N=null,this._=b,c=null);for(b.L=b.R=null,b.U=c,b.C=!0,a=b;c&&c.C;)d=c.U,c===d.L?(e=d.R,e&&e.C?(c.C=e.C=!1,d.C=!0,a=d):(a===c.R&&(dd(this,c),a=c,c=a.U),c.C=!1,d.C=!0,ed(this,d))):(e=d.L,e&&e.C?(c.C=e.C=!1,d.C=!0,a=d):(a===c.L&&(ed(this,c),a=c,c=a.U),c.C=!1,d.C=!0,dd(this,d))),c=a.U;this._.C=!1},remove:function(a){a.N&&(a.N.P=a.P),a.P&&(a.P.N=a.N),a.N=a.P=null;var b,c,d,e=a.U,f=a.L,g=a.R;if(c=f?g?fd(g):f:g,e?e.L===a?e.L=c:e.R=c:this._=c,f&&g?(d=c.C,c.C=a.C,c.L=f,f.U=c,c!==g?(e=c.U,c.U=a.U,a=c.R,e.L=a,c.R=g,g.U=c):(c.U=e,e=c,a=c.R)):(d=a.C,a=c),a&&(a.U=e),!d){if(a&&a.C)return void(a.C=!1);do{if(a===this._)break;if(a===e.L){if(b=e.R,b.C&&(b.C=!1,e.C=!0,dd(this,e),b=e.R),b.L&&b.L.C||b.R&&b.R.C){b.R&&b.R.C||(b.L.C=!1,b.C=!0,ed(this,b),b=e.R),b.C=e.C,e.C=b.R.C=!1,dd(this,e),a=this._;break}}else if(b=e.L,b.C&&(b.C=!1,e.C=!0,ed(this,e),b=e.L),b.L&&b.L.C||b.R&&b.R.C){b.L&&b.L.C||(b.R.C=!1,b.C=!0,dd(this,b),b=e.L),b.C=e.C,e.C=b.L.C=!1,ed(this,e),a=this._;break}b.C=!0,a=e,e=e.U}while(!a.C);a&&(a.C=!1)}}},jg.geom.voronoi=function(a){function b(a){var b=new Array(a.length),d=h[0][0],e=h[0][1],f=h[1][0],g=h[1][1];return gd(c(a),h).cells.forEach(function(c,h){var i=c.edges,j=c.site,k=b[h]=i.length?i.map(function(a){var b=a.start();return[b.x,b.y]}):j.x>=d&&j.x<=f&&j.y>=e&&j.y<=g?[[d,g],[f,g],[f,e],[d,e]]:[];k.point=a[h]}),b}function c(a){return a.map(function(a,b){return{x:Math.round(f(a,b)/Lg)*Lg,y:Math.round(g(a,b)/Lg)*Lg,i:b}})}var d=Bc,e=Cc,f=d,g=e,h=mi;return a?b(a):(b.links=function(a){return gd(c(a)).edges.filter(function(a){return a.l&&a.r}).map(function(b){return{source:a[b.l.i],target:a[b.r.i]}})},b.triangles=function(a){var b=[];return gd(c(a)).cells.forEach(function(c,d){for(var e,f,g=c.site,h=c.edges.sort(Sc),i=-1,j=h.length,k=h[j-1].edge,l=k.l===g?k.r:k.l;++i<j;)e=k,f=l,k=h[i].edge,l=k.l===g?k.r:k.l,d<f.i&&d<l.i&&id(g,f,l)<0&&b.push([a[d],a[f.i],a[l.i]])}),b},b.x=function(a){return arguments.length?(f=Aa(d=a),b):d},b.y=function(a){return arguments.length?(g=Aa(e=a),b):e},b.clipExtent=function(a){return arguments.length?(h=null==a?mi:a,b):h===mi?null:h},b.size=function(a){return arguments.length?b.clipExtent(a&&[[0,0],a]):h===mi?null:h&&h[1]},b)};var mi=[[-1e6,-1e6],[1e6,1e6]];jg.geom.delaunay=function(a){return jg.geom.voronoi().triangles(a)},jg.geom.quadtree=function(a,b,c,d,e){function f(a){function f(a,b,c,d,e,f,g,h){if(!isNaN(c)&&!isNaN(d))if(a.leaf){var i=a.x,k=a.y;if(null!=i)if(vg(i-c)+vg(k-d)<.01)j(a,b,c,d,e,f,g,h);else{var l=a.point;a.x=a.y=a.point=null,j(a,l,i,k,e,f,g,h),j(a,b,c,d,e,f,g,h)}else a.x=c,a.y=d,a.point=b}else j(a,b,c,d,e,f,g,h)}function j(a,b,c,d,e,g,h,i){var j=.5*(e+h),k=.5*(g+i),l=c>=j,m=d>=k,n=m<<1|l;a.leaf=!1,a=a.nodes[n]||(a.nodes[n]=ld()),l?e=j:h=j,m?g=k:i=k,f(a,b,c,d,e,g,h,i)}var k,l,m,n,o,p,q,r,s,t=Aa(h),u=Aa(i);if(null!=b)p=b,q=c,r=d,s=e;else if(r=s=-(p=q=1/0),l=[],m=[],o=a.length,g)for(n=0;o>n;++n)k=a[n],k.x<p&&(p=k.x),k.y<q&&(q=k.y),k.x>r&&(r=k.x),k.y>s&&(s=k.y),l.push(k.x),m.push(k.y);else for(n=0;o>n;++n){var v=+t(k=a[n],n),w=+u(k,n);p>v&&(p=v),q>w&&(q=w),v>r&&(r=v),w>s&&(s=w),l.push(v),m.push(w)}var x=r-p,y=s-q;x>y?s=q+x:r=p+y;var z=ld();if(z.add=function(a){f(z,a,+t(a,++n),+u(a,n),p,q,r,s)},z.visit=function(a){md(a,z,p,q,r,s)},z.find=function(a){return nd(z,a[0],a[1],p,q,r,s)},n=-1,null==b){for(;++n<o;)f(z,a[n],l[n],m[n],p,q,r,s);--n}else a.forEach(z.add);return l=m=a=k=null,z}var g,h=Bc,i=Cc;return(g=arguments.length)?(h=jd,i=kd,3===g&&(e=c,d=b,c=b=0),f(a)):(f.x=function(a){return arguments.length?(h=a,f):h},f.y=function(a){return arguments.length?(i=a,f):i},f.extent=function(a){return arguments.length?(null==a?b=c=d=e=null:(b=+a[0][0],c=+a[0][1],d=+a[1][0],e=+a[1][1]),f):null==b?null:[[b,c],[d,e]]},f.size=function(a){return arguments.length?(null==a?b=c=d=e=null:(b=c=0,d=+a[0],e=+a[1]),f):null==b?null:[d-b,e-c]},f)},jg.geom.octree=function(a,b,c,d,e,f,g){function h(a){function h(a,b,c,d,e,f,g,h,i,j,k){if(!(isNaN(c)||isNaN(d)||isNaN(e)))if(a.leaf){var l=a.x,n=a.y,o=a.z;if(null!=l)if(vg(l-c)+vg(n-d)+vg(o-e)<.01)m(a,b,c,d,e,f,g,h,i,j,k);else{var p=a.point;a.x=a.y=a.z=a.point=null,m(a,p,l,n,o,f,g,h,i,j,k),m(a,b,c,d,e,f,g,h,i,j,k)}else a.x=c,a.y=d,a.z=e,a.point=b}else m(a,b,c,d,e,f,g,h,i,j,k)}function m(a,b,c,d,e,f,g,i,j,k,l){var m=.5*(f+j),n=.5*(g+k),o=.5*(i+l),p=c>=m,q=d>=n,r=e>=o,s=r<<2|q<<1|p;a.leaf=!1,a=a.nodes[s]||(a.nodes[s]=rd()),p?f=m:j=m,q?g=n:k=n,r?i=o:l=o,h(a,b,c,d,e,f,g,i,j,k,l)}var n,o,p,q,r,s,t,u,v,w,x,y,z=Aa(j),A=Aa(k),B=Aa(l);if(null!=b)t=b,u=c,v=d,w=e,x=f,y=g;else if(w=x=y=-(t=u=v=1/0),q=[],r=[],s=[],p=a.length,i)for(o=0;p>o;++o)n=a[o],n.x<t&&(t=n.x),n.y<u&&(u=n.y),n.z<v&&(v=n.z),n.x>w&&(w=n.x),n.y>x&&(x=n.y),n.z>y&&(y=n.z),q.push(n.x),r.push(n.y),s.push(n.z);else for(o=0;p>o;++o){var C=+z(n=a[o],o),D=+A(n,o),E=+B(n,o);t>C&&(t=C),u>D&&(u=D),v>E&&(v=E),C>w&&(w=C),D>x&&(x=D),E>y&&(y=E),q.push(C),r.push(D),s.push(E)}var F=w-t,G=x-u,H=y-v;F>=G&&F>=H?(x=u+F,y=v+F):G>=H&&G>=F?(w=t+G,y=v+G):(w=t+H,x=u+H);var I=rd();if(I.add=function(a){h(I,a,+z(a,++o),+A(a,o),+B(a,o),t,u,v,w,x,y)},I.visit=function(a){sd(a,I,t,u,v,w,x,y)},I.find=function(a){return td(I,a[0],a[1],a[2],t,u,v,w,x,y)},o=-1,null==b){for(;++o<p;)h(I,a[o],q[o],r[o],s[o],t,u,v,w,x,y);--o}else a.forEach(I.add);return q=r=s=a=n=null,I}var i,j=Bc,k=Cc,l=Dc;return(i=arguments.length)?(j=od,k=pd,l=qd,4===i&&(f=c,e=b,g=d,d=c=b=0),h(a)):(h.x=function(a){return arguments.length?(j=a,h):j},h.y=function(a){return arguments.length?(k=a,h):k},h.z=function(a){return arguments.length?(l=a,h):l},h.extent=function(a){return arguments.length?(null==a?b=c=d=e=f=g=null:(b=+a[0][0],c=+a[0][1],d=+a[0][2],e=+a[1][0],f=+a[1][1],g=+a[1][2]),h):null==b?null:[[b,c,d],[e,f,g]]},h.size=function(a){return arguments.length?(null==a?b=c=d=e=f=g=null:(b=c=d=0,e=+a[0],f=+a[1],g=+a[1]),h):null==b?null:[e-b,f-c,g-d]},h)},jg.interpolateRgb=ud,jg.interpolateObject=vd,jg.interpolateNumber=wd,jg.interpolateString=xd;var ni=/[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,oi=new RegExp(ni.source,"g");jg.interpolate=yd,jg.interpolators=[function(a,b){var c=typeof b;return("string"===c?fh.has(b)||/^(#|rgb\(|hsl\()/.test(b)?ud:xd:b instanceof ga?ud:Array.isArray(b)?zd:"object"===c&&isNaN(b)?vd:wd)(a,b)}],jg.interpolateArray=zd;var pi=function(){return s},qi=jg.map({linear:pi,poly:Gd,quad:function(){return Dd},cubic:function(){return Ed},sin:function(){return Hd},exp:function(){return Id},circle:function(){return Jd},elastic:Kd,back:Ld,bounce:function(){return Md}}),ri=jg.map({"in":s,out:Bd,"in-out":Cd,"out-in":function(a){return Cd(Bd(a))}});jg.ease=function(a){var b=a.indexOf("-"),c=b>=0?a.slice(0,b):a,d=b>=0?a.slice(b+1):"in";return c=qi.get(c)||pi,d=ri.get(d)||s,Ad(d(c.apply(null,kg.call(arguments,1))))},jg.interpolateHcl=Nd,jg.interpolateHsl=Od,jg.interpolateLab=Pd,jg.interpolateRound=Qd,jg.transform=function(a){var b=mg.createElementNS(jg.ns.prefix.svg,"g");return(jg.transform=function(a){if(null!=a){b.setAttribute("transform",a);var c=b.transform.baseVal.consolidate()}return new Rd(c?c.matrix:si)})(a)},Rd.prototype.toString=function(){return"translate("+this.translate+")rotate("+this.rotate+")skewX("+this.skew+")scale("+this.scale+")"};var si={a:1,b:0,c:0,d:1,e:0,f:0};jg.interpolateTransform=Vd,jg.layout={},jg.layout.bundle=function(){return function(a){for(var b=[],c=-1,d=a.length;++c<d;)b.push(Yd(a[c]));return b}},jg.layout.chord=function(){function a(){var a,j,l,m,n,o={},p=[],q=jg.range(f),r=[];for(c=[],d=[],a=0,m=-1;++m<f;){for(j=0,n=-1;++n<f;)j+=e[m][n];p.push(j),r.push(jg.range(f)),a+=j}for(g&&q.sort(function(a,b){return g(p[a],p[b])}),h&&r.forEach(function(a,b){a.sort(function(a,c){return h(e[b][a],e[b][c])})}),a=(Og-k*f)/a,j=0,m=-1;++m<f;){for(l=j,n=-1;++n<f;){var s=q[m],t=r[s][n],u=e[s][t],v=j,w=j+=u*a;o[s+"-"+t]={index:s,subindex:t,startAngle:v,endAngle:w,value:u}}d[s]={index:s,startAngle:l,endAngle:j,value:(j-l)/a},j+=k}for(m=-1;++m<f;)for(n=m-1;++n<f;){var x=o[m+"-"+n],y=o[n+"-"+m];(x.value||y.value)&&c.push(x.value<y.value?{source:y,target:x}:{source:x,target:y})}i&&b()}function b(){c.sort(function(a,b){return i((a.source.value+a.target.value)/2,(b.source.value+b.target.value)/2)})}var c,d,e,f,g,h,i,j={},k=0;return j.matrix=function(a){return arguments.length?(f=(e=a)&&e.length,c=d=null,j):e},j.padding=function(a){return arguments.length?(k=a,c=d=null,j):k},j.sortGroups=function(a){return arguments.length?(g=a,c=d=null,j):g},j.sortSubgroups=function(a){return arguments.length?(h=a,c=null,j):h},j.sortChords=function(a){return arguments.length?(i=a,c&&b(),j):i},j.chords=function(){return c||a(),c},j.groups=function(){return d||a(),d},j},jg.layout.force=function(){function a(a){return function(b,c,d,e){if(b.point!==a){var f=b.cx-a.x,g=b.cy-a.y,h=e-c,i=f*f+g*g;if(i>h*h/q){if(o>i){var j=b.charge/i;a.px-=f*j,a.py-=g*j}return!0}if(b.point&&i&&o>i){var j=b.pointCharge/i;a.px-=f*j,a.py-=g*j}}return!b.charge}}function b(a){a.px=jg.event.x,a.py=jg.event.y,h.resume()}var c,d,e,f,g,h={},i=jg.dispatch("start","tick","end"),j=[1,1],k=.9,l=ti,m=ui,n=-30,o=vi,p=.1,q=.64,r=[],t=[];return h.tick=function(){if((d*=.99)<.005)return i.end({type:"end",alpha:d=0}),!0;var b,c,h,l,m,o,q,s,u,v=r.length,w=t.length;for(c=0;w>c;++c)h=t[c],l=h.source,m=h.target,s=m.x-l.x,u=m.y-l.y,(o=s*s+u*u)&&(o=d*f[c]*((o=Math.sqrt(o))-e[c])/o,s*=o,u*=o,m.x-=s*(q=l.weight/(m.weight+l.weight)),m.y-=u*q,l.x+=s*(q=1-q),l.y+=u*q);if((q=d*p)&&(s=j[0]/2,u=j[1]/2,c=-1,q))for(;++c<v;)h=r[c],h.x+=(s-h.x)*q,h.y+=(u-h.y)*q;if(n)for(de(b=jg.geom.quadtree(r),d,g),c=-1;++c<v;)(h=r[c]).fixed||b.visit(a(h));for(c=-1;++c<v;)h=r[c],h.fixed?(h.x=h.px,h.y=h.py):(h.x-=(h.px-(h.px=h.x))*k,h.y-=(h.py-(h.py=h.y))*k);i.tick({type:"tick",alpha:d})},h.nodes=function(a){return arguments.length?(r=a,h):r},h.links=function(a){return arguments.length?(t=a,h):t},h.size=function(a){return arguments.length?(j=a,h):j},h.linkDistance=function(a){return arguments.length?(l="function"==typeof a?a:+a,h):l},h.distance=h.linkDistance,h.linkStrength=function(a){return arguments.length?(m="function"==typeof a?a:+a,h):m},h.friction=function(a){return arguments.length?(k=+a,h):k},h.charge=function(a){return arguments.length?(n="function"==typeof a?a:+a,h):n},h.chargeDistance=function(a){return arguments.length?(o=a*a,h):Math.sqrt(o)},h.gravity=function(a){return arguments.length?(p=+a,h):p},h.theta=function(a){return arguments.length?(q=a*a,h):Math.sqrt(q)},h.alpha=function(a){return arguments.length?(a=+a,d?d=a>0?a:0:a>0&&(i.start({type:"start",alpha:d=a}),jg.timer(h.tick)),h):d},h.start=function(){function a(a,d){if(!c){for(c=new Array(i),h=0;i>h;++h)c[h]=[];for(h=0;k>h;++h){var e=t[h];c[e.source.index].push(e.target),c[e.target.index].push(e.source)}}for(var f,g=c[b],h=-1,j=g.length;++h<j;)if(!isNaN(f=g[h][a]))return f;return Math.random()*d}var b,c,d,i=r.length,k=t.length,o=j[0],p=j[1];for(b=0;i>b;++b)(d=r[b]).index=b,d.weight=0;for(b=0;k>b;++b)d=t[b],"number"==typeof d.source&&(d.source=r[d.source]),"number"==typeof d.target&&(d.target=r[d.target]),++d.source.weight,++d.target.weight;for(b=0;i>b;++b)d=r[b],isNaN(d.x)&&(d.x=a("x",o)),isNaN(d.y)&&(d.y=a("y",p)),isNaN(d.px)&&(d.px=d.x),isNaN(d.py)&&(d.py=d.y);if(e=[],"function"==typeof l)for(b=0;k>b;++b)e[b]=+l.call(this,t[b],b);else for(b=0;k>b;++b)e[b]=l;if(f=[],"function"==typeof m)for(b=0;k>b;++b)f[b]=+m.call(this,t[b],b);else for(b=0;k>b;++b)f[b]=m;if(g=[],"function"==typeof n)for(b=0;i>b;++b)g[b]=+n.call(this,r[b],b);else for(b=0;i>b;++b)g[b]=n;return h.resume()},h.resume=function(){return h.alpha(.1)},h.stop=function(){return h.alpha(0)},h.drag=function(){return c||(c=jg.behavior.drag().origin(s).on("dragstart.force",_d).on("drag.force",b).on("dragend.force",ae)),arguments.length?void this.on("mouseover.force",be).on("mouseout.force",ce).call(c):c},jg.rebind(h,i,"on")};var ti=20,ui=1,vi=1/0;jg.layout.force3d=function(){function a(a){return function(b,c,d,e,f){if(b.point!==a){var g=b.cx-a.x,h=b.cy-a.y,i=b.cz-a.z,j=f-c,k=g*g+h*h+i*i;if(k>j*j/o){if(m>k){var l=b.charge/k;a.px-=g*l,a.py-=h*l,a.pz-=i*l}return!0}if(b.point&&k&&m>k){var l=b.pointCharge/k;a.px-=g*l,a.py-=h*l,a.pz-=i*l}}return!b.charge}}var b,c,d,e,f={},g=jg.dispatch("start","tick","end"),h=[1,1,1],i=.9,j=ti,k=ui,l=-30,m=vi,n=.1,o=.64,p=[],q=[];return f.tick=function(){if((b*=.99)<.005)return g.end({type:"end",alpha:b=0}),!0;var f,j,k,m,o,r,s,t,u,v,w=p.length,x=q.length;for(j=0;x>j;++j)k=q[j],m=k.source,o=k.target,t=o.x-m.x,u=o.y-m.y,v=o.z-m.z,(r=t*t+u*u+v*v)&&(r=b*d[j]*((r=Math.sqrt(r))-c[j])/r,t*=r,u*=r,v*=r,o.x-=t*(s=m.weight/(o.weight+m.weight)),o.y-=u*s,o.z-=v*s,m.x+=t*(s=1-s),m.y+=u*s,m.z+=v*s);if((s=b*n)&&(t=h[0]/2,u=h[1]/2,v=h[2]/2,j=-1,s))for(;++j<w;)k=p[j],k.x+=(t-k.x)*s,k.y+=(u-k.y)*s,k.z+=(v-k.z)*s;if(l)for(ee(f=jg.geom.octree(p),b,e),j=-1;++j<w;)(k=p[j]).fixed||f.visit(a(k));for(j=-1;++j<w;)k=p[j],k.fixed?(k.x=k.px,k.y=k.py,k.z=k.pz):(k.x-=(k.px-(k.px=k.x))*i,k.y-=(k.py-(k.py=k.y))*i,k.z-=(k.pz-(k.pz=k.z))*i);g.tick({type:"tick",alpha:b})},f.nodes=function(a){return arguments.length?(p=a,f):p},f.links=function(a){return arguments.length?(q=a,f):q},f.size=function(a){return arguments.length?(h=a,f):h},f.linkDistance=function(a){return arguments.length?(j="function"==typeof a?a:+a,f):j},f.distance=f.linkDistance,f.linkStrength=function(a){return arguments.length?(k="function"==typeof a?a:+a,f):k},f.friction=function(a){return arguments.length?(i=+a,f):i},f.charge=function(a){return arguments.length?(l="function"==typeof a?a:+a,f):l},f.chargeDistance=function(a){return arguments.length?(m=a*a,f):Math.sqrt(m)},f.gravity=function(a){return arguments.length?(n=+a,f):n},f.theta=function(a){return arguments.length?(o=a*a,f):Math.sqrt(o)},f.alpha=function(a){return arguments.length?(a=+a,b?b=a>0?a:0:a>0&&(g.start({type:"start",alpha:b=a}),jg.timer(f.tick)),f):b},f.start=function(){function a(a,c){if(!g){for(g=new Array(m),h=0;m>h;++h)g[h]=[];for(h=0;n>h;++h){var d=q[h];g[d.source.index].push(d.target),g[d.target.index].push(d.source)}}for(var e,f=g[b],h=-1,i=f.length;++h<i;)if(!isNaN(e=f[h][a]))return e;return Math.random()*c}var b,g,i,m=p.length,n=q.length,o=h[0],r=h[1],s=h[2];for(b=0;m>b;++b)(i=p[b]).index=b,i.weight=0;for(b=0;n>b;++b)i=q[b],"number"==typeof i.source&&(i.source=p[i.source]),"number"==typeof i.target&&(i.target=p[i.target]),++i.source.weight,++i.target.weight;for(b=0;m>b;++b)i=p[b],isNaN(i.x)&&(i.x=a("x",o)),isNaN(i.y)&&(i.y=a("y",r)),isNaN(i.z)&&(i.z=a("z",s)),isNaN(i.px)&&(i.px=i.x),isNaN(i.py)&&(i.py=i.y),isNaN(i.pz)&&(i.pz=i.z);if(c=[],"function"==typeof j)for(b=0;n>b;++b)c[b]=+j.call(this,q[b],b);else for(b=0;n>b;++b)c[b]=j;if(d=[],"function"==typeof k)for(b=0;n>b;++b)d[b]=+k.call(this,q[b],b);else for(b=0;n>b;++b)d[b]=k;if(e=[],"function"==typeof l)for(b=0;m>b;++b)e[b]=+l.call(this,p[b],b);else for(b=0;m>b;++b)e[b]=l;return f.resume()},f.resume=function(){return f.alpha(.1)},f.stop=function(){return f.alpha(0)},jg.rebind(f,g,"on")},jg.layout.hierarchy=function(){function a(e){var f,g=[e],h=[];for(e.depth=0;null!=(f=g.pop());)if(h.push(f),(j=c.call(a,f,f.depth))&&(i=j.length)){for(var i,j,k;--i>=0;)g.push(k=j[i]),k.parent=f,k.depth=f.depth+1;d&&(f.value=0),f.children=j}else d&&(f.value=+d.call(a,f,f.depth)||0),delete f.children;return he(e,function(a){var c,e;b&&(c=a.children)&&c.sort(b),d&&(e=a.parent)&&(e.value+=a.value)}),h}var b=ke,c=ie,d=je;return a.sort=function(c){return arguments.length?(b=c,a):b},a.children=function(b){return arguments.length?(c=b,a):c},a.value=function(b){return arguments.length?(d=b,a):d},a.revalue=function(b){return d&&(ge(b,function(a){a.children&&(a.value=0)}),he(b,function(b){var c;b.children||(b.value=+d.call(a,b,b.depth)||0),(c=b.parent)&&(c.value+=b.value)})),b},a},jg.layout.partition=function(){function a(b,c,d,e){var f=b.children;if(b.x=c,b.y=b.depth*e,b.dx=d,b.dy=e,f&&(g=f.length)){var g,h,i,j=-1;for(d=b.value?d/b.value:0;++j<g;)a(h=f[j],c,i=h.value*d,e),c+=i}}function b(a){var c=a.children,d=0;if(c&&(e=c.length))for(var e,f=-1;++f<e;)d=Math.max(d,b(c[f]));return 1+d}function c(c,f){var g=d.call(this,c,f);return a(g[0],0,e[0],e[1]/b(g[0])),g}var d=jg.layout.hierarchy(),e=[1,1];return c.size=function(a){return arguments.length?(e=a,c):e},fe(c,d)},jg.layout.pie=function(){function a(g){var h,i=g.length,j=g.map(function(c,d){return+b.call(a,c,d)}),k=+("function"==typeof d?d.apply(this,arguments):d),l=("function"==typeof e?e.apply(this,arguments):e)-k,m=Math.min(Math.abs(l)/i,+("function"==typeof f?f.apply(this,arguments):f)),n=m*(0>l?-1:1),o=(l-i*n)/jg.sum(j),p=jg.range(i),q=[];return null!=c&&p.sort(c===wi?function(a,b){return j[b]-j[a]}:function(a,b){return c(g[a],g[b])}),p.forEach(function(a){q[a]={data:g[a],value:h=j[a],startAngle:k,endAngle:k+=h*o+n,padAngle:m}}),q}var b=Number,c=wi,d=0,e=Og,f=0;return a.value=function(c){return arguments.length?(b=c,a):b},a.sort=function(b){return arguments.length?(c=b,a):c},a.startAngle=function(b){return arguments.length?(d=b,a):d},a.endAngle=function(b){return arguments.length?(e=b,a):e},a.padAngle=function(b){return arguments.length?(f=b,a):f},a};var wi={};jg.layout.stack=function(){function a(h,i){if(!(m=h.length))return h;var j=h.map(function(c,d){return b.call(a,c,d)}),k=j.map(function(b){return b.map(function(b,c){return[f.call(a,b,c),g.call(a,b,c)]})}),l=c.call(a,k,i);j=jg.permute(j,l),
k=jg.permute(k,l);var m,n,o,p,q=d.call(a,k,i),r=j[0].length;for(o=0;r>o;++o)for(e.call(a,j[0][o],p=q[o],k[0][o][1]),n=1;m>n;++n)e.call(a,j[n][o],p+=k[n-1][o][1],k[n][o][1]);return h}var b=s,c=pe,d=qe,e=oe,f=me,g=ne;return a.values=function(c){return arguments.length?(b=c,a):b},a.order=function(b){return arguments.length?(c="function"==typeof b?b:xi.get(b)||pe,a):c},a.offset=function(b){return arguments.length?(d="function"==typeof b?b:yi.get(b)||qe,a):d},a.x=function(b){return arguments.length?(f=b,a):f},a.y=function(b){return arguments.length?(g=b,a):g},a.out=function(b){return arguments.length?(e=b,a):e},a};var xi=jg.map({"inside-out":function(a){var b,c,d=a.length,e=a.map(re),f=a.map(se),g=jg.range(d).sort(function(a,b){return e[a]-e[b]}),h=0,i=0,j=[],k=[];for(b=0;d>b;++b)c=g[b],i>h?(h+=f[c],j.push(c)):(i+=f[c],k.push(c));return k.reverse().concat(j)},reverse:function(a){return jg.range(a.length).reverse()},"default":pe}),yi=jg.map({silhouette:function(a){var b,c,d,e=a.length,f=a[0].length,g=[],h=0,i=[];for(c=0;f>c;++c){for(b=0,d=0;e>b;b++)d+=a[b][c][1];d>h&&(h=d),g.push(d)}for(c=0;f>c;++c)i[c]=(h-g[c])/2;return i},wiggle:function(a){var b,c,d,e,f,g,h,i,j,k=a.length,l=a[0],m=l.length,n=[];for(n[0]=i=j=0,c=1;m>c;++c){for(b=0,e=0;k>b;++b)e+=a[b][c][1];for(b=0,f=0,h=l[c][0]-l[c-1][0];k>b;++b){for(d=0,g=(a[b][c][1]-a[b][c-1][1])/(2*h);b>d;++d)g+=(a[d][c][1]-a[d][c-1][1])/h;f+=g*a[b][c][1]}n[c]=i-=e?f/e*h:0,j>i&&(j=i)}for(c=0;m>c;++c)n[c]-=j;return n},expand:function(a){var b,c,d,e=a.length,f=a[0].length,g=1/e,h=[];for(c=0;f>c;++c){for(b=0,d=0;e>b;b++)d+=a[b][c][1];if(d)for(b=0;e>b;b++)a[b][c][1]/=d;else for(b=0;e>b;b++)a[b][c][1]=g}for(c=0;f>c;++c)h[c]=0;return h},zero:qe});jg.layout.histogram=function(){function a(a,f){for(var g,h,i=[],j=a.map(c,this),k=d.call(this,j,f),l=e.call(this,k,j,f),f=-1,m=j.length,n=l.length-1,o=b?1:1/m;++f<n;)g=i[f]=[],g.dx=l[f+1]-(g.x=l[f]),g.y=0;if(n>0)for(f=-1;++f<m;)h=j[f],h>=k[0]&&h<=k[1]&&(g=i[jg.bisect(l,h,1,n)-1],g.y+=o,g.push(a[f]));return i}var b=!0,c=Number,d=we,e=ue;return a.value=function(b){return arguments.length?(c=b,a):c},a.range=function(b){return arguments.length?(d=Aa(b),a):d},a.bins=function(b){return arguments.length?(e="number"==typeof b?function(a){return ve(a,b)}:Aa(b),a):e},a.frequency=function(c){return arguments.length?(b=!!c,a):b},a},jg.layout.pack=function(){function a(a,f){var g=c.call(this,a,f),h=g[0],i=e[0],j=e[1],k=null==b?Math.sqrt:"function"==typeof b?b:function(){return b};if(h.x=h.y=0,he(h,function(a){a.r=+k(a.value)}),he(h,Be),d){var l=d*(b?1:Math.max(2*h.r/i,2*h.r/j))/2;he(h,function(a){a.r+=l}),he(h,Be),he(h,function(a){a.r-=l})}return Ee(h,i/2,j/2,b?1:1/Math.max(2*h.r/i,2*h.r/j)),g}var b,c=jg.layout.hierarchy().sort(xe),d=0,e=[1,1];return a.size=function(b){return arguments.length?(e=b,a):e},a.radius=function(c){return arguments.length?(b=null==c||"function"==typeof c?c:+c,a):b},a.padding=function(b){return arguments.length?(d=+b,a):d},fe(a,c)},jg.layout.tree=function(){function a(a,e){var k=g.call(this,a,e),l=k[0],m=b(l);if(he(m,c),m.parent.m=-m.z,ge(m,d),j)ge(l,f);else{var n=l,o=l,p=l;ge(l,function(a){a.x<n.x&&(n=a),a.x>o.x&&(o=a),a.depth>p.depth&&(p=a)});var q=h(n,o)/2-n.x,r=i[0]/(o.x+h(o,n)/2+q),s=i[1]/(p.depth||1);ge(l,function(a){a.x=(a.x+q)*r,a.y=a.depth*s})}return k}function b(a){for(var b,c={A:null,children:[a]},d=[c];null!=(b=d.pop());)for(var e,f=b.children,g=0,h=f.length;h>g;++g)d.push((f[g]=e={_:f[g],parent:b,children:(e=f[g].children)&&e.slice()||[],A:null,a:null,z:0,m:0,c:0,s:0,t:null,i:g}).a=e);return c.children[0]}function c(a){var b=a.children,c=a.parent.children,d=a.i?c[a.i-1]:null;if(b.length){Ke(a);var f=(b[0].z+b[b.length-1].z)/2;d?(a.z=d.z+h(a._,d._),a.m=a.z-f):a.z=f}else d&&(a.z=d.z+h(a._,d._));a.parent.A=e(a,d,a.parent.A||c[0])}function d(a){a._.x=a.z+a.parent.m,a.m+=a.parent.m}function e(a,b,c){if(b){for(var d,e=a,f=a,g=b,i=e.parent.children[0],j=e.m,k=f.m,l=g.m,m=i.m;g=Ie(g),e=He(e),g&&e;)i=He(i),f=Ie(f),f.a=a,d=g.z+l-e.z-j+h(g._,e._),d>0&&(Je(Le(g,a,c),a,d),j+=d,k+=d),l+=g.m,j+=e.m,m+=i.m,k+=f.m;g&&!Ie(f)&&(f.t=g,f.m+=l-k),e&&!He(i)&&(i.t=e,i.m+=j-m,c=a)}return c}function f(a){a.x*=i[0],a.y=a.depth*i[1]}var g=jg.layout.hierarchy().sort(null).value(null),h=Ge,i=[1,1],j=null;return a.separation=function(b){return arguments.length?(h=b,a):h},a.size=function(b){return arguments.length?(j=null==(i=b)?f:null,a):j?null:i},a.nodeSize=function(b){return arguments.length?(j=null==(i=b)?null:f,a):j?i:null},fe(a,g)},jg.layout.cluster=function(){function a(a,f){var g,h=b.call(this,a,f),i=h[0],j=0;he(i,function(a){var b=a.children;b&&b.length?(a.x=Ne(b),a.y=Me(b)):(a.x=g?j+=c(a,g):0,a.y=0,g=a)});var k=Oe(i),l=Pe(i),m=k.x-c(k,l)/2,n=l.x+c(l,k)/2;return he(i,e?function(a){a.x=(a.x-i.x)*d[0],a.y=(i.y-a.y)*d[1]}:function(a){a.x=(a.x-m)/(n-m)*d[0],a.y=(1-(i.y?a.y/i.y:1))*d[1]}),h}var b=jg.layout.hierarchy().sort(null).value(null),c=Ge,d=[1,1],e=!1;return a.separation=function(b){return arguments.length?(c=b,a):c},a.size=function(b){return arguments.length?(e=null==(d=b),a):e?null:d},a.nodeSize=function(b){return arguments.length?(e=null!=(d=b),a):e?d:null},fe(a,b)},jg.layout.treemap=function(){function a(a,b){for(var c,d,e=-1,f=a.length;++e<f;)d=(c=a[e]).value*(0>b?0:b),c.area=isNaN(d)||0>=d?0:d}function b(c){var f=c.children;if(f&&f.length){var g,h,i,j=l(c),k=[],m=f.slice(),o=1/0,p="slice"===n?j.dx:"dice"===n?j.dy:"slice-dice"===n?1&c.depth?j.dy:j.dx:Math.min(j.dx,j.dy);for(a(m,j.dx*j.dy/c.value),k.area=0;(i=m.length)>0;)k.push(g=m[i-1]),k.area+=g.area,"squarify"!==n||(h=d(k,p))<=o?(m.pop(),o=h):(k.area-=k.pop().area,e(k,p,j,!1),p=Math.min(j.dx,j.dy),k.length=k.area=0,o=1/0);k.length&&(e(k,p,j,!0),k.length=k.area=0),f.forEach(b)}}function c(b){var d=b.children;if(d&&d.length){var f,g=l(b),h=d.slice(),i=[];for(a(h,g.dx*g.dy/b.value),i.area=0;f=h.pop();)i.push(f),i.area+=f.area,null!=f.z&&(e(i,f.z?g.dx:g.dy,g,!h.length),i.length=i.area=0);d.forEach(c)}}function d(a,b){for(var c,d=a.area,e=0,f=1/0,g=-1,h=a.length;++g<h;)(c=a[g].area)&&(f>c&&(f=c),c>e&&(e=c));return d*=d,b*=b,d?Math.max(b*e*o/d,d/(b*f*o)):1/0}function e(a,b,c,d){var e,f=-1,g=a.length,h=c.x,j=c.y,k=b?i(a.area/b):0;if(b==c.dx){for((d||k>c.dy)&&(k=c.dy);++f<g;)e=a[f],e.x=h,e.y=j,e.dy=k,h+=e.dx=Math.min(c.x+c.dx-h,k?i(e.area/k):0);e.z=!0,e.dx+=c.x+c.dx-h,c.y+=k,c.dy-=k}else{for((d||k>c.dx)&&(k=c.dx);++f<g;)e=a[f],e.x=h,e.y=j,e.dx=k,j+=e.dy=Math.min(c.y+c.dy-j,k?i(e.area/k):0);e.z=!1,e.dy+=c.y+c.dy-j,c.x+=k,c.dx-=k}}function f(d){var e=g||h(d),f=e[0];return f.x=0,f.y=0,f.dx=j[0],f.dy=j[1],g&&h.revalue(f),a([f],f.dx*f.dy/f.value),(g?c:b)(f),m&&(g=e),e}var g,h=jg.layout.hierarchy(),i=Math.round,j=[1,1],k=null,l=Qe,m=!1,n="squarify",o=.5*(1+Math.sqrt(5));return f.size=function(a){return arguments.length?(j=a,f):j},f.padding=function(a){function b(b){var c=a.call(f,b,b.depth);return null==c?Qe(b):Re(b,"number"==typeof c?[c,c,c,c]:c)}function c(b){return Re(b,a)}if(!arguments.length)return k;var d;return l=null==(k=a)?Qe:"function"==(d=typeof a)?b:"number"===d?(a=[a,a,a,a],c):c,f},f.round=function(a){return arguments.length?(i=a?Math.round:Number,f):i!=Number},f.sticky=function(a){return arguments.length?(m=a,g=null,f):m},f.ratio=function(a){return arguments.length?(o=a,f):o},f.mode=function(a){return arguments.length?(n=a+"",f):n},fe(f,h)},jg.random={normal:function(a,b){var c=arguments.length;return 2>c&&(b=1),1>c&&(a=0),function(){var c,d,e;do c=2*Math.random()-1,d=2*Math.random()-1,e=c*c+d*d;while(!e||e>1);return a+b*c*Math.sqrt(-2*Math.log(e)/e)}},logNormal:function(){var a=jg.random.normal.apply(jg,arguments);return function(){return Math.exp(a())}},bates:function(a){var b=jg.random.irwinHall(a);return function(){return b()/a}},irwinHall:function(a){return function(){for(var b=0,c=0;a>c;c++)b+=Math.random();return b}}},jg.scale={};var zi={floor:s,ceil:s};jg.scale.linear=function(){return Ye([0,1],[0,1],yd,!1)};var Ai={s:1,g:1,p:1,r:1,e:1};jg.scale.log=function(){return ef(jg.scale.linear().domain([0,1]),10,!0,[1,10])};var Bi=jg.format(".0e"),Ci={floor:function(a){return-Math.ceil(-a)},ceil:function(a){return-Math.floor(-a)}};jg.scale.pow=function(){return ff(jg.scale.linear(),1,[0,1])},jg.scale.sqrt=function(){return jg.scale.pow().exponent(.5)},jg.scale.ordinal=function(){return hf([],{t:"range",a:[[]]})},jg.scale.category10=function(){return jg.scale.ordinal().range(Di)},jg.scale.category20=function(){return jg.scale.ordinal().range(Ei)},jg.scale.category20b=function(){return jg.scale.ordinal().range(Fi)},jg.scale.category20c=function(){return jg.scale.ordinal().range(Gi)};var Di=[2062260,16744206,2924588,14034728,9725885,9197131,14907330,8355711,12369186,1556175].map(ta),Ei=[2062260,11454440,16744206,16759672,2924588,10018698,14034728,16750742,9725885,12955861,9197131,12885140,14907330,16234194,8355711,13092807,12369186,14408589,1556175,10410725].map(ta),Fi=[3750777,5395619,7040719,10264286,6519097,9216594,11915115,13556636,9202993,12426809,15186514,15190932,8666169,11356490,14049643,15177372,8077683,10834324,13528509,14589654].map(ta),Gi=[3244733,7057110,10406625,13032431,15095053,16616764,16625259,16634018,3253076,7652470,10607003,13101504,7695281,10394312,12369372,14342891,6513507,9868950,12434877,14277081].map(ta);jg.scale.quantile=function(){return jf([],[])},jg.scale.quantize=function(){return kf(0,1,[0,1])},jg.scale.threshold=function(){return lf([.5],[0,1])},jg.scale.identity=function(){return mf([0,1])},jg.svg={},jg.svg.arc=function(){function a(){var a=Math.max(0,+c.apply(this,arguments)),j=Math.max(0,+d.apply(this,arguments)),k=g.apply(this,arguments)-Qg,l=h.apply(this,arguments)-Qg,m=Math.abs(l-k),n=k>l?0:1;if(a>j&&(o=j,j=a,a=o),m>=Pg)return b(j,n)+(a?b(a,1-n):"")+"Z";var o,p,q,r,s,t,u,v,w,x,y,z,A=0,B=0,C=[];if((r=(+i.apply(this,arguments)||0)/2)&&(q=f===Hi?Math.sqrt(a*a+j*j):+f.apply(this,arguments),n||(B*=-1),j&&(B=ba(q/j*Math.sin(r))),a&&(A=ba(q/a*Math.sin(r)))),j){s=j*Math.cos(k+B),t=j*Math.sin(k+B),u=j*Math.cos(l-B),v=j*Math.sin(l-B);var D=Math.abs(l-k-2*B)<=Ng?0:1;if(B&&tf(s,t,u,v)===n^D){var E=(k+l)/2;s=j*Math.cos(E),t=j*Math.sin(E),u=v=null}}else s=t=0;if(a){w=a*Math.cos(l-A),x=a*Math.sin(l-A),y=a*Math.cos(k+A),z=a*Math.sin(k+A);var F=Math.abs(k-l+2*A)<=Ng?0:1;if(A&&tf(w,x,y,z)===1-n^F){var G=(k+l)/2;w=a*Math.cos(G),x=a*Math.sin(G),y=z=null}}else w=x=0;if((o=Math.min(Math.abs(j-a)/2,+e.apply(this,arguments)))>.001){p=j>a^n?0:1;var H=null==y?[w,x]:null==u?[s,t]:Hc([s,t],[y,z],[u,v],[w,x]),I=s-H[0],J=t-H[1],K=u-H[0],L=v-H[1],M=1/Math.sin(Math.acos((I*K+J*L)/(Math.sqrt(I*I+J*J)*Math.sqrt(K*K+L*L)))/2),N=Math.sqrt(H[0]*H[0]+H[1]*H[1]);if(null!=u){var O=Math.min(o,(j-N)/(M+1)),P=uf(null==y?[w,x]:[y,z],[s,t],j,O,n),Q=uf([u,v],[w,x],j,O,n);o===O?C.push("M",P[0],"A",O,",",O," 0 0,",p," ",P[1],"A",j,",",j," 0 ",1-n^tf(P[1][0],P[1][1],Q[1][0],Q[1][1]),",",n," ",Q[1],"A",O,",",O," 0 0,",p," ",Q[0]):C.push("M",P[0],"A",O,",",O," 0 1,",p," ",Q[0])}else C.push("M",s,",",t);if(null!=y){var R=Math.min(o,(a-N)/(M-1)),S=uf([s,t],[y,z],a,-R,n),T=uf([w,x],null==u?[s,t]:[u,v],a,-R,n);o===R?C.push("L",T[0],"A",R,",",R," 0 0,",p," ",T[1],"A",a,",",a," 0 ",n^tf(T[1][0],T[1][1],S[1][0],S[1][1]),",",1-n," ",S[1],"A",R,",",R," 0 0,",p," ",S[0]):C.push("L",T[0],"A",R,",",R," 0 0,",p," ",S[0])}else C.push("L",w,",",x)}else C.push("M",s,",",t),null!=u&&C.push("A",j,",",j," 0 ",D,",",n," ",u,",",v),C.push("L",w,",",x),null!=y&&C.push("A",a,",",a," 0 ",F,",",1-n," ",y,",",z);return C.push("Z"),C.join("")}function b(a,b){return"M0,"+a+"A"+a+","+a+" 0 1,"+b+" 0,"+-a+"A"+a+","+a+" 0 1,"+b+" 0,"+a}var c=of,d=pf,e=nf,f=Hi,g=qf,h=rf,i=sf;return a.innerRadius=function(b){return arguments.length?(c=Aa(b),a):c},a.outerRadius=function(b){return arguments.length?(d=Aa(b),a):d},a.cornerRadius=function(b){return arguments.length?(e=Aa(b),a):e},a.padRadius=function(b){return arguments.length?(f=b==Hi?Hi:Aa(b),a):f},a.startAngle=function(b){return arguments.length?(g=Aa(b),a):g},a.endAngle=function(b){return arguments.length?(h=Aa(b),a):h},a.padAngle=function(b){return arguments.length?(i=Aa(b),a):i},a.centroid=function(){var a=(+c.apply(this,arguments)+ +d.apply(this,arguments))/2,b=(+g.apply(this,arguments)+ +h.apply(this,arguments))/2-Qg;return[Math.cos(b)*a,Math.sin(b)*a]},a};var Hi="auto";jg.svg.line=function(){return vf(s)};var Ii=jg.map({linear:wf,"linear-closed":xf,step:yf,"step-before":zf,"step-after":Af,basis:Gf,"basis-open":Hf,"basis-closed":If,bundle:Jf,cardinal:Df,"cardinal-open":Bf,"cardinal-closed":Cf,monotone:Pf});Ii.forEach(function(a,b){b.key=a,b.closed=/-closed$/.test(a)});var Ji=[0,2/3,1/3,0],Ki=[0,1/3,2/3,0],Li=[0,1/6,2/3,1/6];jg.svg.line.radial=function(){var a=vf(Qf);return a.radius=a.x,delete a.x,a.angle=a.y,delete a.y,a},zf.reverse=Af,Af.reverse=zf,jg.svg.area=function(){return Rf(s)},jg.svg.area.radial=function(){var a=Rf(Qf);return a.radius=a.x,delete a.x,a.innerRadius=a.x0,delete a.x0,a.outerRadius=a.x1,delete a.x1,a.angle=a.y,delete a.y,a.startAngle=a.y0,delete a.y0,a.endAngle=a.y1,delete a.y1,a},jg.svg.chord=function(){function a(a,h){var i=b(this,f,a,h),j=b(this,g,a,h);return"M"+i.p0+d(i.r,i.p1,i.a1-i.a0)+(c(i,j)?e(i.r,i.p1,i.r,i.p0):e(i.r,i.p1,j.r,j.p0)+d(j.r,j.p1,j.a1-j.a0)+e(j.r,j.p1,i.r,i.p0))+"Z"}function b(a,b,c,d){var e=b.call(a,c,d),f=h.call(a,e,d),g=i.call(a,e,d)-Qg,k=j.call(a,e,d)-Qg;return{r:f,a0:g,a1:k,p0:[f*Math.cos(g),f*Math.sin(g)],p1:[f*Math.cos(k),f*Math.sin(k)]}}function c(a,b){return a.a0==b.a0&&a.a1==b.a1}function d(a,b,c){return"A"+a+","+a+" 0 "+ +(c>Ng)+",1 "+b}function e(a,b,c,d){return"Q 0,0 "+d}var f=rc,g=sc,h=Sf,i=qf,j=rf;return a.radius=function(b){return arguments.length?(h=Aa(b),a):h},a.source=function(b){return arguments.length?(f=Aa(b),a):f},a.target=function(b){return arguments.length?(g=Aa(b),a):g},a.startAngle=function(b){return arguments.length?(i=Aa(b),a):i},a.endAngle=function(b){return arguments.length?(j=Aa(b),a):j},a},jg.svg.diagonal=function(){function a(a,e){var f=b.call(this,a,e),g=c.call(this,a,e),h=(f.y+g.y)/2,i=[f,{x:f.x,y:h},{x:g.x,y:h},g];return i=i.map(d),"M"+i[0]+"C"+i[1]+" "+i[2]+" "+i[3]}var b=rc,c=sc,d=Tf;return a.source=function(c){return arguments.length?(b=Aa(c),a):b},a.target=function(b){return arguments.length?(c=Aa(b),a):c},a.projection=function(b){return arguments.length?(d=b,a):d},a},jg.svg.diagonal.radial=function(){var a=jg.svg.diagonal(),b=Tf,c=a.projection;return a.projection=function(a){return arguments.length?c(Uf(b=a)):b},a},jg.svg.symbol=function(){function a(a,d){return(Mi.get(b.call(this,a,d))||Xf)(c.call(this,a,d))}var b=Wf,c=Vf;return a.type=function(c){return arguments.length?(b=Aa(c),a):b},a.size=function(b){return arguments.length?(c=Aa(b),a):c},a};var Mi=jg.map({circle:Xf,cross:function(a){var b=Math.sqrt(a/5)/2;return"M"+-3*b+","+-b+"H"+-b+"V"+-3*b+"H"+b+"V"+-b+"H"+3*b+"V"+b+"H"+b+"V"+3*b+"H"+-b+"V"+b+"H"+-3*b+"Z"},diamond:function(a){var b=Math.sqrt(a/(2*Oi)),c=b*Oi;return"M0,"+-b+"L"+c+",0 0,"+b+" "+-c+",0Z"},square:function(a){var b=Math.sqrt(a)/2;return"M"+-b+","+-b+"L"+b+","+-b+" "+b+","+b+" "+-b+","+b+"Z"},"triangle-down":function(a){var b=Math.sqrt(a/Ni),c=b*Ni/2;return"M0,"+c+"L"+b+","+-c+" "+-b+","+-c+"Z"},"triangle-up":function(a){var b=Math.sqrt(a/Ni),c=b*Ni/2;return"M0,"+-c+"L"+b+","+c+" "+-b+","+c+"Z"}});jg.svg.symbolTypes=Mi.keys();var Ni=Math.sqrt(3),Oi=Math.tan(30*Rg);Eg.transition=function(a){for(var b,c,d=Pi||++Ti,e=ag(a),f=[],g=Qi||{time:Date.now(),ease:Fd,delay:0,duration:250},h=-1,i=this.length;++h<i;){f.push(b=[]);for(var j=this[h],k=-1,l=j.length;++k<l;)(c=j[k])&&bg(c,k,e,d,g),b.push(c)}return Zf(f,e,d)},Eg.interrupt=function(a){return this.each(null==a?Ri:Yf(ag(a)))};var Pi,Qi,Ri=Yf(ag()),Si=[],Ti=0;Si.call=Eg.call,Si.empty=Eg.empty,Si.node=Eg.node,Si.size=Eg.size,jg.transition=function(a,b){return a&&a.transition?Pi?a.transition(b):a:jg.selection().transition(a)},jg.transition.prototype=Si,Si.select=function(a){var b,c,d,e=this.id,f=this.namespace,g=[];a=C(a);for(var h=-1,i=this.length;++h<i;){g.push(b=[]);for(var j=this[h],k=-1,l=j.length;++k<l;)(d=j[k])&&(c=a.call(d,d.__data__,k,h))?("__data__"in d&&(c.__data__=d.__data__),bg(c,k,f,e,d[f][e]),b.push(c)):b.push(null)}return Zf(g,f,e)},Si.selectAll=function(a){var b,c,d,e,f,g=this.id,h=this.namespace,i=[];a=D(a);for(var j=-1,k=this.length;++j<k;)for(var l=this[j],m=-1,n=l.length;++m<n;)if(d=l[m]){f=d[h][g],c=a.call(d,d.__data__,m,j),i.push(b=[]);for(var o=-1,p=c.length;++o<p;)(e=c[o])&&bg(e,o,h,g,f),b.push(e)}return Zf(i,h,g)},Si.filter=function(a){var b,c,d,e=[];"function"!=typeof a&&(a=P(a));for(var f=0,g=this.length;g>f;f++){e.push(b=[]);for(var c=this[f],h=0,i=c.length;i>h;h++)(d=c[h])&&a.call(d,d.__data__,h,f)&&b.push(d)}return Zf(e,this.namespace,this.id)},Si.tween=function(a,b){var c=this.id,d=this.namespace;return arguments.length<2?this.node()[d][c].tween.get(a):R(this,null==b?function(b){b[d][c].tween.remove(a)}:function(e){e[d][c].tween.set(a,b)})},Si.attr=function(a,b){function c(){this.removeAttribute(h)}function d(){this.removeAttributeNS(h.space,h.local)}function e(a){return null==a?c:(a+="",function(){var b,c=this.getAttribute(h);return c!==a&&(b=g(c,a),function(a){this.setAttribute(h,b(a))})})}function f(a){return null==a?d:(a+="",function(){var b,c=this.getAttributeNS(h.space,h.local);return c!==a&&(b=g(c,a),function(a){this.setAttributeNS(h.space,h.local,b(a))})})}if(arguments.length<2){for(b in a)this.attr(b,a[b]);return this}var g="transform"==a?Vd:yd,h=jg.ns.qualify(a);return $f(this,"attr."+a,b,h.local?f:e)},Si.attrTween=function(a,b){function c(a,c){var d=b.call(this,a,c,this.getAttribute(e));return d&&function(a){this.setAttribute(e,d(a))}}function d(a,c){var d=b.call(this,a,c,this.getAttributeNS(e.space,e.local));return d&&function(a){this.setAttributeNS(e.space,e.local,d(a))}}var e=jg.ns.qualify(a);return this.tween("attr."+a,e.local?d:c)},Si.style=function(a,c,d){function e(){this.style.removeProperty(a)}function f(c){return null==c?e:(c+="",function(){var e,f=b(this).getComputedStyle(this,null).getPropertyValue(a);return f!==c&&(e=yd(f,c),function(b){this.style.setProperty(a,e(b),d)})})}var g=arguments.length;if(3>g){if("string"!=typeof a){2>g&&(c="");for(d in a)this.style(d,a[d],c);return this}d=""}return $f(this,"style."+a,c,f)},Si.styleTween=function(a,c,d){function e(e,f){var g=c.call(this,e,f,b(this).getComputedStyle(this,null).getPropertyValue(a));return g&&function(b){this.style.setProperty(a,g(b),d)}}return arguments.length<3&&(d=""),this.tween("style."+a,e)},Si.text=function(a){return $f(this,"text",a,_f)},Si.remove=function(){var a=this.namespace;return this.each("end.transition",function(){var b;this[a].count<2&&(b=this.parentNode)&&b.removeChild(this)})},Si.ease=function(a){var b=this.id,c=this.namespace;return arguments.length<1?this.node()[c][b].ease:("function"!=typeof a&&(a=jg.ease.apply(jg,arguments)),R(this,function(d){d[c][b].ease=a}))},Si.delay=function(a){var b=this.id,c=this.namespace;return arguments.length<1?this.node()[c][b].delay:R(this,"function"==typeof a?function(d,e,f){d[c][b].delay=+a.call(d,d.__data__,e,f)}:(a=+a,function(d){d[c][b].delay=a}))},Si.duration=function(a){var b=this.id,c=this.namespace;return arguments.length<1?this.node()[c][b].duration:R(this,"function"==typeof a?function(d,e,f){d[c][b].duration=Math.max(1,a.call(d,d.__data__,e,f))}:(a=Math.max(1,a),function(d){d[c][b].duration=a}))},Si.each=function(a,b){var c=this.id,d=this.namespace;if(arguments.length<2){var e=Qi,f=Pi;try{Pi=c,R(this,function(b,e,f){Qi=b[d][c],a.call(b,b.__data__,e,f)})}finally{Qi=e,Pi=f}}else R(this,function(e){var f=e[d][c];(f.event||(f.event=jg.dispatch("start","end","interrupt"))).on(a,b)});return this},Si.transition=function(){for(var a,b,c,d,e=this.id,f=++Ti,g=this.namespace,h=[],i=0,j=this.length;j>i;i++){h.push(a=[]);for(var b=this[i],k=0,l=b.length;l>k;k++)(c=b[k])&&(d=c[g][e],bg(c,k,g,f,{time:d.time,ease:d.ease,delay:d.delay+d.duration,duration:d.duration})),a.push(c)}return Zf(h,g,f)},jg.svg.axis=function(){function a(a){a.each(function(){var a,j=jg.select(this),k=this.__chart__||c,l=this.__chart__=c.copy(),m=null==i?l.ticks?l.ticks.apply(l,h):l.domain():i,n=null==b?l.tickFormat?l.tickFormat.apply(l,h):s:b,o=j.selectAll(".tick").data(m,l),p=o.enter().insert("g",".domain").attr("class","tick").style("opacity",Lg),q=jg.transition(o.exit()).style("opacity",Lg).remove(),r=jg.transition(o.order()).style("opacity",1),t=Math.max(e,0)+g,u=Te(l),v=j.selectAll(".domain").data([0]),w=(v.enter().append("path").attr("class","domain"),jg.transition(v));p.append("line"),p.append("text");var x,y,z,A,B=p.select("line"),C=r.select("line"),D=o.select("text").text(n),E=p.select("text"),F=r.select("text"),G="top"===d||"left"===d?-1:1;if("bottom"===d||"top"===d?(a=cg,x="x",z="y",y="x2",A="y2",D.attr("dy",0>G?"0em":".71em").style("text-anchor","middle"),w.attr("d","M"+u[0]+","+G*f+"V0H"+u[1]+"V"+G*f)):(a=dg,x="y",z="x",y="y2",A="x2",D.attr("dy",".32em").style("text-anchor",0>G?"end":"start"),w.attr("d","M"+G*f+","+u[0]+"H0V"+u[1]+"H"+G*f)),B.attr(A,G*e),E.attr(z,G*t),C.attr(y,0).attr(A,G*e),F.attr(x,0).attr(z,G*t),l.rangeBand){var H=l,I=H.rangeBand()/2;k=l=function(a){return H(a)+I}}else k.rangeBand?k=l:q.call(a,l,k);p.call(a,k,l),r.call(a,l,l)})}var b,c=jg.scale.linear(),d=Ui,e=6,f=6,g=3,h=[10],i=null;return a.scale=function(b){return arguments.length?(c=b,a):c},a.orient=function(b){return arguments.length?(d=b in Vi?b+"":Ui,a):d},a.ticks=function(){return arguments.length?(h=arguments,a):h},a.tickValues=function(b){return arguments.length?(i=b,a):i},a.tickFormat=function(c){return arguments.length?(b=c,a):b},a.tickSize=function(b){var c=arguments.length;return c?(e=+b,f=+arguments[c-1],a):e},a.innerTickSize=function(b){return arguments.length?(e=+b,a):e},a.outerTickSize=function(b){return arguments.length?(f=+b,a):f},a.tickPadding=function(b){return arguments.length?(g=+b,a):g},a.tickSubdivide=function(){return arguments.length&&a},a};var Ui="bottom",Vi={top:1,right:1,bottom:1,left:1};jg.svg.brush=function(){function a(b){b.each(function(){var b=jg.select(this).style("pointer-events","all").style("-webkit-tap-highlight-color","rgba(0,0,0,0)").on("mousedown.brush",f).on("touchstart.brush",f),g=b.selectAll(".background").data([0]);g.enter().append("rect").attr("class","background").style("visibility","hidden").style("cursor","crosshair"),b.selectAll(".extent").data([0]).enter().append("rect").attr("class","extent").style("cursor","move");var h=b.selectAll(".resize").data(p,s);h.exit().remove(),h.enter().append("g").attr("class",function(a){return"resize "+a}).style("cursor",function(a){return Wi[a]}).append("rect").attr("x",function(a){return/[ew]$/.test(a)?-3:null}).attr("y",function(a){return/^[ns]/.test(a)?-3:null}).attr("width",6).attr("height",6).style("visibility","hidden"),h.style("display",a.empty()?"none":null);var i,l=jg.transition(b),m=jg.transition(g);j&&(i=Te(j),m.attr("x",i[0]).attr("width",i[1]-i[0]),d(l)),k&&(i=Te(k),m.attr("y",i[0]).attr("height",i[1]-i[0]),e(l)),c(l)})}function c(a){a.selectAll(".resize").attr("transform",function(a){return"translate("+l[+/e$/.test(a)]+","+m[+/^s/.test(a)]+")"})}function d(a){a.select(".extent").attr("x",l[0]),a.selectAll(".extent,.n>rect,.s>rect").attr("width",l[1]-l[0])}function e(a){a.select(".extent").attr("y",m[0]),a.selectAll(".extent,.e>rect,.w>rect").attr("height",m[1]-m[0])}function f(){function f(){32==jg.event.keyCode&&(D||(t=null,F[0]-=l[1],F[1]-=m[1],D=2),y())}function p(){32==jg.event.keyCode&&2==D&&(F[0]+=l[1],F[1]+=m[1],D=0,y())}function q(){var a=jg.mouse(v),b=!1;u&&(a[0]+=u[0],a[1]+=u[1]),D||(jg.event.altKey?(t||(t=[(l[0]+l[1])/2,(m[0]+m[1])/2]),F[0]=l[+(a[0]<t[0])],F[1]=m[+(a[1]<t[1])]):t=null),B&&r(a,j,0)&&(d(z),b=!0),C&&r(a,k,1)&&(e(z),b=!0),b&&(c(z),x({type:"brush",mode:D?"move":"resize"}))}function r(a,b,c){var d,e,f=Te(b),i=f[0],j=f[1],k=F[c],p=c?m:l,q=p[1]-p[0];return D&&(i-=k,j-=q+k),d=(c?o:n)?Math.max(i,Math.min(j,a[c])):a[c],D?e=(d+=k)+q:(t&&(k=Math.max(i,Math.min(j,2*t[c]-d))),d>k?(e=d,d=k):e=k),p[0]!=d||p[1]!=e?(c?h=null:g=null,p[0]=d,p[1]=e,!0):void 0}function s(){q(),z.style("pointer-events","all").selectAll(".resize").style("display",a.empty()?"none":null),jg.select("body").style("cursor",null),G.on("mousemove.brush",null).on("mouseup.brush",null).on("touchmove.brush",null).on("touchend.brush",null).on("keydown.brush",null).on("keyup.brush",null),E(),x({type:"brushend"})}var t,u,v=this,w=jg.select(jg.event.target),x=i.of(v,arguments),z=jg.select(v),A=w.datum(),B=!/^(n|s)$/.test(A)&&j,C=!/^(e|w)$/.test(A)&&k,D=w.classed("extent"),E=X(v),F=jg.mouse(v),G=jg.select(b(v)).on("keydown.brush",f).on("keyup.brush",p);if(jg.event.changedTouches?G.on("touchmove.brush",q).on("touchend.brush",s):G.on("mousemove.brush",q).on("mouseup.brush",s),z.interrupt().selectAll("*").interrupt(),D)F[0]=l[0]-F[0],F[1]=m[0]-F[1];else if(A){var H=+/w$/.test(A),I=+/^n/.test(A);u=[l[1-H]-F[0],m[1-I]-F[1]],F[0]=l[H],F[1]=m[I]}else jg.event.altKey&&(t=F.slice());z.style("pointer-events","none").selectAll(".resize").style("display",null),jg.select("body").style("cursor",w.style("cursor")),x({type:"brushstart"}),q()}var g,h,i=A(a,"brushstart","brush","brushend"),j=null,k=null,l=[0,0],m=[0,0],n=!0,o=!0,p=Xi[0];return a.event=function(a){a.each(function(){var a=i.of(this,arguments),b={x:l,y:m,i:g,j:h},c=this.__chart__||b;this.__chart__=b,Pi?jg.select(this).transition().each("start.brush",function(){g=c.i,h=c.j,l=c.x,m=c.y,a({type:"brushstart"})}).tween("brush:brush",function(){var c=zd(l,b.x),d=zd(m,b.y);return g=h=null,function(e){l=b.x=c(e),m=b.y=d(e),a({type:"brush",mode:"resize"})}}).each("end.brush",function(){g=b.i,h=b.j,a({type:"brush",mode:"resize"}),a({type:"brushend"})}):(a({type:"brushstart"}),a({type:"brush",mode:"resize"}),a({type:"brushend"}))})},a.x=function(b){return arguments.length?(j=b,p=Xi[!j<<1|!k],a):j},a.y=function(b){return arguments.length?(k=b,p=Xi[!j<<1|!k],a):k},a.clamp=function(b){return arguments.length?(j&&k?(n=!!b[0],o=!!b[1]):j?n=!!b:k&&(o=!!b),a):j&&k?[n,o]:j?n:k?o:null},a.extent=function(b){var c,d,e,f,i;return arguments.length?(j&&(c=b[0],d=b[1],k&&(c=c[0],d=d[0]),g=[c,d],j.invert&&(c=j(c),d=j(d)),c>d&&(i=c,c=d,d=i),(c!=l[0]||d!=l[1])&&(l=[c,d])),k&&(e=b[0],f=b[1],j&&(e=e[1],f=f[1]),h=[e,f],k.invert&&(e=k(e),f=k(f)),e>f&&(i=e,e=f,f=i),(e!=m[0]||f!=m[1])&&(m=[e,f])),a):(j&&(g?(c=g[0],d=g[1]):(c=l[0],d=l[1],j.invert&&(c=j.invert(c),d=j.invert(d)),c>d&&(i=c,c=d,d=i))),k&&(h?(e=h[0],f=h[1]):(e=m[0],f=m[1],k.invert&&(e=k.invert(e),f=k.invert(f)),e>f&&(i=e,e=f,f=i))),j&&k?[[c,e],[d,f]]:j?[c,d]:k&&[e,f])},a.clear=function(){return a.empty()||(l=[0,0],m=[0,0],g=h=null),a},a.empty=function(){return!!j&&l[0]==l[1]||!!k&&m[0]==m[1]},jg.rebind(a,i,"on")};var Wi={n:"ns-resize",e:"ew-resize",s:"ns-resize",w:"ew-resize",nw:"nwse-resize",ne:"nesw-resize",se:"nwse-resize",sw:"nesw-resize"},Xi=[["n","e","s","w","nw","ne","se","sw"],["e","w"],["n","s"],[]],Yi=ph.format=vh.timeFormat,Zi=Yi.utc,$i=Zi("%Y-%m-%dT%H:%M:%S.%LZ");Yi.iso=Date.prototype.toISOString&&+new Date("2000-01-01T00:00:00.000Z")?eg:$i,eg.parse=function(a){var b=new Date(a);return isNaN(b)?null:b},eg.toString=$i.toString,ph.second=Na(function(a){return new qh(1e3*Math.floor(a/1e3))},function(a,b){a.setTime(a.getTime()+1e3*Math.floor(b))},function(a){return a.getSeconds()}),ph.seconds=ph.second.range,ph.seconds.utc=ph.second.utc.range,ph.minute=Na(function(a){return new qh(6e4*Math.floor(a/6e4))},function(a,b){a.setTime(a.getTime()+6e4*Math.floor(b))},function(a){return a.getMinutes()}),ph.minutes=ph.minute.range,ph.minutes.utc=ph.minute.utc.range,ph.hour=Na(function(a){var b=a.getTimezoneOffset()/60;return new qh(36e5*(Math.floor(a/36e5-b)+b))},function(a,b){a.setTime(a.getTime()+36e5*Math.floor(b))},function(a){return a.getHours()}),ph.hours=ph.hour.range,ph.hours.utc=ph.hour.utc.range,ph.month=Na(function(a){return a=ph.day(a),a.setDate(1),a},function(a,b){a.setMonth(a.getMonth()+b)},function(a){return a.getMonth()}),ph.months=ph.month.range,ph.months.utc=ph.month.utc.range;var _i=[1e3,5e3,15e3,3e4,6e4,3e5,9e5,18e5,36e5,108e5,216e5,432e5,864e5,1728e5,6048e5,2592e6,7776e6,31536e6],aj=[[ph.second,1],[ph.second,5],[ph.second,15],[ph.second,30],[ph.minute,1],[ph.minute,5],[ph.minute,15],[ph.minute,30],[ph.hour,1],[ph.hour,3],[ph.hour,6],[ph.hour,12],[ph.day,1],[ph.day,2],[ph.week,1],[ph.month,1],[ph.month,3],[ph.year,1]],bj=Yi.multi([[".%L",function(a){return a.getMilliseconds()}],[":%S",function(a){return a.getSeconds()}],["%I:%M",function(a){return a.getMinutes()}],["%I %p",function(a){return a.getHours()}],["%a %d",function(a){return a.getDay()&&1!=a.getDate()}],["%b %d",function(a){return 1!=a.getDate()}],["%B",function(a){return a.getMonth()}],["%Y",Cb]]),cj={range:function(a,b,c){return jg.range(Math.ceil(a/c)*c,+b,c).map(gg)},floor:s,ceil:s};aj.year=ph.year,ph.scale=function(){return fg(jg.scale.linear(),aj,bj)};var dj=aj.map(function(a){return[a[0].utc,a[1]]}),ej=Zi.multi([[".%L",function(a){return a.getUTCMilliseconds()}],[":%S",function(a){return a.getUTCSeconds()}],["%I:%M",function(a){return a.getUTCMinutes()}],["%I %p",function(a){return a.getUTCHours()}],["%a %d",function(a){return a.getUTCDay()&&1!=a.getUTCDate()}],["%b %d",function(a){return 1!=a.getUTCDate()}],["%B",function(a){return a.getUTCMonth()}],["%Y",Cb]]);dj.year=ph.year.utc,ph.scale.utc=function(){return fg(jg.scale.linear(),dj,ej)},jg.text=Ba(function(a){return a.responseText}),jg.json=function(a,b){return Ca(a,"application/json",hg,b)},jg.html=function(a,b){return Ca(a,"text/html",ig,b)},jg.xml=Ba(function(a){return a.responseXML}),"function"==typeof define&&define.amd?define(jg):"object"==typeof module&&module.exports&&(module.exports=jg),this.d3=jg}();var THREE={REVISION:"71"};"object"==typeof module&&(module.exports=THREE),void 0===Math.sign&&(Math.sign=function(a){return 0>a?-1:a>0?1:+a}),THREE.log=function(){console.log.apply(console,arguments)},THREE.warn=function(){},THREE.error=function(){console.error.apply(console,arguments)},THREE.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.MinEquation=103,THREE.MaxEquation=104,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=300,THREE.CubeReflectionMapping=301,THREE.CubeRefractionMapping=302,THREE.EquirectangularReflectionMapping=303,THREE.EquirectangularRefractionMapping=304,THREE.SphericalReflectionMapping=305,THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.HalfFloatType=1025,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGBEFormat=THREE.RGBAFormat,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,
THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.RGB_PVRTC_4BPPV1_Format=2100,THREE.RGB_PVRTC_2BPPV1_Format=2101,THREE.RGBA_PVRTC_4BPPV1_Format=2102,THREE.RGBA_PVRTC_2BPPV1_Format=2103,THREE.Projector=function(){THREE.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(a,b){THREE.warn("THREE.Projector: .projectVector() is now vector.project()."),a.project(b)},this.unprojectVector=function(a,b){THREE.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),a.unproject(b)},this.pickingRay=function(a,b){THREE.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}},THREE.CanvasRenderer=function(){THREE.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElement("canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}},THREE.Color=function(a){return 3===arguments.length?this.setRGB(arguments[0],arguments[1],arguments[2]):this.set(a)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){return a instanceof THREE.Color?this.copy(a):"number"==typeof a?this.setHex(a):"string"==typeof a&&this.setStyle(a),this},setHex:function(a){return a=Math.floor(a),this.r=(a>>16&255)/255,this.g=(a>>8&255)/255,this.b=(255&a)/255,this},setRGB:function(a,b,c){return this.r=a,this.g=b,this.b=c,this},setHSL:function(a,b,c){if(0===b)this.r=this.g=this.b=c;else{var d=function(a,b,c){return 0>c&&(c+=1),c>1&&(c-=1),1/6>c?a+6*(b-a)*c:.5>c?b:2/3>c?a+6*(b-a)*(2/3-c):a},e=.5>=c?c*(1+b):c+b-c*b,f=2*c-e;this.r=d(f,e,a+1/3),this.g=d(f,e,a),this.b=d(f,e,a-1/3)}return this},setStyle:function(a){if(/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.test(a)){var b=/^rgb\((\d+), ?(\d+), ?(\d+)\)$/i.exec(a);return this.r=Math.min(255,parseInt(b[1],10))/255,this.g=Math.min(255,parseInt(b[2],10))/255,this.b=Math.min(255,parseInt(b[3],10))/255,this}if(/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.test(a)){var b=/^rgb\((\d+)\%, ?(\d+)\%, ?(\d+)\%\)$/i.exec(a);return this.r=Math.min(100,parseInt(b[1],10))/100,this.g=Math.min(100,parseInt(b[2],10))/100,this.b=Math.min(100,parseInt(b[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(a)){var b=/^\#([0-9a-f]{6})$/i.exec(a);return this.setHex(parseInt(b[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a)){var b=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a);return this.setHex(parseInt(b[1]+b[1]+b[2]+b[2]+b[3]+b[3],16)),this}return/^(\w+)$/i.test(a)?(this.setHex(THREE.ColorKeywords[a]),this):void 0},copy:function(a){return this.r=a.r,this.g=a.g,this.b=a.b,this},copyGammaToLinear:function(a,b){return void 0===b&&(b=2),this.r=Math.pow(a.r,b),this.g=Math.pow(a.g,b),this.b=Math.pow(a.b,b),this},copyLinearToGamma:function(a,b){void 0===b&&(b=2);var c=b>0?1/b:1;return this.r=Math.pow(a.r,c),this.g=Math.pow(a.g,c),this.b=Math.pow(a.b,c),this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;return this.r=a*a,this.g=b*b,this.b=c*c,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(a){var b,c,d=a||{h:0,s:0,l:0},e=this.r,f=this.g,g=this.b,h=Math.max(e,f,g),i=Math.min(e,f,g),j=(i+h)/2;if(i===h)b=0,c=0;else{var k=h-i;switch(c=.5>=j?k/(h+i):k/(2-h-i),h){case e:b=(f-g)/k+(g>f?6:0);break;case f:b=(g-e)/k+2;break;case g:b=(e-f)/k+4}b/=6}return d.h=b,d.s=c,d.l=j,d},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(a,b,c){var d=this.getHSL();return d.h+=a,d.s+=b,d.l+=c,this.setHSL(d.h,d.s,d.l),this},add:function(a){return this.r+=a.r,this.g+=a.g,this.b+=a.b,this},addColors:function(a,b){return this.r=a.r+b.r,this.g=a.g+b.g,this.b=a.b+b.b,this},addScalar:function(a){return this.r+=a,this.g+=a,this.b+=a,this},multiply:function(a){return this.r*=a.r,this.g*=a.g,this.b*=a.b,this},multiplyScalar:function(a){return this.r*=a,this.g*=a,this.b*=a,this},lerp:function(a,b){return this.r+=(a.r-this.r)*b,this.g+=(a.g-this.g)*b,this.b+=(a.b-this.b)*b,this},equals:function(a){return a.r===this.r&&a.g===this.g&&a.b===this.b},fromArray:function(a){return this.r=a[0],this.g=a[1],this.b=a[2],this},toArray:function(a,b){return void 0===a&&(a=[]),void 0===b&&(b=0),a[b]=this.r,a[b+1]=this.g,a[b+2]=this.b,a},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(a,b,c,d){this._x=a||0,this._y=b||0,this._z=c||0,this._w=void 0!==d?d:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,_x:0,_y:0,_z:0,_w:0,get x(){return this._x},set x(a){this._x=a,this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a,this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a,this.onChangeCallback()},get w(){return this._w},set w(a){this._w=a,this.onChangeCallback()},set:function(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._w=d,this.onChangeCallback(),this},copy:function(a){return this._x=a.x,this._y=a.y,this._z=a.z,this._w=a.w,this.onChangeCallback(),this},setFromEuler:function(a,b){if(a instanceof THREE.Euler==!1)throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var c=Math.cos(a._x/2),d=Math.cos(a._y/2),e=Math.cos(a._z/2),f=Math.sin(a._x/2),g=Math.sin(a._y/2),h=Math.sin(a._z/2);return"XYZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"YXZ"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):"ZXY"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e-f*g*h):"ZYX"===a.order?(this._x=f*d*e-c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e+f*g*h):"YZX"===a.order?(this._x=f*d*e+c*g*h,this._y=c*g*e+f*d*h,this._z=c*d*h-f*g*e,this._w=c*d*e-f*g*h):"XZY"===a.order&&(this._x=f*d*e-c*g*h,this._y=c*g*e-f*d*h,this._z=c*d*h+f*g*e,this._w=c*d*e+f*g*h),b!==!1&&this.onChangeCallback(),this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);return this._x=a.x*d,this._y=a.y*d,this._z=a.z*d,this._w=Math.cos(c),this.onChangeCallback(),this},setFromRotationMatrix:function(a){var b,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[1],h=c[5],i=c[9],j=c[2],k=c[6],l=c[10],m=d+h+l;return m>0?(b=.5/Math.sqrt(m+1),this._w=.25/b,this._x=(k-i)*b,this._y=(f-j)*b,this._z=(g-e)*b):d>h&&d>l?(b=2*Math.sqrt(1+d-h-l),this._w=(k-i)/b,this._x=.25*b,this._y=(e+g)/b,this._z=(f+j)/b):h>l?(b=2*Math.sqrt(1+h-d-l),this._w=(f-j)/b,this._x=(e+g)/b,this._y=.25*b,this._z=(i+k)/b):(b=2*Math.sqrt(1+l-d-h),this._w=(g-e)/b,this._x=(f+j)/b,this._y=(i+k)/b,this._z=.25*b),this.onChangeCallback(),this},setFromUnitVectors:function(){var a,b,c=1e-6;return function(d,e){return void 0===a&&(a=new THREE.Vector3),b=d.dot(e)+1,c>b?(b=0,Math.abs(d.x)>Math.abs(d.z)?a.set(-d.y,d.x,0):a.set(0,-d.z,d.y)):a.crossVectors(d,e),this._x=a.x,this._y=a.y,this._z=a.z,this._w=b,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(a){return this._x*a._x+this._y*a._y+this._z*a._z+this._w*a._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var a=this.length();return 0===a?(this._x=0,this._y=0,this._z=0,this._w=1):(a=1/a,this._x=this._x*a,this._y=this._y*a,this._z=this._z*a,this._w=this._w*a),this.onChangeCallback(),this},multiply:function(a,b){return void 0!==b?(THREE.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a._x,d=a._y,e=a._z,f=a._w,g=b._x,h=b._y,i=b._z,j=b._w;return this._x=c*j+f*g+d*i-e*h,this._y=d*j+f*h+e*g-c*i,this._z=e*j+f*i+c*h-d*g,this._w=f*j-c*g-d*h-e*i,this.onChangeCallback(),this},multiplyVector3:function(a){return THREE.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),a.applyQuaternion(this)},slerp:function(a,b){if(0===b)return this;if(1===b)return this.copy(a);var c=this._x,d=this._y,e=this._z,f=this._w,g=f*a._w+c*a._x+d*a._y+e*a._z;if(0>g?(this._w=-a._w,this._x=-a._x,this._y=-a._y,this._z=-a._z,g=-g):this.copy(a),g>=1)return this._w=f,this._x=c,this._y=d,this._z=e,this;var h=Math.acos(g),i=Math.sqrt(1-g*g);if(Math.abs(i)<.001)return this._w=.5*(f+this._w),this._x=.5*(c+this._x),this._y=.5*(d+this._y),this._z=.5*(e+this._z),this;var j=Math.sin((1-b)*h)/i,k=Math.sin(b*h)/i;return this._w=f*j+this._w*k,this._x=c*j+this._x*k,this._y=d*j+this._y*k,this._z=e*j+this._z*k,this.onChangeCallback(),this},equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._w===this._w},fromArray:function(a,b){return void 0===b&&(b=0),this._x=a[b],this._y=a[b+1],this._z=a[b+2],this._w=a[b+3],this.onChangeCallback(),this},toArray:function(a,b){return void 0===a&&(a=[]),void 0===b&&(b=0),a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._w,a},onChange:function(a){return this.onChangeCallback=a,this},onChangeCallback:function(){},clone:function(){return new THREE.Quaternion(this._x,this._y,this._z,this._w)}},THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)},THREE.Vector2=function(a,b){this.x=a||0,this.y=b||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){return this.x=a,this.y=b,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this},add:function(a,b){return void 0!==b?(THREE.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this)},addScalar:function(a){return this.x+=a,this.y+=a,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this},sub:function(a,b){return void 0!==b?(THREE.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this)},subScalar:function(a){return this.x-=a,this.y-=a,this},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this},multiply:function(a){return this.x*=a.x,this.y*=a.y,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this},divide:function(a){return this.x/=a.x,this.y/=a.y,this},divideScalar:function(a){if(0!==a){var b=1/a;this.x*=b,this.y*=b}else this.x=0,this.y=0;return this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this},clampScalar:function(){var a,b;return function(c,d){return void 0===a&&(a=new THREE.Vector2,b=new THREE.Vector2),a.set(c,c),b.set(d,d),this.clamp(a,b)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;return b*b+c*c},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a),this},equals:function(a){return a.x===this.x&&a.y===this.y},fromArray:function(a,b){return void 0===b&&(b=0),this.x=a[b],this.y=a[b+1],this},toArray:function(a,b){return void 0===a&&(a=[]),void 0===b&&(b=0),a[b]=this.x,a[b+1]=this.y,a},fromAttribute:function(a,b,c){return void 0===c&&(c=0),b=b*a.itemSize+c,this.x=a.array[b],this.y=a.array[b+1],this},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(a,b,c){this.x=a||0,this.y=b||0,this.z=c||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){return this.x=a,this.y=b,this.z=c,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this},add:function(a,b){return void 0!==b?(THREE.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this)},addScalar:function(a){return this.x+=a,this.y+=a,this.z+=a,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this},sub:function(a,b){return void 0!==b?(THREE.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this)},subScalar:function(a){return this.x-=a,this.y-=a,this.z-=a,this},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this},multiply:function(a,b){return void 0!==b?(THREE.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b)):(this.x*=a.x,this.y*=a.y,this.z*=a.z,this)},multiplyScalar:function(a){return this.x*=a,this.y*=a,this.z*=a,this},multiplyVectors:function(a,b){return this.x=a.x*b.x,this.y=a.y*b.y,this.z=a.z*b.z,this},applyEuler:function(){var a;return function(b){return b instanceof THREE.Euler==!1&&THREE.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."),void 0===a&&(a=new THREE.Quaternion),this.applyQuaternion(a.setFromEuler(b)),this}}(),applyAxisAngle:function(){var a;return function(b,c){return void 0===a&&(a=new THREE.Quaternion),this.applyQuaternion(a.setFromAxisAngle(b,c)),this}}(),applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[3]*c+e[6]*d,this.y=e[1]*b+e[4]*c+e[7]*d,this.z=e[2]*b+e[5]*c+e[8]*d,this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d+e[12],this.y=e[1]*b+e[5]*c+e[9]*d+e[13],this.z=e[2]*b+e[6]*c+e[10]*d+e[14],this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements,f=1/(e[3]*b+e[7]*c+e[11]*d+e[15]);return this.x=(e[0]*b+e[4]*c+e[8]*d+e[12])*f,this.y=(e[1]*b+e[5]*c+e[9]*d+e[13])*f,this.z=(e[2]*b+e[6]*c+e[10]*d+e[14])*f,this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,f=a.y,g=a.z,h=a.w,i=h*b+f*d-g*c,j=h*c+g*b-e*d,k=h*d+e*c-f*b,l=-e*b-f*c-g*d;return this.x=i*h+l*-e+j*-g-k*-f,this.y=j*h+l*-f+k*-e-i*-g,this.z=k*h+l*-g+i*-f-j*-e,this},project:function(){var a;return function(b){return void 0===a&&(a=new THREE.Matrix4),a.multiplyMatrices(b.projectionMatrix,a.getInverse(b.matrixWorld)),this.applyProjection(a)}}(),unproject:function(){var a;return function(b){return void 0===a&&(a=new THREE.Matrix4),a.multiplyMatrices(b.matrixWorld,a.getInverse(b.projectionMatrix)),this.applyProjection(a)}}(),transformDirection:function(a){var b=this.x,c=this.y,d=this.z,e=a.elements;return this.x=e[0]*b+e[4]*c+e[8]*d,this.y=e[1]*b+e[5]*c+e[9]*d,this.z=e[2]*b+e[6]*c+e[10]*d,this.normalize(),this},divide:function(a){return this.x/=a.x,this.y/=a.y,this.z/=a.z,this},divideScalar:function(a){if(0!==a){var b=1/a;this.x*=b,this.y*=b,this.z*=b}else this.x=0,this.y=0,this.z=0;return this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this.z>a.z&&(this.z=a.z),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this.z<a.z&&(this.z=a.z),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z),this},clampScalar:function(){var a,b;return function(c,d){return void 0===a&&(a=new THREE.Vector3,b=new THREE.Vector3),a.set(c,c,c),b.set(d,d,d),this.clamp(a,b)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a),this},cross:function(a,b){if(void 0!==b)return THREE.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;return this.x=d*a.z-e*a.y,this.y=e*a.x-c*a.z,this.z=c*a.y-d*a.x,this},crossVectors:function(a,b){var c=a.x,d=a.y,e=a.z,f=b.x,g=b.y,h=b.z;return this.x=d*h-e*g,this.y=e*f-c*h,this.z=c*g-d*f,this},projectOnVector:function(){var a,b;return function(c){return void 0===a&&(a=new THREE.Vector3),a.copy(c).normalize(),b=this.dot(a),this.copy(a).multiplyScalar(b)}}(),projectOnPlane:function(){var a;return function(b){return void 0===a&&(a=new THREE.Vector3),a.copy(this).projectOnVector(b),this.sub(a)}}(),reflect:function(){var a;return function(b){return void 0===a&&(a=new THREE.Vector3),this.sub(a.copy(b).multiplyScalar(2*this.dot(b)))}}(),angleTo:function(a){var b=this.dot(a)/(this.length()*a.length());return Math.acos(THREE.Math.clamp(b,-1,1))},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y,d=this.z-a.z;return b*b+c*c+d*d},setEulerFromRotationMatrix:function(a,b){THREE.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(a,b){THREE.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(a){return THREE.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(a)},getScaleFromMatrix:function(a){return THREE.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(a)},getColumnFromMatrix:function(a,b){return THREE.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(a,b)},setFromMatrixPosition:function(a){return this.x=a.elements[12],this.y=a.elements[13],this.z=a.elements[14],this},setFromMatrixScale:function(a){var b=this.set(a.elements[0],a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),d=this.set(a.elements[8],a.elements[9],a.elements[10]).length();return this.x=b,this.y=c,this.z=d,this},setFromMatrixColumn:function(a,b){var c=4*a,d=b.elements;return this.x=d[c],this.y=d[c+1],this.z=d[c+2],this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},fromArray:function(a,b){return void 0===b&&(b=0),this.x=a[b],this.y=a[b+1],this.z=a[b+2],this},toArray:function(a,b){return void 0===a&&(a=[]),void 0===b&&(b=0),a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a},fromAttribute:function(a,b,c){return void 0===c&&(c=0),b=b*a.itemSize+c,this.x=a.array[b],this.y=a.array[b+1],this.z=a.array[b+2],this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(a,b,c,d){this.x=a||0,this.y=b||0,this.z=c||0,this.w=void 0!==d?d:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){return this.x=a,this.y=b,this.z=c,this.w=d,this},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},setW:function(a){return this.w=a,this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw new Error("index is out of range: "+a)}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+a)}},copy:function(a){return this.x=a.x,this.y=a.y,this.z=a.z,this.w=void 0!==a.w?a.w:1,this},add:function(a,b){return void 0!==b?(THREE.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b)):(this.x+=a.x,this.y+=a.y,this.z+=a.z,this.w+=a.w,this)},addScalar:function(a){return this.x+=a,this.y+=a,this.z+=a,this.w+=a,this},addVectors:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this.z=a.z+b.z,this.w=a.w+b.w,this},sub:function(a,b){return void 0!==b?(THREE.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b)):(this.x-=a.x,this.y-=a.y,this.z-=a.z,this.w-=a.w,this)},subScalar:function(a){return this.x-=a,this.y-=a,this.z-=a,this.w-=a,this},subVectors:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this.z=a.z-b.z,this.w=a.w-b.w,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this.z*=a,this.w*=a,this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,f=a.elements;return this.x=f[0]*b+f[4]*c+f[8]*d+f[12]*e,this.y=f[1]*b+f[5]*c+f[9]*d+f[13]*e,this.z=f[2]*b+f[6]*c+f[10]*d+f[14]*e,this.w=f[3]*b+f[7]*c+f[11]*d+f[15]*e,this},divideScalar:function(a){if(0!==a){var b=1/a;this.x*=b,this.y*=b,this.z*=b,this.w*=b}else this.x=0,this.y=0,this.z=0,this.w=1;return this},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);return 1e-4>b?(this.x=1,this.y=0,this.z=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b),this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,e,f=.01,g=.1,h=a.elements,i=h[0],j=h[4],k=h[8],l=h[1],m=h[5],n=h[9],o=h[2],p=h[6],q=h[10];if(Math.abs(j-l)<f&&Math.abs(k-o)<f&&Math.abs(n-p)<f){if(Math.abs(j+l)<g&&Math.abs(k+o)<g&&Math.abs(n+p)<g&&Math.abs(i+m+q-3)<g)return this.set(1,0,0,0),this;b=Math.PI;var r=(i+1)/2,s=(m+1)/2,t=(q+1)/2,u=(j+l)/4,v=(k+o)/4,w=(n+p)/4;return r>s&&r>t?f>r?(c=0,d=.707106781,e=.707106781):(c=Math.sqrt(r),d=u/c,e=v/c):s>t?f>s?(c=.707106781,d=0,e=.707106781):(d=Math.sqrt(s),c=u/d,e=w/d):f>t?(c=.707106781,d=.707106781,e=0):(e=Math.sqrt(t),c=v/e,d=w/e),this.set(c,d,e,b),this}var x=Math.sqrt((p-n)*(p-n)+(k-o)*(k-o)+(l-j)*(l-j));return Math.abs(x)<.001&&(x=1),this.x=(p-n)/x,this.y=(k-o)/x,this.z=(l-j)/x,this.w=Math.acos((i+m+q-1)/2),this},min:function(a){return this.x>a.x&&(this.x=a.x),this.y>a.y&&(this.y=a.y),this.z>a.z&&(this.z=a.z),this.w>a.w&&(this.w=a.w),this},max:function(a){return this.x<a.x&&(this.x=a.x),this.y<a.y&&(this.y=a.y),this.z<a.z&&(this.z=a.z),this.w<a.w&&(this.w=a.w),this},clamp:function(a,b){return this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x),this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y),this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z),this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w),this},clampScalar:function(){var a,b;return function(c,d){return void 0===a&&(a=new THREE.Vector4,b=new THREE.Vector4),a.set(c,c,c,c),b.set(d,d,d,d),this.clamp(a,b)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();return 0!==b&&a!==b&&this.multiplyScalar(a/b),this},lerp:function(a,b){return this.x+=(a.x-this.x)*b,this.y+=(a.y-this.y)*b,this.z+=(a.z-this.z)*b,this.w+=(a.w-this.w)*b,this},lerpVectors:function(a,b,c){return this.subVectors(b,a).multiplyScalar(c).add(a),this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},fromArray:function(a,b){return void 0===b&&(b=0),this.x=a[b],this.y=a[b+1],this.z=a[b+2],this.w=a[b+3],this},toArray:function(a,b){return void 0===a&&(a=[]),void 0===b&&(b=0),a[b]=this.x,a[b+1]=this.y,a[b+2]=this.z,a[b+3]=this.w,a},fromAttribute:function(a,b,c){return void 0===c&&(c=0),b=b*a.itemSize+c,this.x=a.array[b],this.y=a.array[b+1],this.z=a.array[b+2],this.w=a.array[b+3],this},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)}},THREE.Euler=function(a,b,c,d){this._x=a||0,this._y=b||0,this._z=c||0,this._order=d||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,_x:0,_y:0,_z:0,_order:THREE.Euler.DefaultOrder,get x(){return this._x},set x(a){this._x=a,this.onChangeCallback()},get y(){return this._y},set y(a){this._y=a,this.onChangeCallback()},get z(){return this._z},set z(a){this._z=a,this.onChangeCallback()},get order(){return this._order},set order(a){this._order=a,this.onChangeCallback()},set:function(a,b,c,d){return this._x=a,this._y=b,this._z=c,this._order=d||this._order,this.onChangeCallback(),this},copy:function(a){return this._x=a._x,this._y=a._y,this._z=a._z,this._order=a._order,this.onChangeCallback(),this},setFromRotationMatrix:function(a,b,c){var d=THREE.Math.clamp,e=a.elements,f=e[0],g=e[4],h=e[8],i=e[1],j=e[5],k=e[9],l=e[2],m=e[6],n=e[10];return b=b||this._order,"XYZ"===b?(this._y=Math.asin(d(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(-k,n),this._z=Math.atan2(-g,f)):(this._x=Math.atan2(m,j),this._z=0)):"YXZ"===b?(this._x=Math.asin(-d(k,-1,1)),Math.abs(k)<.99999?(this._y=Math.atan2(h,n),this._z=Math.atan2(i,j)):(this._y=Math.atan2(-l,f),this._z=0)):"ZXY"===b?(this._x=Math.asin(d(m,-1,1)),Math.abs(m)<.99999?(this._y=Math.atan2(-l,n),this._z=Math.atan2(-g,j)):(this._y=0,this._z=Math.atan2(i,f))):"ZYX"===b?(this._y=Math.asin(-d(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(m,n),this._z=Math.atan2(i,f)):(this._x=0,this._z=Math.atan2(-g,j))):"YZX"===b?(this._z=Math.asin(d(i,-1,1)),Math.abs(i)<.99999?(this._x=Math.atan2(-k,j),this._y=Math.atan2(-l,f)):(this._x=0,this._y=Math.atan2(h,n))):"XZY"===b?(this._z=Math.asin(-d(g,-1,1)),Math.abs(g)<.99999?(this._x=Math.atan2(m,j),this._y=Math.atan2(h,f)):(this._x=Math.atan2(-k,n),this._y=0)):THREE.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+b),this._order=b,c!==!1&&this.onChangeCallback(),this},setFromQuaternion:function(){var a;return function(b,c,d){return void 0===a&&(a=new THREE.Matrix4),a.makeRotationFromQuaternion(b),this.setFromRotationMatrix(a,c,d),this}}(),setFromVector3:function(a,b){return this.set(a.x,a.y,a.z,b||this._order)},reorder:function(){var a=new THREE.Quaternion;return function(b){a.setFromEuler(this),
this.setFromQuaternion(a,b)}}(),equals:function(a){return a._x===this._x&&a._y===this._y&&a._z===this._z&&a._order===this._order},fromArray:function(a){return this._x=a[0],this._y=a[1],this._z=a[2],void 0!==a[3]&&(this._order=a[3]),this.onChangeCallback(),this},toArray:function(a,b){return void 0===a&&(a=[]),void 0===b&&(b=0),a[b]=this._x,a[b+1]=this._y,a[b+2]=this._z,a[b+3]=this._order,a},toVector3:function(a){return a?a.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(a){return this.onChangeCallback=a,this},onChangeCallback:function(){},clone:function(){return new THREE.Euler(this._x,this._y,this._z,this._order)}},THREE.Line3=function(a,b){this.start=void 0!==a?a:new THREE.Vector3,this.end=void 0!==b?b:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(a,b){return this.start.copy(a),this.end.copy(b),this},copy:function(a){return this.start.copy(a.start),this.end.copy(a.end),this},center:function(a){var b=a||new THREE.Vector3;return b.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(a){var b=a||new THREE.Vector3;return b.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(a,b){var c=b||new THREE.Vector3;return this.delta(c).multiplyScalar(a).add(this.start)},closestPointToPointParameter:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d){a.subVectors(c,this.start),b.subVectors(this.end,this.start);var e=b.dot(b),f=b.dot(a),g=f/e;return d&&(g=THREE.Math.clamp(g,0,1)),g}}(),closestPointToPoint:function(a,b,c){var d=this.closestPointToPointParameter(a,b),e=c||new THREE.Vector3;return this.delta(e).multiplyScalar(d).add(this.start)},applyMatrix4:function(a){return this.start.applyMatrix4(a),this.end.applyMatrix4(a),this},equals:function(a){return a.start.equals(this.start)&&a.end.equals(this.end)},clone:function(){return(new THREE.Line3).copy(this)}},THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(1/0,1/0),this.max=void 0!==b?b:new THREE.Vector2(-(1/0),-(1/0))},THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){return this.min.copy(a),this.max.copy(b),this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;c>b;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector2;return function(b,c){var d=a.copy(c).multiplyScalar(.5);return this.min.copy(b).sub(d),this.max.copy(b).add(d),this}}(),copy:function(a){return this.min.copy(a.min),this.max.copy(a.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){var b=a||new THREE.Vector2;return b.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){var b=a||new THREE.Vector2;return b.subVectors(this.max,this.min)},expandByPoint:function(a){return this.min.min(a),this.max.max(a),this},expandByVector:function(a){return this.min.sub(a),this.max.add(a),this},expandByScalar:function(a){return this.min.addScalar(-a),this.max.addScalar(a),this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a,b){var c=b||new THREE.Vector2;return c.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y?!1:!0},clampPoint:function(a,b){var c=b||new THREE.Vector2;return c.copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector2;return function(b){var c=a.copy(b).clamp(this.min,this.max);return c.sub(b).length()}}(),intersect:function(a){return this.min.max(a.min),this.max.min(a.max),this},union:function(a){return this.min.min(a.min),this.max.max(a.max),this},translate:function(a){return this.min.add(a),this.max.add(a),this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==b?b:new THREE.Vector3(-(1/0),-(1/0),-(1/0))},THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){return this.min.copy(a),this.max.copy(b),this},setFromPoints:function(a){this.makeEmpty();for(var b=0,c=a.length;c>b;b++)this.expandByPoint(a[b]);return this},setFromCenterAndSize:function(){var a=new THREE.Vector3;return function(b,c){var d=a.copy(c).multiplyScalar(.5);return this.min.copy(b).sub(d),this.max.copy(b).add(d),this}}(),setFromObject:function(){var a=new THREE.Vector3;return function(b){var c=this;return b.updateMatrixWorld(!0),this.makeEmpty(),b.traverse(function(b){var d=b.geometry;if(void 0!==d)if(d instanceof THREE.Geometry)for(var e=d.vertices,f=0,g=e.length;g>f;f++)a.copy(e[f]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a);else if(d instanceof THREE.BufferGeometry&&void 0!==d.attributes.position)for(var h=d.attributes.position.array,f=0,g=h.length;g>f;f+=3)a.set(h[f],h[f+1],h[f+2]),a.applyMatrix4(b.matrixWorld),c.expandByPoint(a)}),this}}(),copy:function(a){return this.min.copy(a.min),this.max.copy(a.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){var b=a||new THREE.Vector3;return b.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(a){var b=a||new THREE.Vector3;return b.subVectors(this.max,this.min)},expandByPoint:function(a){return this.min.min(a),this.max.max(a),this},expandByVector:function(a){return this.min.sub(a),this.max.add(a),this},expandByScalar:function(a){return this.min.addScalar(-a),this.max.addScalar(a),this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a,b){var c=b||new THREE.Vector3;return c.set((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){var c=b||new THREE.Vector3;return c.copy(a).clamp(this.min,this.max)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.copy(b).clamp(this.min,this.max);return c.sub(b).length()}}(),getBoundingSphere:function(){var a=new THREE.Vector3;return function(b){var c=b||new THREE.Sphere;return c.center=this.center(),c.radius=.5*this.size(a).length(),c}}(),intersect:function(a){return this.min.max(a.min),this.max.min(a.max),this},union:function(a){return this.min.min(a.min),this.max.max(a.max),this},applyMatrix4:function(){var a=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(b){return a[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(b),a[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(b),a[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(b),a[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(b),a[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(b),a[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(b),a[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(b),a[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(b),this.makeEmpty(),this.setFromPoints(a),this}}(),translate:function(a){return this.min.add(a),this.max.add(a),this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),arguments.length>0&&THREE.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,f,g,h,i){var j=this.elements;return j[0]=a,j[3]=b,j[6]=c,j[1]=d,j[4]=e,j[7]=f,j[2]=g,j[5]=h,j[8]=i,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(a){var b=a.elements;return this.set(b[0],b[3],b[6],b[1],b[4],b[7],b[2],b[5],b[8]),this},multiplyVector3:function(a){return THREE.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),a.applyMatrix3(this)},multiplyVector3Array:function(a){return THREE.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,c,d){void 0===c&&(c=0),void 0===d&&(d=b.length);for(var e=0,f=c;d>e;e+=3,f+=3)a.x=b[f],a.y=b[f+1],a.z=b[f+2],a.applyMatrix3(this),b[f]=a.x,b[f+1]=a.y,b[f+2]=a.z;return b}}(),multiplyScalar:function(a){var b=this.elements;return b[0]*=a,b[3]*=a,b[6]*=a,b[1]*=a,b[4]*=a,b[7]*=a,b[2]*=a,b[5]*=a,b[8]*=a,this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],f=a[4],g=a[5],h=a[6],i=a[7],j=a[8];return b*f*j-b*g*i-c*e*j+c*g*h+d*e*i-d*f*h},getInverse:function(a,b){var c=a.elements,d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9],d[1]=-c[10]*c[1]+c[2]*c[9],d[2]=c[6]*c[1]-c[2]*c[5],d[3]=-c[10]*c[4]+c[6]*c[8],d[4]=c[10]*c[0]-c[2]*c[8],d[5]=-c[6]*c[0]+c[2]*c[4],d[6]=c[9]*c[4]-c[5]*c[8],d[7]=-c[9]*c[0]+c[1]*c[8],d[8]=c[5]*c[0]-c[1]*c[4];var e=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===e){var f="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(b)throw new Error(f);return THREE.warn(f),this.identity(),this}return this.multiplyScalar(1/e),this},transpose:function(){var a,b=this.elements;return a=b[1],b[1]=b[3],b[3]=a,a=b[2],b[2]=b[6],b[6]=a,a=b[5],b[5]=b[7],b[7]=a,this},flattenToArrayOffset:function(a,b){var c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a},getNormalMatrix:function(a){return this.getInverse(a).transpose(),this},transposeIntoArray:function(a){var b=this.elements;return a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8],this},fromArray:function(a){return this.elements.set(a),this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8]]},clone:function(){return(new THREE.Matrix3).fromArray(this.elements)}},THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),arguments.length>0&&THREE.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var q=this.elements;return q[0]=a,q[4]=b,q[8]=c,q[12]=d,q[1]=e,q[5]=f,q[9]=g,q[13]=h,q[2]=i,q[6]=j,q[10]=k,q[14]=l,q[3]=m,q[7]=n,q[11]=o,q[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(a){return this.elements.set(a.elements),this},extractPosition:function(a){return THREE.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(a)},copyPosition:function(a){var b=this.elements,c=a.elements;return b[12]=c[12],b[13]=c[13],b[14]=c[14],this},extractBasis:function(a,b,c){var d=this.elements;return a.set(d[0],d[1],d[2]),b.set(d[4],d[5],d[6]),c.set(d[8],d[9],d[10]),this},makeBasis:function(a,b,c){return this.set(a.x,b.x,c.x,0,a.y,b.y,c.y,0,a.z,b.z,c.z,0,0,0,0,1),this},extractRotation:function(){var a=new THREE.Vector3;return function(b){var c=this.elements,d=b.elements,e=1/a.set(d[0],d[1],d[2]).length(),f=1/a.set(d[4],d[5],d[6]).length(),g=1/a.set(d[8],d[9],d[10]).length();return c[0]=d[0]*e,c[1]=d[1]*e,c[2]=d[2]*e,c[4]=d[4]*f,c[5]=d[5]*f,c[6]=d[6]*f,c[8]=d[8]*g,c[9]=d[9]*g,c[10]=d[10]*g,this}}(),makeRotationFromEuler:function(a){a instanceof THREE.Euler==!1&&THREE.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var b=this.elements,c=a.x,d=a.y,e=a.z,f=Math.cos(c),g=Math.sin(c),h=Math.cos(d),i=Math.sin(d),j=Math.cos(e),k=Math.sin(e);if("XYZ"===a.order){var l=f*j,m=f*k,n=g*j,o=g*k;b[0]=h*j,b[4]=-h*k,b[8]=i,b[1]=m+n*i,b[5]=l-o*i,b[9]=-g*h,b[2]=o-l*i,b[6]=n+m*i,b[10]=f*h}else if("YXZ"===a.order){var p=h*j,q=h*k,r=i*j,s=i*k;b[0]=p+s*g,b[4]=r*g-q,b[8]=f*i,b[1]=f*k,b[5]=f*j,b[9]=-g,b[2]=q*g-r,b[6]=s+p*g,b[10]=f*h}else if("ZXY"===a.order){var p=h*j,q=h*k,r=i*j,s=i*k;b[0]=p-s*g,b[4]=-f*k,b[8]=r+q*g,b[1]=q+r*g,b[5]=f*j,b[9]=s-p*g,b[2]=-f*i,b[6]=g,b[10]=f*h}else if("ZYX"===a.order){var l=f*j,m=f*k,n=g*j,o=g*k;b[0]=h*j,b[4]=n*i-m,b[8]=l*i+o,b[1]=h*k,b[5]=o*i+l,b[9]=m*i-n,b[2]=-i,b[6]=g*h,b[10]=f*h}else if("YZX"===a.order){var t=f*h,u=f*i,v=g*h,w=g*i;b[0]=h*j,b[4]=w-t*k,b[8]=v*k+u,b[1]=k,b[5]=f*j,b[9]=-g*j,b[2]=-i*j,b[6]=u*k+v,b[10]=t-w*k}else if("XZY"===a.order){var t=f*h,u=f*i,v=g*h,w=g*i;b[0]=h*j,b[4]=-k,b[8]=i*j,b[1]=t*k+w,b[5]=f*j,b[9]=u*k-v,b[2]=v*k-u,b[6]=g*j,b[10]=w*k+t}return b[3]=0,b[7]=0,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this},setRotationFromQuaternion:function(a){return THREE.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(a)},makeRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,i=e+e,j=c*g,k=c*h,l=c*i,m=d*h,n=d*i,o=e*i,p=f*g,q=f*h,r=f*i;return b[0]=1-(m+o),b[4]=k-r,b[8]=l+q,b[1]=k+r,b[5]=1-(j+o),b[9]=n-p,b[2]=l-q,b[6]=n+p,b[10]=1-(j+m),b[3]=0,b[7]=0,b[11]=0,b[12]=0,b[13]=0,b[14]=0,b[15]=1,this},lookAt:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f){var g=this.elements;return c.subVectors(d,e).normalize(),0===c.length()&&(c.z=1),a.crossVectors(f,c).normalize(),0===a.length()&&(c.x+=1e-4,a.crossVectors(f,c).normalize()),b.crossVectors(c,a),g[0]=a.x,g[4]=b.x,g[8]=c.x,g[1]=a.y,g[5]=b.y,g[9]=c.y,g[2]=a.z,g[6]=b.z,g[10]=c.z,this}}(),multiply:function(a,b){return void 0!==b?(THREE.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],k=c[5],l=c[9],m=c[13],n=c[2],o=c[6],p=c[10],q=c[14],r=c[3],s=c[7],t=c[11],u=c[15],v=d[0],w=d[4],x=d[8],y=d[12],z=d[1],A=d[5],B=d[9],C=d[13],D=d[2],E=d[6],F=d[10],G=d[14],H=d[3],I=d[7],J=d[11],K=d[15];return e[0]=f*v+g*z+h*D+i*H,e[4]=f*w+g*A+h*E+i*I,e[8]=f*x+g*B+h*F+i*J,e[12]=f*y+g*C+h*G+i*K,e[1]=j*v+k*z+l*D+m*H,e[5]=j*w+k*A+l*E+m*I,e[9]=j*x+k*B+l*F+m*J,e[13]=j*y+k*C+l*G+m*K,e[2]=n*v+o*z+p*D+q*H,e[6]=n*w+o*A+p*E+q*I,e[10]=n*x+o*B+p*F+q*J,e[14]=n*y+o*C+p*G+q*K,e[3]=r*v+s*z+t*D+u*H,e[7]=r*w+s*A+t*E+u*I,e[11]=r*x+s*B+t*F+u*J,e[15]=r*y+s*C+t*G+u*K,this},multiplyToArray:function(a,b,c){var d=this.elements;return this.multiplyMatrices(a,b),c[0]=d[0],c[1]=d[1],c[2]=d[2],c[3]=d[3],c[4]=d[4],c[5]=d[5],c[6]=d[6],c[7]=d[7],c[8]=d[8],c[9]=d[9],c[10]=d[10],c[11]=d[11],c[12]=d[12],c[13]=d[13],c[14]=d[14],c[15]=d[15],this},multiplyScalar:function(a){var b=this.elements;return b[0]*=a,b[4]*=a,b[8]*=a,b[12]*=a,b[1]*=a,b[5]*=a,b[9]*=a,b[13]*=a,b[2]*=a,b[6]*=a,b[10]*=a,b[14]*=a,b[3]*=a,b[7]*=a,b[11]*=a,b[15]*=a,this},multiplyVector3:function(a){return THREE.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),a.applyProjection(this)},multiplyVector4:function(a){return THREE.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},multiplyVector3Array:function(a){return THREE.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(a)},applyToVector3Array:function(){var a=new THREE.Vector3;return function(b,c,d){void 0===c&&(c=0),void 0===d&&(d=b.length);for(var e=0,f=c;d>e;e+=3,f+=3)a.x=b[f],a.y=b[f+1],a.z=b[f+2],a.applyMatrix4(this),b[f]=a.x,b[f+1]=a.y,b[f+2]=a.z;return b}}(),rotateAxis:function(a){THREE.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),a.transformDirection(this)},crossVector:function(a){return THREE.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),a.applyMatrix4(this)},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],l=a[10],m=a[14],n=a[3],o=a[7],p=a[11],q=a[15];return n*(+e*h*k-d*i*k-e*g*l+c*i*l+d*g*m-c*h*m)+o*(+b*h*m-b*i*l+e*f*l-d*f*m+d*i*j-e*h*j)+p*(+b*i*k-b*g*m-e*f*k+c*f*m+e*g*j-c*i*j)+q*(-d*g*j-b*h*k+b*g*l+d*f*k-c*f*l+c*h*j)},transpose:function(){var a,b=this.elements;return a=b[1],b[1]=b[4],b[4]=a,a=b[2],b[2]=b[8],b[8]=a,a=b[6],b[6]=b[9],b[9]=a,a=b[3],b[3]=b[12],b[12]=a,a=b[7],b[7]=b[13],b[13]=a,a=b[11],b[11]=b[14],b[14]=a,this},flattenToArrayOffset:function(a,b){var c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a[b+9]=c[9],a[b+10]=c[10],a[b+11]=c[11],a[b+12]=c[12],a[b+13]=c[13],a[b+14]=c[14],a[b+15]=c[15],a},getPosition:function(){var a=new THREE.Vector3;return function(){THREE.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var b=this.elements;return a.set(b[12],b[13],b[14])}}(),setPosition:function(a){var b=this.elements;return b[12]=a.x,b[13]=a.y,b[14]=a.z,this},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],f=d[4],g=d[8],h=d[12],i=d[1],j=d[5],k=d[9],l=d[13],m=d[2],n=d[6],o=d[10],p=d[14],q=d[3],r=d[7],s=d[11],t=d[15];c[0]=k*p*r-l*o*r+l*n*s-j*p*s-k*n*t+j*o*t,c[4]=h*o*r-g*p*r-h*n*s+f*p*s+g*n*t-f*o*t,c[8]=g*l*r-h*k*r+h*j*s-f*l*s-g*j*t+f*k*t,c[12]=h*k*n-g*l*n-h*j*o+f*l*o+g*j*p-f*k*p,c[1]=l*o*q-k*p*q-l*m*s+i*p*s+k*m*t-i*o*t,c[5]=g*p*q-h*o*q+h*m*s-e*p*s-g*m*t+e*o*t,c[9]=h*k*q-g*l*q-h*i*s+e*l*s+g*i*t-e*k*t,c[13]=g*l*m-h*k*m+h*i*o-e*l*o-g*i*p+e*k*p,c[2]=j*p*q-l*n*q+l*m*r-i*p*r-j*m*t+i*n*t,c[6]=h*n*q-f*p*q-h*m*r+e*p*r+f*m*t-e*n*t,c[10]=f*l*q-h*j*q+h*i*r-e*l*r-f*i*t+e*j*t,c[14]=h*j*m-f*l*m-h*i*n+e*l*n+f*i*p-e*j*p,c[3]=k*n*q-j*o*q-k*m*r+i*o*r+j*m*s-i*n*s,c[7]=f*o*q-g*n*q+g*m*r-e*o*r-f*m*s+e*n*s,c[11]=g*j*q-f*k*q-g*i*r+e*k*r+f*i*s-e*j*s,c[15]=f*k*m-g*j*m+g*i*n-e*k*n-f*i*o+e*j*o;var u=e*c[0]+i*c[4]+m*c[8]+q*c[12];if(0==u){var v="THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";if(b)throw new Error(v);return THREE.warn(v),this.identity(),this}return this.multiplyScalar(1/u),this},translate:function(a){THREE.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(a){THREE.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(a){THREE.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(a){THREE.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(a,b){THREE.error("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;return b[0]*=c,b[4]*=d,b[8]*=e,b[1]*=c,b[5]*=d,b[9]*=e,b[2]*=c,b[6]*=d,b[10]*=e,b[3]*=c,b[7]*=d,b[11]*=e,this},getMaxScaleOnAxis:function(){var a=this.elements,b=a[0]*a[0]+a[1]*a[1]+a[2]*a[2],c=a[4]*a[4]+a[5]*a[5]+a[6]*a[6],d=a[8]*a[8]+a[9]*a[9]+a[10]*a[10];return Math.sqrt(Math.max(b,Math.max(c,d)))},makeTranslation:function(a,b,c){return this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1),this},makeRotationX:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(1,0,0,0,0,b,-c,0,0,c,b,0,0,0,0,1),this},makeRotationY:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(b,0,c,0,0,1,0,0,-c,0,b,0,0,0,0,1),this},makeRotationZ:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(b,-c,0,0,c,b,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;return this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1),this},makeScale:function(a,b,c){return this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1),this},compose:function(a,b,c){return this.makeRotationFromQuaternion(b),this.scale(c),this.setPosition(a),this},decompose:function(){var a=new THREE.Vector3,b=new THREE.Matrix4;return function(c,d,e){var f=this.elements,g=a.set(f[0],f[1],f[2]).length(),h=a.set(f[4],f[5],f[6]).length(),i=a.set(f[8],f[9],f[10]).length(),j=this.determinant();0>j&&(g=-g),c.x=f[12],c.y=f[13],c.z=f[14],b.elements.set(this.elements);var k=1/g,l=1/h,m=1/i;return b.elements[0]*=k,b.elements[1]*=k,b.elements[2]*=k,b.elements[4]*=l,b.elements[5]*=l,b.elements[6]*=l,b.elements[8]*=m,b.elements[9]*=m,b.elements[10]*=m,d.setFromRotationMatrix(b),e.x=g,e.y=h,e.z=i,this}}(),makeFrustum:function(a,b,c,d,e,f){var g=this.elements,h=2*e/(b-a),i=2*e/(d-c),j=(b+a)/(b-a),k=(d+c)/(d-c),l=-(f+e)/(f-e),m=-2*f*e/(f-e);return g[0]=h,g[4]=0,g[8]=j,g[12]=0,g[1]=0,g[5]=i,g[9]=k,g[13]=0,g[2]=0,g[6]=0,g[10]=l,g[14]=m,g[3]=0,g[7]=0,g[11]=-1,g[15]=0,this},makePerspective:function(a,b,c,d){var e=c*Math.tan(THREE.Math.degToRad(.5*a)),f=-e,g=f*b,h=e*b;return this.makeFrustum(g,h,f,e,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,i=c-d,j=f-e,k=(b+a)/h,l=(c+d)/i,m=(f+e)/j;return g[0]=2/h,g[4]=0,g[8]=0,g[12]=-k,g[1]=0,g[5]=2/i,g[9]=0,g[13]=-l,g[2]=0,g[6]=0,g[10]=-2/j,g[14]=-m,g[3]=0,g[7]=0,g[11]=0,g[15]=1,this},fromArray:function(a){return this.elements.set(a),this},toArray:function(){var a=this.elements;return[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15]]},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)}},THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3,this.direction=void 0!==b?b:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){return this.origin.copy(a),this.direction.copy(b),this},copy:function(a){return this.origin.copy(a.origin),this.direction.copy(a.direction),this},at:function(a,b){var c=b||new THREE.Vector3;return c.copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(){var a=new THREE.Vector3;return function(b){return this.origin.copy(this.at(b,a)),this}}(),closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);var d=c.dot(this.direction);return 0>d?c.copy(this.origin):c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(){var a=new THREE.Vector3;return function(b){var c=a.subVectors(b,this.origin).dot(this.direction);return 0>c?this.origin.distanceTo(b):(a.copy(this.direction).multiplyScalar(c).add(this.origin),a.distanceTo(b))}}(),distanceSqToSegment:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g){a.copy(d).add(e).multiplyScalar(.5),b.copy(e).sub(d).normalize(),c.copy(this.origin).sub(a);var h,i,j,k,l=.5*d.distanceTo(e),m=-this.direction.dot(b),n=c.dot(this.direction),o=-c.dot(b),p=c.lengthSq(),q=Math.abs(1-m*m);if(q>0)if(h=m*o-n,i=m*n-o,k=l*q,h>=0)if(i>=-k)if(k>=i){var r=1/q;h*=r,i*=r,j=h*(h+m*i+2*n)+i*(m*h+i+2*o)+p}else i=l,h=Math.max(0,-(m*i+n)),j=-h*h+i*(i+2*o)+p;else i=-l,h=Math.max(0,-(m*i+n)),j=-h*h+i*(i+2*o)+p;else-k>=i?(h=Math.max(0,-(-m*l+n)),i=h>0?-l:Math.min(Math.max(-l,-o),l),j=-h*h+i*(i+2*o)+p):k>=i?(h=0,i=Math.min(Math.max(-l,-o),l),j=i*(i+2*o)+p):(h=Math.max(0,-(m*l+n)),i=h>0?l:Math.min(Math.max(-l,-o),l),j=-h*h+i*(i+2*o)+p);else i=m>0?-l:l,h=Math.max(0,-(m*i+n)),j=-h*h+i*(i+2*o)+p;return f&&f.copy(this.direction).multiplyScalar(h).add(this.origin),g&&g.copy(b).multiplyScalar(i).add(a),j}}(),isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},intersectSphere:function(){var a=new THREE.Vector3;return function(b,c){a.subVectors(b.center,this.origin);var d=a.dot(this.direction),e=a.dot(a)-d*d,f=b.radius*b.radius;if(e>f)return null;var g=Math.sqrt(f-e),h=d-g,i=d+g;return 0>h&&0>i?null:0>h?this.at(i,c):this.at(h,c)}}(),isIntersectionPlane:function(a){var b=a.distanceToPoint(this.origin);if(0===b)return!0;var c=a.normal.dot(this.direction);return 0>c*b?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);if(0==b)return 0==a.distanceToPoint(this.origin)?0:null;var c=-(this.origin.dot(a.normal)+a.constant)/b;return c>=0?c:null},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return null===c?null:this.at(c,b)},isIntersectionBox:function(){var a=new THREE.Vector3;return function(b){return null!==this.intersectBox(b,a)}}(),intersectBox:function(a,b){var c,d,e,f,g,h,i=1/this.direction.x,j=1/this.direction.y,k=1/this.direction.z,l=this.origin;return i>=0?(c=(a.min.x-l.x)*i,d=(a.max.x-l.x)*i):(c=(a.max.x-l.x)*i,d=(a.min.x-l.x)*i),j>=0?(e=(a.min.y-l.y)*j,f=(a.max.y-l.y)*j):(e=(a.max.y-l.y)*j,f=(a.min.y-l.y)*j),c>f||e>d?null:((e>c||c!==c)&&(c=e),(d>f||d!==d)&&(d=f),k>=0?(g=(a.min.z-l.z)*k,h=(a.max.z-l.z)*k):(g=(a.max.z-l.z)*k,h=(a.min.z-l.z)*k),c>h||g>d?null:((g>c||c!==c)&&(c=g),(d>h||d!==d)&&(d=h),0>d?null:this.at(c>=0?c:d,b)))},intersectTriangle:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Vector3;return function(e,f,g,h,i){b.subVectors(f,e),c.subVectors(g,e),d.crossVectors(b,c);var j,k=this.direction.dot(d);if(k>0){if(h)return null;j=1}else{if(!(0>k))return null;j=-1,k=-k}a.subVectors(this.origin,e);var l=j*this.direction.dot(c.crossVectors(a,c));if(0>l)return null;var m=j*this.direction.dot(b.cross(a));if(0>m)return null;if(l+m>k)return null;var n=-j*a.dot(d);return 0>n?null:this.at(n/k,i)}}(),applyMatrix4:function(a){return this.direction.add(this.origin).applyMatrix4(a),this.origin.applyMatrix4(a),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3,this.radius=void 0!==b?b:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){return this.center.copy(a),this.radius=b,this},setFromPoints:function(){var a=new THREE.Box3;return function(b,c){var d=this.center;void 0!==c?d.copy(c):a.setFromPoints(b).center(d);for(var e=0,f=0,g=b.length;g>f;f++)e=Math.max(e,d.distanceToSquared(b[f]));return this.radius=Math.sqrt(e),this}}(),copy:function(a){return this.center.copy(a.center),this.radius=a.radius,this},empty:function(){return this.radius<=0},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;return d.copy(a),c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center)),d},getBoundingBox:function(a){var b=a||new THREE.Box3;return b.set(this.center,this.center),b.expandByScalar(this.radius),b},applyMatrix4:function(a){return this.center.applyMatrix4(a),this.radius=this.radius*a.getMaxScaleOnAxis(),this},translate:function(a){return this.center.add(a),this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(a,b,c,d,e,f){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==f?f:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(a,b,c,d,e,f){var g=this.planes;return g[0].copy(a),g[1].copy(b),g[2].copy(c),g[3].copy(d),g[4].copy(e),g[5].copy(f),this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements,d=c[0],e=c[1],f=c[2],g=c[3],h=c[4],i=c[5],j=c[6],k=c[7],l=c[8],m=c[9],n=c[10],o=c[11],p=c[12],q=c[13],r=c[14],s=c[15];return b[0].setComponents(g-d,k-h,o-l,s-p).normalize(),b[1].setComponents(g+d,k+h,o+l,s+p).normalize(),b[2].setComponents(g+e,k+i,o+m,s+q).normalize(),b[3].setComponents(g-e,k-i,o-m,s-q).normalize(),b[4].setComponents(g-f,k-j,o-n,s-r).normalize(),b[5].setComponents(g+f,k+j,o+n,s+r).normalize(),this},intersectsObject:function(){var a=new THREE.Sphere;return function(b){var c=b.geometry;return null===c.boundingSphere&&c.computeBoundingSphere(),a.copy(c.boundingSphere),a.applyMatrix4(b.matrixWorld),this.intersectsSphere(a)}}(),intersectsSphere:function(a){for(var b=this.planes,c=a.center,d=-a.radius,e=0;6>e;e++){var f=b[e].distanceToPoint(c);if(d>f)return!1}return!0},intersectsBox:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){for(var d=this.planes,e=0;6>e;e++){var f=d[e];a.x=f.normal.x>0?c.min.x:c.max.x,b.x=f.normal.x>0?c.max.x:c.min.x,a.y=f.normal.y>0?c.min.y:c.max.y,b.y=f.normal.y>0?c.max.y:c.min.y,a.z=f.normal.z>0?c.min.z:c.max.z,b.z=f.normal.z>0?c.max.z:c.min.z;var g=f.distanceToPoint(a),h=f.distanceToPoint(b);if(0>g&&0>h)return!1}return!0}}(),containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(b[c].distanceToPoint(a)<0)return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0),this.constant=void 0!==b?b:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){return this.normal.copy(a),this.constant=b,this},setComponents:function(a,b,c,d){return this.normal.set(a,b,c),this.constant=d,this},setFromNormalAndCoplanarPoint:function(a,b){return this.normal.copy(a),this.constant=-b.dot(this.normal),this},setFromCoplanarPoints:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c,d,e){var f=a.subVectors(e,d).cross(b.subVectors(c,d)).normalize();return this.setFromNormalAndCoplanarPoint(f,c),this}}(),copy:function(a){return this.normal.copy(a.normal),this.constant=a.constant,this},normalize:function(){var a=1/this.normal.length();return this.normal.multiplyScalar(a),this.constant*=a,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,b){var c=this.distanceToPoint(a),d=b||new THREE.Vector3;return d.copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a){var b=this.distanceToPoint(a.start),c=this.distanceToPoint(a.end);return 0>b&&c>0||0>c&&b>0},intersectLine:function(){var a=new THREE.Vector3;return function(b,c){var d=c||new THREE.Vector3,e=b.delta(a),f=this.normal.dot(e);if(0==f)return 0==this.distanceToPoint(b.start)?d.copy(b.start):void 0;var g=-(b.start.dot(this.normal)+this.constant)/f;return 0>g||g>1?void 0:d.copy(e).multiplyScalar(g).add(b.start)}}(),coplanarPoint:function(a){var b=a||new THREE.Vector3;return b.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Matrix3;return function(d,e){var f=e||c.getNormalMatrix(d),g=a.copy(this.normal).applyMatrix3(f),h=this.coplanarPoint(b);return h.applyMatrix4(d),this.setFromNormalAndCoplanarPoint(g,h),this}}(),translate:function(a){return this.constant=this.constant-a.dot(this.normal),this},equals:function(a){return a.normal.equals(this.normal)&&a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Math={generateUUID:function(){var a,b="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),c=new Array(36),d=0;
return function(){for(var e=0;36>e;e++)8==e||13==e||18==e||23==e?c[e]="-":14==e?c[e]="4":(2>=d&&(d=33554432+16777216*Math.random()|0),a=15&d,d>>=4,c[e]=b[19==e?3&a|8:a]);return c.join("")}}(),clamp:function(a,b,c){return b>a?b:a>c?c:a},clampBottom:function(a,b){return b>a?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},smoothstep:function(a,b,c){return b>=a?0:a>=c?1:(a=(a-b)/(c-b),a*a*(3-2*a))},smootherstep:function(a,b,c){return b>=a?0:a>=c?1:(a=(a-b)/(c-b),a*a*a*(a*(6*a-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return Math.floor(this.randFloat(a,b))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},degToRad:function(){var a=Math.PI/180;return function(b){return b*a}}(),radToDeg:function(){var a=180/Math.PI;return function(b){return b*a}}(),isPowerOfTwo:function(a){return 0===(a&a-1)&&0!==a},nextPowerOfTwo:function(a){return a--,a|=a>>1,a|=a>>2,a|=a>>4,a|=a>>8,a|=a>>16,a++,a}},THREE.Spline=function(a){function b(a,b,c,d,e,f,g){var h=.5*(c-a),i=.5*(d-b);return(2*(b-c)+h+i)*g+(-3*(b-c)-2*h-i)*f+h*e+b}this.points=a;var c,d,e,f,g,h,i,j,k,l=[],m={x:0,y:0,z:0};this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}},this.getPoint=function(a){return c=(this.points.length-1)*a,d=Math.floor(c),e=c-d,l[0]=0===d?d:d-1,l[1]=d,l[2]=d>this.points.length-2?this.points.length-1:d+1,l[3]=d>this.points.length-3?this.points.length-1:d+2,h=this.points[l[0]],i=this.points[l[1]],j=this.points[l[2]],k=this.points[l[3]],f=e*e,g=e*f,m.x=b(h.x,i.x,j.x,k.x,e,f,g),m.y=b(h.y,i.y,j.y,k.y,e,f,g),m.z=b(h.z,i.z,j.z,k.z,e,f,g),m},this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;c>a;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d},this.getLength=function(a){var b,c,d,e,f=0,g=0,h=0,i=new THREE.Vector3,j=new THREE.Vector3,k=[],l=0;for(k[0]=0,a||(a=100),d=this.points.length*a,i.copy(this.points[0]),b=1;d>b;b++)c=b/d,e=this.getPoint(c),j.copy(e),l+=j.distanceTo(i),i.copy(e),f=(this.points.length-1)*c,g=Math.floor(f),g!=h&&(k[g]=l,h=g);return k[k.length]=l,{chunks:k,total:l}},this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,h,i,j=[],k=new THREE.Vector3,l=this.getLength();for(j.push(k.copy(this.points[0]).clone()),b=1;b<this.points.length;b++){for(g=l.chunks[b]-l.chunks[b-1],h=Math.ceil(a*g/l.total),e=(b-1)/(this.points.length-1),f=b/(this.points.length-1),c=1;h-1>c;c++)d=e+c*(1/h)*(f-e),i=this.getPoint(d),j.push(k.copy(i).clone());j.push(k.copy(this.points[b]).clone())}this.points=j}},THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3,this.b=void 0!==b?b:new THREE.Vector3,this.c=void 0!==c?c:new THREE.Vector3},THREE.Triangle.normal=function(){var a=new THREE.Vector3;return function(b,c,d,e){var f=e||new THREE.Vector3;f.subVectors(d,c),a.subVectors(b,c),f.cross(a);var g=f.lengthSq();return g>0?f.multiplyScalar(1/Math.sqrt(g)):f.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(d,e,f,g,h){a.subVectors(g,e),b.subVectors(f,e),c.subVectors(d,e);var i=a.dot(a),j=a.dot(b),k=a.dot(c),l=b.dot(b),m=b.dot(c),n=i*l-j*j,o=h||new THREE.Vector3;if(0==n)return o.set(-2,-1,-1);var p=1/n,q=(l*k-j*m)*p,r=(i*m-j*k)*p;return o.set(1-q-r,r,q)}}(),THREE.Triangle.containsPoint=function(){var a=new THREE.Vector3;return function(b,c,d,e){var f=THREE.Triangle.barycoordFromPoint(b,c,d,e,a);return f.x>=0&&f.y>=0&&f.x+f.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){return this.a.copy(a),this.b.copy(b),this.c.copy(c),this},setFromPointsAndIndices:function(a,b,c,d){return this.a.copy(a[b]),this.b.copy(a[c]),this.c.copy(a[d]),this},copy:function(a){return this.a.copy(a.a),this.b.copy(a.b),this.c.copy(a.c),this},area:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){return a.subVectors(this.c,this.b),b.subVectors(this.a,this.b),.5*a.cross(b).length()}}(),midpoint:function(a){var b=a||new THREE.Vector3;return b.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){var b=a||new THREE.Plane;return b.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var a=0;if(this.autoStart&&!this.running&&this.start(),this.running){var b=void 0!==self.performance&&void 0!==self.performance.now?self.performance.now():Date.now();a=.001*(b-this.oldTime),this.oldTime=b,this.elapsedTime+=a}return a}},THREE.EventDispatcher=function(){},THREE.EventDispatcher.prototype={constructor:THREE.EventDispatcher,apply:function(a){a.addEventListener=THREE.EventDispatcher.prototype.addEventListener,a.hasEventListener=THREE.EventDispatcher.prototype.hasEventListener,a.removeEventListener=THREE.EventDispatcher.prototype.removeEventListener,a.dispatchEvent=THREE.EventDispatcher.prototype.dispatchEvent},addEventListener:function(a,b){void 0===this._listeners&&(this._listeners={});var c=this._listeners;void 0===c[a]&&(c[a]=[]),-1===c[a].indexOf(b)&&c[a].push(b)},hasEventListener:function(a,b){if(void 0===this._listeners)return!1;var c=this._listeners;return void 0!==c[a]&&-1!==c[a].indexOf(b)?!0:!1},removeEventListener:function(a,b){if(void 0!==this._listeners){var c=this._listeners,d=c[a];if(void 0!==d){var e=d.indexOf(b);-1!==e&&d.splice(e,1)}}},dispatchEvent:function(a){if(void 0!==this._listeners){var b=this._listeners,c=b[a.type];if(void 0!==c){a.target=this;for(var d=[],e=c.length,f=0;e>f;f++)d[f]=c[f];for(var f=0;e>f;f++)d[f].call(this,a)}}}},function(a){a.Raycaster=function(b,c,d,e){this.ray=new a.Ray(b,c),this.near=d||0,this.far=e||1/0,this.params={Sprite:{},Mesh:{},PointCloud:{threshold:1},LOD:{},Line:{}}};var b=function(a,b){return a.distance-b.distance},c=function(a,b,d,e){if(a.raycast(b,d),e===!0)for(var f=a.children,g=0,h=f.length;h>g;g++)c(f[g],b,d,!0)};a.Raycaster.prototype={constructor:a.Raycaster,precision:1e-4,linePrecision:1,set:function(a,b){this.ray.set(a,b)},setFromCamera:function(b,c){c instanceof a.PerspectiveCamera?(this.ray.origin.copy(c.position),this.ray.direction.set(b.x,b.y,.5).unproject(c).sub(c.position).normalize()):c instanceof a.OrthographicCamera?(this.ray.origin.set(b.x,b.y,-1).unproject(c),this.ray.direction.set(0,0,-1).transformDirection(c.matrixWorld)):a.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(a,d){var e=[];return c(a,this,e,d),e.sort(b),e},intersectObjects:function(d,e){var f=[];if(d instanceof Array==!1)return a.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),f;for(var g=0,h=d.length;h>g;g++)c(d[g],this,f,e);return f.sort(b),f}}}(THREE),THREE.Object3D=function(){Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Object3D",this.parent=void 0,this.children=[],this.up=THREE.Object3D.DefaultUp.clone();var a=new THREE.Vector3,b=new THREE.Euler,c=new THREE.Quaternion,d=new THREE.Vector3(1,1,1),e=function(){c.setFromEuler(b,!1)},f=function(){b.setFromQuaternion(c,void 0,!1)};b.onChange(e),c.onChange(f),Object.defineProperties(this,{position:{enumerable:!0,value:a},rotation:{enumerable:!0,value:b},quaternion:{enumerable:!0,value:c},scale:{enumerable:!0,value:d}}),this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}},THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0),THREE.Object3D.prototype={constructor:THREE.Object3D,get eulerOrder(){return THREE.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order},set eulerOrder(a){THREE.warn("THREE.Object3D: .eulerOrder has been moved to .rotation.order."),this.rotation.order=a},get useQuaternion(){THREE.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(a){THREE.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(a,b){this.quaternion.setFromAxisAngle(a,b)},setRotationFromEuler:function(a){this.quaternion.setFromEuler(a,!0)},setRotationFromMatrix:function(a){this.quaternion.setFromRotationMatrix(a)},setRotationFromQuaternion:function(a){this.quaternion.copy(a)},rotateOnAxis:function(){var a=new THREE.Quaternion;return function(b,c){return a.setFromAxisAngle(b,c),this.quaternion.multiply(a),this}}(),rotateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.rotateOnAxis(a,b)}}(),rotateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.rotateOnAxis(a,b)}}(),translateOnAxis:function(){var a=new THREE.Vector3;return function(b,c){return a.copy(b).applyQuaternion(this.quaternion),this.position.add(a.multiplyScalar(c)),this}}(),translate:function(a,b){return THREE.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(b,a)},translateX:function(){var a=new THREE.Vector3(1,0,0);return function(b){return this.translateOnAxis(a,b)}}(),translateY:function(){var a=new THREE.Vector3(0,1,0);return function(b){return this.translateOnAxis(a,b)}}(),translateZ:function(){var a=new THREE.Vector3(0,0,1);return function(b){return this.translateOnAxis(a,b)}}(),localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var a=new THREE.Matrix4;return function(b){return b.applyMatrix4(a.getInverse(this.matrixWorld))}}(),lookAt:function(){var a=new THREE.Matrix4;return function(b){a.lookAt(b,this.position,this.up),this.quaternion.setFromRotationMatrix(a)}}(),add:function(a){if(arguments.length>1){for(var b=0;b<arguments.length;b++)this.add(arguments[b]);return this}return a===this?(THREE.error("THREE.Object3D.add: object can't be added as a child of itself.",a),this):(a instanceof THREE.Object3D?(void 0!==a.parent&&a.parent.remove(a),a.parent=this,a.dispatchEvent({type:"added"}),this.children.push(a)):THREE.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",a),this)},remove:function(a){if(arguments.length>1)for(var b=0;b<arguments.length;b++)this.remove(arguments[b]);var c=this.children.indexOf(a);-1!==c&&(a.parent=void 0,a.dispatchEvent({type:"removed"}),this.children.splice(c,1))},getChildByName:function(a){return THREE.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(a)},getObjectById:function(a){return this.getObjectByProperty("id",a)},getObjectByName:function(a){return this.getObjectByProperty("name",a)},getObjectByProperty:function(a,b){if(this[a]===b)return this;for(var c=0,d=this.children.length;d>c;c++){var e=this.children[c],f=e.getObjectByProperty(a,b);if(void 0!==f)return f}return void 0},getWorldPosition:function(a){var b=a||new THREE.Vector3;return this.updateMatrixWorld(!0),b.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){var d=c||new THREE.Quaternion;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(a,d,b),d}}(),getWorldRotation:function(){var a=new THREE.Quaternion;return function(b){var c=b||new THREE.Euler;return this.getWorldQuaternion(a),c.setFromQuaternion(a,this.rotation.order,!1)}}(),getWorldScale:function(){var a=new THREE.Vector3,b=new THREE.Quaternion;return function(c){var d=c||new THREE.Vector3;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(a,b,d),d}}(),getWorldDirection:function(){var a=new THREE.Quaternion;return function(b){var c=b||new THREE.Vector3;return this.getWorldQuaternion(a),c.set(0,0,1).applyQuaternion(a)}}(),raycast:function(){},traverse:function(a){a(this);for(var b=0,c=this.children.length;c>b;b++)this.children[b].traverse(a)},traverseVisible:function(a){if(this.visible!==!1){a(this);for(var b=0,c=this.children.length;c>b;b++)this.children[b].traverseVisible(a)}},traverseAncestors:function(a){this.parent&&(a(this.parent),this.parent.traverseAncestors(a))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||a===!0)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0);for(var b=0,c=this.children.length;c>b;b++)this.children[b].updateMatrixWorld(a)},toJSON:function(){var a={metadata:{version:4.3,type:"Object",generator:"ObjectExporter"}},b={},c=function(c){if(void 0===a.geometries&&(a.geometries=[]),void 0===b[c.uuid]){var d=c.toJSON();delete d.metadata,b[c.uuid]=d,a.geometries.push(d)}return c.uuid},d={},e=function(b){if(void 0===a.materials&&(a.materials=[]),void 0===d[b.uuid]){var c=b.toJSON();delete c.metadata,d[b.uuid]=c,a.materials.push(c)}return b.uuid},f=function(a){var b={};if(b.uuid=a.uuid,b.type=a.type,""!==a.name&&(b.name=a.name),"{}"!==JSON.stringify(a.userData)&&(b.userData=a.userData),a.visible!==!0&&(b.visible=a.visible),a instanceof THREE.PerspectiveCamera?(b.fov=a.fov,b.aspect=a.aspect,b.near=a.near,b.far=a.far):a instanceof THREE.OrthographicCamera?(b.left=a.left,b.right=a.right,b.top=a.top,b.bottom=a.bottom,b.near=a.near,b.far=a.far):a instanceof THREE.AmbientLight?b.color=a.color.getHex():a instanceof THREE.DirectionalLight?(b.color=a.color.getHex(),b.intensity=a.intensity):a instanceof THREE.PointLight?(b.color=a.color.getHex(),b.intensity=a.intensity,b.distance=a.distance,b.decay=a.decay):a instanceof THREE.SpotLight?(b.color=a.color.getHex(),b.intensity=a.intensity,b.distance=a.distance,b.angle=a.angle,b.exponent=a.exponent,b.decay=a.decay):a instanceof THREE.HemisphereLight?(b.color=a.color.getHex(),b.groundColor=a.groundColor.getHex()):a instanceof THREE.Mesh||a instanceof THREE.Line||a instanceof THREE.PointCloud?(b.geometry=c(a.geometry),b.material=e(a.material),a instanceof THREE.Line&&(b.mode=a.mode)):a instanceof THREE.Sprite&&(b.material=e(a.material)),b.matrix=a.matrix.toArray(),a.children.length>0){b.children=[];for(var d=0;d<a.children.length;d++)b.children.push(f(a.children[d]))}return b};return a.object=f(this),a},clone:function(a,b){if(void 0===a&&(a=new THREE.Object3D),void 0===b&&(b=!0),a.name=this.name,a.up.copy(this.up),a.position.copy(this.position),a.quaternion.copy(this.quaternion),a.scale.copy(this.scale),a.rotationAutoUpdate=this.rotationAutoUpdate,a.matrix.copy(this.matrix),a.matrixWorld.copy(this.matrixWorld),a.matrixAutoUpdate=this.matrixAutoUpdate,a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,a.visible=this.visible,a.castShadow=this.castShadow,a.receiveShadow=this.receiveShadow,a.frustumCulled=this.frustumCulled,a.userData=JSON.parse(JSON.stringify(this.userData)),b===!0)for(var c=0;c<this.children.length;c++){var d=this.children[c];a.add(d.clone())}return a}},THREE.EventDispatcher.prototype.apply(THREE.Object3D.prototype),THREE.Object3DIdCount=0,THREE.Face3=function(a,b,c,d,e,f){this.a=a,this.b=b,this.c=c,this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3,this.vertexNormals=d instanceof Array?d:[],this.color=e instanceof THREE.Color?e:new THREE.Color,this.vertexColors=e instanceof Array?e:[],this.vertexTangents=[],this.materialIndex=void 0!==f?f:0},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal),a.color.copy(this.color),a.materialIndex=this.materialIndex;for(var b=0,c=this.vertexNormals.length;c>b;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();for(var b=0,c=this.vertexColors.length;c>b;b++)a.vertexColors[b]=this.vertexColors[b].clone();for(var b=0,c=this.vertexTangents.length;c>b;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();return a}},THREE.Face4=function(a,b,c,d,e,f,g){return THREE.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(a,b,c,e,f,g)},THREE.BufferAttribute=function(a,b){this.array=a,this.itemSize=b,this.needsUpdate=!1},THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get length(){return this.array.length},copyAt:function(a,b,c){a*=this.itemSize,c*=b.itemSize;for(var d=0,e=this.itemSize;e>d;d++)this.array[a+d]=b.array[c+d];return this},set:function(a,b){return void 0===b&&(b=0),this.array.set(a,b),this},setX:function(a,b){return this.array[a*this.itemSize]=b,this},setY:function(a,b){return this.array[a*this.itemSize+1]=b,this},setZ:function(a,b){return this.array[a*this.itemSize+2]=b,this},setXY:function(a,b,c){return a*=this.itemSize,this.array[a]=b,this.array[a+1]=c,this},setXYZ:function(a,b,c,d){return a*=this.itemSize,this.array[a]=b,this.array[a+1]=c,this.array[a+2]=d,this},setXYZW:function(a,b,c,d,e){return a*=this.itemSize,this.array[a]=b,this.array[a+1]=c,this.array[a+2]=d,this.array[a+3]=e,this},clone:function(){return new THREE.BufferAttribute(new this.array.constructor(this.array),this.itemSize)}},THREE.Int8Attribute=function(a,b){return THREE.warn("THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(a,b)},THREE.Uint8Attribute=function(a,b){return THREE.warn("THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(a,b)},THREE.Uint8ClampedAttribute=function(a,b){return THREE.warn("THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(a,b)},THREE.Int16Attribute=function(a,b){return THREE.warn("THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(a,b)},THREE.Uint16Attribute=function(a,b){return THREE.warn("THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(a,b)},THREE.Int32Attribute=function(a,b){return THREE.warn("THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(a,b)},THREE.Uint32Attribute=function(a,b){return THREE.warn("THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(a,b)},THREE.Float32Attribute=function(a,b){return THREE.warn("THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(a,b)},THREE.Float64Attribute=function(a,b){return THREE.warn("THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead."),new THREE.BufferAttribute(a,b)},THREE.DynamicBufferAttribute=function(a,b){THREE.BufferAttribute.call(this,a,b),this.updateRange={offset:0,count:-1}},THREE.DynamicBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.DynamicBufferAttribute.prototype.constructor=THREE.DynamicBufferAttribute,THREE.DynamicBufferAttribute.prototype.clone=function(){return new THREE.DynamicBufferAttribute(new this.array.constructor(this.array),this.itemSize)},THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="BufferGeometry",this.attributes={},this.attributesKeys=[],this.drawcalls=[],this.offsets=this.drawcalls,this.boundingBox=null,this.boundingSphere=null},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,addAttribute:function(a,b){return b instanceof THREE.BufferAttribute==!1?(THREE.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void(this.attributes[a]={array:arguments[1],itemSize:arguments[2]})):(this.attributes[a]=b,void(this.attributesKeys=Object.keys(this.attributes)))},getAttribute:function(a){return this.attributes[a]},addDrawCall:function(a,b,c){this.drawcalls.push({start:a,count:b,index:void 0!==c?c:0})},applyMatrix:function(a){var b=this.attributes.position;void 0!==b&&(a.applyToVector3Array(b.array),b.needsUpdate=!0);var c=this.attributes.normal;if(void 0!==c){var d=(new THREE.Matrix3).getNormalMatrix(a);d.applyToVector3Array(c.array),c.needsUpdate=!0}null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere()},center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();return this.applyMatrix((new THREE.Matrix4).setPosition(a)),a},fromGeometry:function(a,b){b=b||{vertexColors:THREE.NoColors};var c=a.vertices,d=a.faces,e=a.faceVertexUvs,f=b.vertexColors,g=e[0].length>0,h=3==d[0].vertexNormals.length,i=new Float32Array(3*d.length*3);this.addAttribute("position",new THREE.BufferAttribute(i,3));var j=new Float32Array(3*d.length*3);if(this.addAttribute("normal",new THREE.BufferAttribute(j,3)),f!==THREE.NoColors){var k=new Float32Array(3*d.length*3);this.addAttribute("color",new THREE.BufferAttribute(k,3))}if(g===!0){var l=new Float32Array(3*d.length*2);this.addAttribute("uv",new THREE.BufferAttribute(l,2))}for(var m=0,n=0,o=0;m<d.length;m++,n+=6,o+=9){var p=d[m],q=c[p.a],r=c[p.b],s=c[p.c];if(i[o]=q.x,i[o+1]=q.y,i[o+2]=q.z,i[o+3]=r.x,i[o+4]=r.y,i[o+5]=r.z,i[o+6]=s.x,i[o+7]=s.y,i[o+8]=s.z,h===!0){var t=p.vertexNormals[0],u=p.vertexNormals[1],v=p.vertexNormals[2];j[o]=t.x,j[o+1]=t.y,j[o+2]=t.z,j[o+3]=u.x,j[o+4]=u.y,j[o+5]=u.z,j[o+6]=v.x,j[o+7]=v.y,j[o+8]=v.z}else{var w=p.normal;j[o]=w.x,j[o+1]=w.y,j[o+2]=w.z,j[o+3]=w.x,j[o+4]=w.y,j[o+5]=w.z,j[o+6]=w.x,j[o+7]=w.y,j[o+8]=w.z}if(f===THREE.FaceColors){var x=p.color;k[o]=x.r,k[o+1]=x.g,k[o+2]=x.b,k[o+3]=x.r,k[o+4]=x.g,k[o+5]=x.b,k[o+6]=x.r,k[o+7]=x.g,k[o+8]=x.b}else if(f===THREE.VertexColors){var y=p.vertexColors[0],z=p.vertexColors[1],A=p.vertexColors[2];k[o]=y.r,k[o+1]=y.g,k[o+2]=y.b,k[o+3]=z.r,k[o+4]=z.g,k[o+5]=z.b,k[o+6]=A.r,k[o+7]=A.g,k[o+8]=A.b}if(g===!0){var B=e[0][m][0],C=e[0][m][1],D=e[0][m][2];l[n]=B.x,l[n+1]=B.y,l[n+2]=C.x,l[n+3]=C.y,l[n+4]=D.x,l[n+5]=D.y}}return this.computeBoundingSphere(),this},computeBoundingBox:function(){var a=new THREE.Vector3;return function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var b=this.attributes.position.array;if(b){var c=this.boundingBox;c.makeEmpty();for(var d=0,e=b.length;e>d;d+=3)a.set(b[d],b[d+1],b[d+2]),c.expandByPoint(a)}(void 0===b||0===b.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&THREE.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.')}}(),computeBoundingSphere:function(){var a=new THREE.Box3,b=new THREE.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var c=this.attributes.position.array;if(c){a.makeEmpty();for(var d=this.boundingSphere.center,e=0,f=c.length;f>e;e+=3)b.set(c[e],c[e+1],c[e+2]),a.expandByPoint(b);a.center(d);for(var g=0,e=0,f=c.length;f>e;e+=3)b.set(c[e],c[e+1],c[e+2]),g=Math.max(g,d.distanceToSquared(b));this.boundingSphere.radius=Math.sqrt(g),isNaN(this.boundingSphere.radius)&&THREE.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.')}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var a=this.attributes;if(a.position){var b=a.position.array;if(void 0===a.normal)this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(b.length),3));else for(var c=a.normal.array,d=0,e=c.length;e>d;d++)c[d]=0;var f,g,h,c=a.normal.array,i=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,m=new THREE.Vector3;if(a.index)for(var n=a.index.array,o=this.offsets.length>0?this.offsets:[{start:0,count:n.length,index:0}],p=0,q=o.length;q>p;++p)for(var r=o[p].start,s=o[p].count,t=o[p].index,d=r,e=r+s;e>d;d+=3)f=3*(t+n[d]),g=3*(t+n[d+1]),h=3*(t+n[d+2]),i.fromArray(b,f),j.fromArray(b,g),k.fromArray(b,h),l.subVectors(k,j),m.subVectors(i,j),l.cross(m),c[f]+=l.x,c[f+1]+=l.y,c[f+2]+=l.z,c[g]+=l.x,c[g+1]+=l.y,c[g+2]+=l.z,c[h]+=l.x,c[h+1]+=l.y,c[h+2]+=l.z;else for(var d=0,e=b.length;e>d;d+=9)i.fromArray(b,d),j.fromArray(b,d+3),k.fromArray(b,d+6),l.subVectors(k,j),m.subVectors(i,j),l.cross(m),c[d]=l.x,c[d+1]=l.y,c[d+2]=l.z,c[d+3]=l.x,c[d+4]=l.y,c[d+5]=l.z,c[d+6]=l.x,c[d+7]=l.y,c[d+8]=l.z;this.normalizeNormals(),a.normal.needsUpdate=!0}},computeTangents:function(){function a(a,b,c){D.fromArray(d,3*a),E.fromArray(d,3*b),F.fromArray(d,3*c),G.fromArray(f,2*a),H.fromArray(f,2*b),I.fromArray(f,2*c),l=E.x-D.x,m=F.x-D.x,n=E.y-D.y,o=F.y-D.y,p=E.z-D.z,q=F.z-D.z,r=H.x-G.x,s=I.x-G.x,t=H.y-G.y,u=I.y-G.y,v=1/(r*u-s*t),J.set((u*l-t*m)*v,(u*n-t*o)*v,(u*p-t*q)*v),K.set((r*m-s*l)*v,(r*o-s*n)*v,(r*q-s*p)*v),i[a].add(J),i[b].add(J),i[c].add(J),j[a].add(K),j[b].add(K),j[c].add(K)}function b(a){U.fromArray(e,3*a),V.copy(U),Q=i[a],S.copy(Q),S.sub(U.multiplyScalar(U.dot(Q))).normalize(),T.crossVectors(V,Q),R=T.dot(j[a]),P=0>R?-1:1,h[4*a]=S.x,h[4*a+1]=S.y,h[4*a+2]=S.z,h[4*a+3]=P}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return void THREE.warn("THREE.BufferGeometry: Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");var c=this.attributes.index.array,d=this.attributes.position.array,e=this.attributes.normal.array,f=this.attributes.uv.array,g=d.length/3;void 0===this.attributes.tangent&&this.addAttribute("tangent",new THREE.BufferAttribute(new Float32Array(4*g),4));for(var h=this.attributes.tangent.array,i=[],j=[],k=0;g>k;k++)i[k]=new THREE.Vector3,j[k]=new THREE.Vector3;var l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D=new THREE.Vector3,E=new THREE.Vector3,F=new THREE.Vector3,G=new THREE.Vector2,H=new THREE.Vector2,I=new THREE.Vector2,J=new THREE.Vector3,K=new THREE.Vector3;0===this.drawcalls.length&&this.addDrawCall(0,c.length,0);var L=this.drawcalls;for(y=0,z=L.length;z>y;++y){var M=L[y].start,N=L[y].count,O=L[y].index;for(w=M,x=M+N;x>w;w+=3)A=O+c[w],B=O+c[w+1],C=O+c[w+2],a(A,B,C)}var P,Q,R,S=new THREE.Vector3,T=new THREE.Vector3,U=new THREE.Vector3,V=new THREE.Vector3;for(y=0,z=L.length;z>y;++y){var M=L[y].start,N=L[y].count,O=L[y].index;for(w=M,x=M+N;x>w;w+=3)A=O+c[w],B=O+c[w+1],C=O+c[w+2],b(A),b(B),b(C)}},computeOffsets:function(a){void 0===a&&(a=65535);for(var b=this.attributes.index.array,c=this.attributes.position.array,d=b.length/3,e=new Uint16Array(b.length),f=0,g=0,h=[{start:0,count:0,index:0}],i=h[0],j=0,k=0,l=new Int32Array(6),m=new Int32Array(c.length),n=new Int32Array(c.length),o=0;o<c.length;o++)m[o]=-1,n[o]=-1;for(var p=0;d>p;p++){k=0;for(var q=0;3>q;q++){var r=b[3*p+q];-1==m[r]?(l[2*q]=r,l[2*q+1]=-1,k++):m[r]<i.index?(l[2*q]=r,l[2*q+1]=-1,j++):(l[2*q]=r,l[2*q+1]=m[r])}var s=g+k;if(s>i.index+a){var t={start:f,count:0,index:g};h.push(t),i=t;for(var u=0;6>u;u+=2){var v=l[u+1];v>-1&&v<i.index&&(l[u+1]=-1)}}for(var u=0;6>u;u+=2){var r=l[u],v=l[u+1];-1===v&&(v=g++),m[r]=v,n[v]=r,e[f++]=v-i.index,i.count++}}return this.reorderBuffers(e,n,g),this.offsets=h,this.drawcalls=h,h},merge:function(a,b){if(a instanceof THREE.BufferGeometry==!1)return void THREE.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",a);void 0===b&&(b=0);var c=this.attributes;for(var d in c)if(void 0!==a.attributes[d])for(var e=c[d],f=e.array,g=a.attributes[d],h=g.array,i=g.itemSize,j=0,k=i*b;j<h.length;j++,k++)f[k]=h[j];return this},normalizeNormals:function(){for(var a,b,c,d,e=this.attributes.normal.array,f=0,g=e.length;g>f;f+=3)a=e[f],b=e[f+1],c=e[f+2],d=1/Math.sqrt(a*a+b*b+c*c),e[f]*=d,e[f+1]*=d,e[f+2]*=d},reorderBuffers:function(a,b,c){var d={};for(var e in this.attributes)if("index"!=e){var f=this.attributes[e].array;d[e]=new f.constructor(this.attributes[e].itemSize*c)}for(var g=0;c>g;g++){var h=b[g];for(var e in this.attributes)if("index"!=e)for(var i=this.attributes[e].array,j=this.attributes[e].itemSize,k=d[e],l=0;j>l;l++)k[g*j+l]=i[h*j+l]}this.attributes.index.array=a;for(var e in this.attributes)"index"!=e&&(this.attributes[e].array=d[e],this.attributes[e].numItems=this.attributes[e].itemSize*c)},toJSON:function(){var a={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type,data:{attributes:{}}},b=this.attributes,c=this.offsets,d=this.boundingSphere;for(var e in b){var f=b[e],g=Array.prototype.slice.call(f.array);a.data.attributes[e]={itemSize:f.itemSize,type:f.array.constructor.name,array:g}}return c.length>0&&(a.data.offsets=JSON.parse(JSON.stringify(c))),null!==d&&(a.data.boundingSphere={center:d.center.toArray(),radius:d.radius}),a},clone:function(){var a=new THREE.BufferGeometry;for(var b in this.attributes){var c=this.attributes[b];a.addAttribute(b,c.clone())}for(var d=0,e=this.offsets.length;e>d;d++){var f=this.offsets[d];a.offsets.push({start:f.start,index:f.index,count:f.count})}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.BufferGeometry.prototype),THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getNormalMatrix(a),c=0,d=this.vertices.length;d>c;c++){var e=this.vertices[c];e.applyMatrix4(a)}for(var c=0,d=this.faces.length;d>c;c++){var f=this.faces[c];f.normal.applyMatrix3(b).normalize();for(var g=0,h=f.vertexNormals.length;h>g;g++)f.vertexNormals[g].applyMatrix3(b).normalize()}null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0},fromBufferGeometry:function(a){for(var b=this,c=a.attributes,d=c.position.array,e=void 0!==c.index?c.index.array:void 0,f=void 0!==c.normal?c.normal.array:void 0,g=void 0!==c.color?c.color.array:void 0,h=void 0!==c.uv?c.uv.array:void 0,i=[],j=[],k=0,l=0;k<d.length;k+=3,l+=2)b.vertices.push(new THREE.Vector3(d[k],d[k+1],d[k+2])),void 0!==f&&i.push(new THREE.Vector3(f[k],f[k+1],f[k+2])),void 0!==g&&b.colors.push(new THREE.Color(g[k],g[k+1],g[k+2])),void 0!==h&&j.push(new THREE.Vector2(h[l],h[l+1]));var m=function(a,c,d){var e=void 0!==f?[i[a].clone(),i[c].clone(),i[d].clone()]:[],k=void 0!==g?[b.colors[a].clone(),b.colors[c].clone(),b.colors[d].clone()]:[];
b.faces.push(new THREE.Face3(a,c,d,e,k)),void 0!==h&&b.faceVertexUvs[0].push([j[a].clone(),j[c].clone(),j[d].clone()])};if(void 0!==e){var n=a.drawcalls;if(n.length>0)for(var k=0;k<n.length;k++)for(var o=n[k],p=o.start,q=o.count,r=o.index,l=p,s=p+q;s>l;l+=3)m(r+e[l],r+e[l+1],r+e[l+2]);else for(var k=0;k<e.length;k+=3)m(e[k],e[k+1],e[k+2])}else for(var k=0;k<d.length/3;k+=3)m(k,k+1,k+2);return this.computeFaceNormals(),null!==a.boundingBox&&(this.boundingBox=a.boundingBox.clone()),null!==a.boundingSphere&&(this.boundingSphere=a.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var a=this.boundingBox.center().negate();return this.applyMatrix((new THREE.Matrix4).setPosition(a)),a},computeFaceNormals:function(){for(var a=new THREE.Vector3,b=new THREE.Vector3,c=0,d=this.faces.length;d>c;c++){var e=this.faces[c],f=this.vertices[e.a],g=this.vertices[e.b],h=this.vertices[e.c];a.subVectors(h,g),b.subVectors(f,g),a.cross(b),a.normalize(),e.normal.copy(a)}},computeVertexNormals:function(a){var b,c,d,e,f,g;for(g=new Array(this.vertices.length),b=0,c=this.vertices.length;c>b;b++)g[b]=new THREE.Vector3;if(a){var h,i,j,k=new THREE.Vector3,l=new THREE.Vector3;for(d=0,e=this.faces.length;e>d;d++)f=this.faces[d],h=this.vertices[f.a],i=this.vertices[f.b],j=this.vertices[f.c],k.subVectors(j,i),l.subVectors(h,i),k.cross(l),g[f.a].add(k),g[f.b].add(k),g[f.c].add(k)}else for(d=0,e=this.faces.length;e>d;d++)f=this.faces[d],g[f.a].add(f.normal),g[f.b].add(f.normal),g[f.c].add(f.normal);for(b=0,c=this.vertices.length;c>b;b++)g[b].normalize();for(d=0,e=this.faces.length;e>d;d++)f=this.faces[d],f.vertexNormals[0]=g[f.a].clone(),f.vertexNormals[1]=g[f.b].clone(),f.vertexNormals[2]=g[f.c].clone()},computeMorphNormals:function(){var a,b,c,d,e;for(c=0,d=this.faces.length;d>c;c++)for(e=this.faces[c],e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]),a=0,b=e.vertexNormals.length;b>a;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone();var f=new THREE.Geometry;for(f.faces=this.faces,a=0,b=this.morphTargets.length;b>a;a++){if(!this.morphNormals[a]){this.morphNormals[a]={},this.morphNormals[a].faceNormals=[],this.morphNormals[a].vertexNormals=[];var g,h,i=this.morphNormals[a].faceNormals,j=this.morphNormals[a].vertexNormals;for(c=0,d=this.faces.length;d>c;c++)g=new THREE.Vector3,h={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},i.push(g),j.push(h)}var k=this.morphNormals[a];f.vertices=this.morphTargets[a].vertices,f.computeFaceNormals(),f.computeVertexNormals();var g,h;for(c=0,d=this.faces.length;d>c;c++)e=this.faces[c],g=k.faceNormals[c],h=k.vertexNormals[c],g.copy(e.normal),h.a.copy(e.vertexNormals[0]),h.b.copy(e.vertexNormals[1]),h.c.copy(e.vertexNormals[2])}for(c=0,d=this.faces.length;d>c;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,b,c,d,e,f,g){j=a.vertices[b],k=a.vertices[c],l=a.vertices[d],m=i[e],n=i[f],o=i[g],p=k.x-j.x,q=l.x-j.x,r=k.y-j.y,s=l.y-j.y,t=k.z-j.z,u=l.z-j.z,v=n.x-m.x,w=o.x-m.x,x=n.y-m.y,y=o.y-m.y,z=1/(v*y-w*x),F.set((y*p-x*q)*z,(y*r-x*s)*z,(y*t-x*u)*z),G.set((v*q-w*p)*z,(v*s-w*r)*z,(v*u-w*t)*z),D[b].add(F),D[c].add(F),D[d].add(F),E[b].add(G),E[c].add(G),E[d].add(G)}var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D=[],E=[],F=new THREE.Vector3,G=new THREE.Vector3,H=new THREE.Vector3,I=new THREE.Vector3,J=new THREE.Vector3;for(d=0,e=this.vertices.length;e>d;d++)D[d]=new THREE.Vector3,E[d]=new THREE.Vector3;for(b=0,c=this.faces.length;c>b;b++)h=this.faces[b],i=this.faceVertexUvs[0][b],a(this,h.a,h.b,h.c,0,1,2);var K=["a","b","c","d"];for(b=0,c=this.faces.length;c>b;b++)for(h=this.faces[b],f=0;f<Math.min(h.vertexNormals.length,3);f++)J.copy(h.vertexNormals[f]),g=h[K[f]],A=D[g],H.copy(A),H.sub(J.multiplyScalar(J.dot(A))).normalize(),I.crossVectors(h.vertexNormals[f],A),B=I.dot(E[g]),C=0>B?-1:1,h.vertexTangents[f]=new THREE.Vector4(H.x,H.y,H.z,C);this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;d>c;c++)c>0&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(a,b,c){if(a instanceof THREE.Geometry==!1)return void THREE.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",a);var d,e=this.vertices.length,f=this.vertices,g=a.vertices,h=this.faces,i=a.faces,j=this.faceVertexUvs[0],k=a.faceVertexUvs[0];void 0===c&&(c=0),void 0!==b&&(d=(new THREE.Matrix3).getNormalMatrix(b));for(var l=0,m=g.length;m>l;l++){var n=g[l],o=n.clone();void 0!==b&&o.applyMatrix4(b),f.push(o)}for(l=0,m=i.length;m>l;l++){var p,q,r,s=i[l],t=s.vertexNormals,u=s.vertexColors;p=new THREE.Face3(s.a+e,s.b+e,s.c+e),p.normal.copy(s.normal),void 0!==d&&p.normal.applyMatrix3(d).normalize();for(var v=0,w=t.length;w>v;v++)q=t[v].clone(),void 0!==d&&q.applyMatrix3(d).normalize(),p.vertexNormals.push(q);p.color.copy(s.color);for(var v=0,w=u.length;w>v;v++)r=u[v],p.vertexColors.push(r.clone());p.materialIndex=s.materialIndex+c,h.push(p)}for(l=0,m=k.length;m>l;l++){var x=k[l],y=[];if(void 0!==x){for(var v=0,w=x.length;w>v;v++)y.push(x[v].clone());j.push(y)}}},mergeMesh:function(a){return a instanceof THREE.Mesh==!1?void THREE.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",a):(a.matrixAutoUpdate&&a.updateMatrix(),void this.merge(a.geometry,a.matrix))},mergeVertices:function(){var a,b,c,d,e,f,g,h,i={},j=[],k=[],l=4,m=Math.pow(10,l);for(c=0,d=this.vertices.length;d>c;c++)a=this.vertices[c],b=Math.round(a.x*m)+"_"+Math.round(a.y*m)+"_"+Math.round(a.z*m),void 0===i[b]?(i[b]=c,j.push(this.vertices[c]),k[c]=j.length-1):k[c]=k[i[b]];var n=[];for(c=0,d=this.faces.length;d>c;c++){e=this.faces[c],e.a=k[e.a],e.b=k[e.b],e.c=k[e.c],f=[e.a,e.b,e.c];for(var o=-1,p=0;3>p;p++)if(f[p]==f[(p+1)%3]){o=p,n.push(c);break}}for(c=n.length-1;c>=0;c--){var q=n[c];for(this.faces.splice(q,1),g=0,h=this.faceVertexUvs.length;h>g;g++)this.faceVertexUvs[g].splice(q,1)}var r=this.vertices.length-j.length;return this.vertices=j,r},toJSON:function(){function a(a,b,c){return c?a|1<<b:a&~(1<<b)}function b(a){var b=a.x.toString()+a.y.toString()+a.z.toString();return void 0!==m[b]?m[b]:(m[b]=l.length/3,l.push(a.x,a.y,a.z),m[b])}function c(a){var b=a.r.toString()+a.g.toString()+a.b.toString();return void 0!==o[b]?o[b]:(o[b]=n.length,n.push(a.getHex()),o[b])}function d(a){var b=a.x.toString()+a.y.toString();return void 0!==q[b]?q[b]:(q[b]=p.length/2,p.push(a.x,a.y),q[b])}var e={metadata:{version:4,type:"BufferGeometry",generator:"BufferGeometryExporter"},uuid:this.uuid,type:this.type};if(""!==this.name&&(e.name=this.name),void 0!==this.parameters){var f=this.parameters;for(var g in f)void 0!==f[g]&&(e[g]=f[g]);return e}for(var h=[],i=0;i<this.vertices.length;i++){var j=this.vertices[i];h.push(j.x,j.y,j.z)}for(var k=[],l=[],m={},n=[],o={},p=[],q={},i=0;i<this.faces.length;i++){var r=this.faces[i],s=!1,t=!1,u=void 0!==this.faceVertexUvs[0][i],v=r.normal.length()>0,w=r.vertexNormals.length>0,x=1!==r.color.r||1!==r.color.g||1!==r.color.b,y=r.vertexColors.length>0,z=0;if(z=a(z,0,0),z=a(z,1,s),z=a(z,2,t),z=a(z,3,u),z=a(z,4,v),z=a(z,5,w),z=a(z,6,x),z=a(z,7,y),k.push(z),k.push(r.a,r.b,r.c),u){var A=this.faceVertexUvs[0][i];k.push(d(A[0]),d(A[1]),d(A[2]))}if(v&&k.push(b(r.normal)),w){var B=r.vertexNormals;k.push(b(B[0]),b(B[1]),b(B[2]))}if(x&&k.push(c(r.color)),y){var C=r.vertexColors;k.push(c(C[0]),c(C[1]),c(C[2]))}}return e.data={},e.data.vertices=h,e.data.normals=l,n.length>0&&(e.data.colors=n),p.length>0&&(e.data.uvs=[p]),e.data.faces=k,e},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;d>c;c++)a.vertices.push(b[c].clone());for(var e=this.faces,c=0,d=e.length;d>c;c++)a.faces.push(e[c].clone());for(var c=0,d=this.faceVertexUvs.length;d>c;c++){var f=this.faceVertexUvs[c];void 0===a.faceVertexUvs[c]&&(a.faceVertexUvs[c]=[]);for(var g=0,h=f.length;h>g;g++){for(var i=f[g],j=[],k=0,l=i.length;l>k;k++){var m=i[k];j.push(m.clone())}a.faceVertexUvs[c].push(j)}}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Geometry.prototype),THREE.GeometryIdCount=0,THREE.Camera=function(){THREE.Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.constructor=THREE.Camera,THREE.Camera.prototype.getWorldDirection=function(){var a=new THREE.Quaternion;return function(b){var c=b||new THREE.Vector3;return this.getWorldQuaternion(a),c.set(0,0,-1).applyQuaternion(a)}}(),THREE.Camera.prototype.lookAt=function(){var a=new THREE.Matrix4;return function(b){a.lookAt(this.position,b,this.up),this.quaternion.setFromRotationMatrix(a)}}(),THREE.Camera.prototype.clone=function(a){return void 0===a&&(a=new THREE.Camera),THREE.Object3D.prototype.clone.call(this,a),a.matrixWorldInverse.copy(this.matrixWorldInverse),a.projectionMatrix.copy(this.projectionMatrix),a},THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this),this.type="CubeCamera";var d=90,e=1,f=new THREE.PerspectiveCamera(d,e,a,b);f.up.set(0,-1,0),f.lookAt(new THREE.Vector3(1,0,0)),this.add(f);var g=new THREE.PerspectiveCamera(d,e,a,b);g.up.set(0,-1,0),g.lookAt(new THREE.Vector3(-1,0,0)),this.add(g);var h=new THREE.PerspectiveCamera(d,e,a,b);h.up.set(0,0,1),h.lookAt(new THREE.Vector3(0,1,0)),this.add(h);var i=new THREE.PerspectiveCamera(d,e,a,b);i.up.set(0,0,-1),i.lookAt(new THREE.Vector3(0,-1,0)),this.add(i);var j=new THREE.PerspectiveCamera(d,e,a,b);j.up.set(0,-1,0),j.lookAt(new THREE.Vector3(0,0,1)),this.add(j);var k=new THREE.PerspectiveCamera(d,e,a,b);k.up.set(0,-1,0),k.lookAt(new THREE.Vector3(0,0,-1)),this.add(k),this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(a,b){var c=this.renderTarget,d=c.generateMipmaps;c.generateMipmaps=!1,c.activeCubeFace=0,a.render(b,f,c),c.activeCubeFace=1,a.render(b,g,c),c.activeCubeFace=2,a.render(b,h,c),c.activeCubeFace=3,a.render(b,i,c),c.activeCubeFace=4,a.render(b,j,c),c.generateMipmaps=d,c.activeCubeFace=5,a.render(b,k,c)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CubeCamera.prototype.constructor=THREE.CubeCamera,THREE.OrthographicCamera=function(a,b,c,d,e,f){THREE.Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.left=a,this.right=b,this.top=c,this.bottom=d,this.near=void 0!==e?e:.1,this.far=void 0!==f?f:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera,THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var a=(this.right-this.left)/(2*this.zoom),b=(this.top-this.bottom)/(2*this.zoom),c=(this.right+this.left)/2,d=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(c-a,c+a,d+b,d-b,this.near,this.far)},THREE.OrthographicCamera.prototype.clone=function(){var a=new THREE.OrthographicCamera;return THREE.Camera.prototype.clone.call(this,a),a.zoom=this.zoom,a.left=this.left,a.right=this.right,a.top=this.top,a.bottom=this.bottom,a.near=this.near,a.far=this.far,a.projectionMatrix.copy(this.projectionMatrix),a},THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this),this.type="PerspectiveCamera",this.zoom=1,this.fov=void 0!==a?a:50,this.aspect=void 0!==b?b:1,this.near=void 0!==c?c:.1,this.far=void 0!==d?d:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera,THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24),this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){this.fullWidth=a,this.fullHeight=b,this.x=c,this.y=d,this.width=e,this.height=f,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var a=THREE.Math.radToDeg(2*Math.atan(Math.tan(.5*THREE.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var b=this.fullWidth/this.fullHeight,c=Math.tan(THREE.Math.degToRad(.5*a))*this.near,d=-c,e=b*d,f=b*c,g=Math.abs(f-e),h=Math.abs(c-d);this.projectionMatrix.makeFrustum(e+this.x*g/this.fullWidth,e+(this.x+this.width)*g/this.fullWidth,c-(this.y+this.height)*h/this.fullHeight,c-this.y*h/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(a,this.aspect,this.near,this.far)},THREE.PerspectiveCamera.prototype.clone=function(){var a=new THREE.PerspectiveCamera;return THREE.Camera.prototype.clone.call(this,a),a.zoom=this.zoom,a.fov=this.fov,a.aspect=this.aspect,a.near=this.near,a.far=this.far,a.projectionMatrix.copy(this.projectionMatrix),a},THREE.Light=function(a){THREE.Object3D.call(this),this.type="Light",this.color=new THREE.Color(a)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.Light.prototype.constructor=THREE.Light,THREE.Light.prototype.clone=function(a){return void 0===a&&(a=new THREE.Light),THREE.Object3D.prototype.clone.call(this,a),a.color.copy(this.color),a},THREE.AmbientLight=function(a){THREE.Light.call(this,a),this.type="AmbientLight"},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AmbientLight.prototype.constructor=THREE.AmbientLight,THREE.AmbientLight.prototype.clone=function(){var a=new THREE.AmbientLight;return THREE.Light.prototype.clone.call(this,a),a},THREE.AreaLight=function(a,b){THREE.Light.call(this,a),this.type="AreaLight",this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==b?b:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.AreaLight.prototype.constructor=THREE.AreaLight,THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a),this.type="DirectionalLight",this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==b?b:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight,THREE.DirectionalLight.prototype.clone=function(){var a=new THREE.DirectionalLight;return THREE.Light.prototype.clone.call(this,a),a.target=this.target.clone(),a.intensity=this.intensity,a.castShadow=this.castShadow,a.onlyShadow=this.onlyShadow,a.shadowCameraNear=this.shadowCameraNear,a.shadowCameraFar=this.shadowCameraFar,a.shadowCameraLeft=this.shadowCameraLeft,a.shadowCameraRight=this.shadowCameraRight,a.shadowCameraTop=this.shadowCameraTop,a.shadowCameraBottom=this.shadowCameraBottom,a.shadowCameraVisible=this.shadowCameraVisible,a.shadowBias=this.shadowBias,a.shadowDarkness=this.shadowDarkness,a.shadowMapWidth=this.shadowMapWidth,a.shadowMapHeight=this.shadowMapHeight,a.shadowCascade=this.shadowCascade,a.shadowCascadeOffset.copy(this.shadowCascadeOffset),a.shadowCascadeCount=this.shadowCascadeCount,a.shadowCascadeBias=this.shadowCascadeBias.slice(0),a.shadowCascadeWidth=this.shadowCascadeWidth.slice(0),a.shadowCascadeHeight=this.shadowCascadeHeight.slice(0),a.shadowCascadeNearZ=this.shadowCascadeNearZ.slice(0),a.shadowCascadeFarZ=this.shadowCascadeFarZ.slice(0),a},THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a),this.type="HemisphereLight",this.position.set(0,100,0),this.groundColor=new THREE.Color(b),this.intensity=void 0!==c?c:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight.prototype.constructor=THREE.HemisphereLight,THREE.HemisphereLight.prototype.clone=function(){var a=new THREE.HemisphereLight;return THREE.Light.prototype.clone.call(this,a),a.groundColor.copy(this.groundColor),a.intensity=this.intensity,a},THREE.PointLight=function(a,b,c,d){THREE.Light.call(this,a),this.type="PointLight",this.intensity=void 0!==b?b:1,this.distance=void 0!==c?c:0,this.decay=void 0!==d?d:1},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight.prototype.constructor=THREE.PointLight,THREE.PointLight.prototype.clone=function(){var a=new THREE.PointLight;return THREE.Light.prototype.clone.call(this,a),a.intensity=this.intensity,a.distance=this.distance,a.decay=this.decay,a},THREE.SpotLight=function(a,b,c,d,e,f){THREE.Light.call(this,a),this.type="SpotLight",this.position.set(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==b?b:1,this.distance=void 0!==c?c:0,this.angle=void 0!==d?d:Math.PI/3,this.exponent=void 0!==e?e:10,this.decay=void 0!==f?f:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight.prototype.constructor=THREE.SpotLight,THREE.SpotLight.prototype.clone=function(){var a=new THREE.SpotLight;return THREE.Light.prototype.clone.call(this,a),a.target=this.target.clone(),a.intensity=this.intensity,a.distance=this.distance,a.angle=this.angle,a.exponent=this.exponent,a.decay=this.decay,a.castShadow=this.castShadow,a.onlyShadow=this.onlyShadow,a.shadowCameraNear=this.shadowCameraNear,a.shadowCameraFar=this.shadowCameraFar,a.shadowCameraFov=this.shadowCameraFov,a.shadowCameraVisible=this.shadowCameraVisible,a.shadowBias=this.shadowBias,a.shadowDarkness=this.shadowDarkness,a.shadowMapWidth=this.shadowMapWidth,a.shadowMapHeight=this.shadowMapHeight,a},THREE.Cache={files:{},add:function(a,b){this.files[a]=b},get:function(a){return this.files[a]},remove:function(a){delete this.files[a]},clear:function(){this.files={}}},THREE.Loader=function(a){this.showStatus=a,this.statusDomElement=a?THREE.Loader.prototype.addStatusElement():null,this.imageLoader=new THREE.ImageLoader,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:void 0,addStatusElement:function(){var a=document.createElement("div");return a.style.position="absolute",a.style.right="0px",a.style.top="0px",a.style.fontSize="0.8em",a.style.textAlign="left",a.style.background="rgba(0,0,0,0.25)",a.style.color="#fff",a.style.width="120px",a.style.padding="0.5em 0.5em 0.5em 0.5em",a.style.zIndex=1e3,a.innerHTML="Loading ...",a},updateProgress:function(a){var b="Loaded ";b+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1024).toFixed(2)+" KB",this.statusDomElement.innerHTML=b},extractUrlBase:function(a){var b=a.split("/");return 1===b.length?"./":(b.pop(),b.join("/")+"/")},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=this.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;c>b;b++){var d=a[b];if(d instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(a,b){function c(a){var b=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(b))}function d(a,d,e,g,h,i,j){var k,l=b+e,m=THREE.Loader.Handlers.get(l);if(null!==m?k=m.load(l):(k=new THREE.Texture,m=f.imageLoader,m.crossOrigin=f.crossOrigin,m.load(l,function(a){if(THREE.Math.isPowerOfTwo(a.width)===!1||THREE.Math.isPowerOfTwo(a.height)===!1){var b=c(a.width),d=c(a.height),e=document.createElement("canvas");e.width=b,e.height=d;var f=e.getContext("2d");f.drawImage(a,0,0,b,d),k.image=e}else k.image=a;k.needsUpdate=!0})),k.sourceFile=e,g&&(k.repeat.set(g[0],g[1]),1!==g[0]&&(k.wrapS=THREE.RepeatWrapping),1!==g[1]&&(k.wrapT=THREE.RepeatWrapping)),h&&k.offset.set(h[0],h[1]),i){var n={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==n[i[0]]&&(k.wrapS=n[i[0]]),void 0!==n[i[1]]&&(k.wrapT=n[i[1]])}j&&(k.anisotropy=j),a[d]=k}function e(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var f=this,g="MeshLambertMaterial",h={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var i=a.shading.toLowerCase();"phong"===i?g="MeshPhongMaterial":"basic"===i&&(g="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(h.blending=THREE[a.blending]),void 0!==a.transparent&&(h.transparent=a.transparent),void 0!==a.opacity&&a.opacity<1&&(h.transparent=!0),void 0!==a.depthTest&&(h.depthTest=a.depthTest),void 0!==a.depthWrite&&(h.depthWrite=a.depthWrite),void 0!==a.visible&&(h.visible=a.visible),void 0!==a.flipSided&&(h.side=THREE.BackSide),void 0!==a.doubleSided&&(h.side=THREE.DoubleSide),void 0!==a.wireframe&&(h.wireframe=a.wireframe),void 0!==a.vertexColors&&("face"===a.vertexColors?h.vertexColors=THREE.FaceColors:a.vertexColors&&(h.vertexColors=THREE.VertexColors)),a.colorDiffuse?h.color=e(a.colorDiffuse):a.DbgColor&&(h.color=a.DbgColor),a.colorSpecular&&(h.specular=e(a.colorSpecular)),a.colorEmissive&&(h.emissive=e(a.colorEmissive)),void 0!==a.transparency&&(console.warn("THREE.Loader: transparency has been renamed to opacity"),a.opacity=a.transparency),void 0!==a.opacity&&(h.opacity=a.opacity),a.specularCoef&&(h.shininess=a.specularCoef),a.mapDiffuse&&b&&d(h,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy),a.mapLight&&b&&d(h,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy),a.mapBump&&b&&d(h,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy),a.mapNormal&&b&&d(h,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy),a.mapSpecular&&b&&d(h,"specularMap",a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy),a.mapAlpha&&b&&d(h,"alphaMap",a.mapAlpha,a.mapAlphaRepeat,a.mapAlphaOffset,a.mapAlphaWrap,a.mapAlphaAnisotropy),a.mapBumpScale&&(h.bumpScale=a.mapBumpScale),a.mapNormalFactor&&(h.normalScale=new THREE.Vector2(a.mapNormalFactor,a.mapNormalFactor));var j=new THREE[g](h);return void 0!==a.DbgName&&(j.name=a.DbgName),j}},THREE.Loader.Handlers={handlers:[],add:function(a,b){this.handlers.push(a,b)},get:function(a){for(var b=0,c=this.handlers.length;c>b;b+=2){var d=this.handlers[b],e=this.handlers[b+1];if(d.test(a))return e}return null}},THREE.XHRLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.XHRLoader.prototype={constructor:THREE.XHRLoader,load:function(a,b,c,d){var e=this,f=THREE.Cache.get(a);if(void 0!==f)return void(b&&b(f));var g=new XMLHttpRequest;g.open("GET",a,!0),g.addEventListener("load",function(c){THREE.Cache.add(a,this.response),b&&b(this.response),e.manager.itemEnd(a)},!1),void 0!==c&&g.addEventListener("progress",function(a){c(a)},!1),void 0!==d&&g.addEventListener("error",function(a){d(a)},!1),void 0!==this.crossOrigin&&(g.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(g.responseType=this.responseType),g.send(null),e.manager.itemStart(a)},setResponseType:function(a){this.responseType=a},setCrossOrigin:function(a){this.crossOrigin=a}},THREE.ImageLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b,c,d){var e=this,f=THREE.Cache.get(a);if(void 0!==f)return void b(f);var g=document.createElement("img");return g.addEventListener("load",function(c){THREE.Cache.add(a,this),b&&b(this),e.manager.itemEnd(a)},!1),void 0!==c&&g.addEventListener("progress",function(a){c(a)},!1),void 0!==d&&g.addEventListener("error",function(a){d(a)},!1),void 0!==this.crossOrigin&&(g.crossOrigin=this.crossOrigin),g.src=a,e.manager.itemStart(a),g},setCrossOrigin:function(a){this.crossOrigin=a}},THREE.JSONLoader=function(a){THREE.Loader.call(this,a),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.constructor=THREE.JSONLoader,THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"==typeof c?c:this.extractUrlBase(a),this.onLoadStart(),this.loadAjaxJSON(this,a,b,c)},THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(200===f.status||0===f.status){if(f.responseText){var h=JSON.parse(f.responseText),i=h.metadata;if(void 0!==i){if("object"===i.type)return void THREE.error("THREE.JSONLoader: "+b+" should be loaded with THREE.ObjectLoader instead.");if("scene"===i.type)return void THREE.error("THREE.JSONLoader: "+b+" seems to be a Scene. Use THREE.SceneLoader instead.")}var j=a.parse(h,d);c(j.geometry,j.materials)}else THREE.error("THREE.JSONLoader: "+b+" seems to be unreachable or the file is empty.");a.onLoadComplete()}else THREE.error("THREE.JSONLoader: Couldn't load "+b+" ("+f.status+")");else f.readyState===f.LOADING?e&&(0===g&&(g=f.getResponseHeader("Content-Length")),e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&void 0!==e&&(g=f.getResponseHeader("Content-Length"))},f.open("GET",b,!0),f.withCredentials=this.withCredentials,f.send(null)},THREE.JSONLoader.prototype.parse=function(a,b){function c(b){function c(a,b){return a&1<<b}var d,e,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F=a.faces,G=a.vertices,H=a.normals,I=a.colors,J=0;if(void 0!==a.uvs){for(d=0;d<a.uvs.length;d++)a.uvs[d].length&&J++;for(d=0;J>d;d++)f.faceVertexUvs[d]=[]}for(h=0,i=G.length;i>h;)v=new THREE.Vector3,v.x=G[h++]*b,v.y=G[h++]*b,v.z=G[h++]*b,f.vertices.push(v);for(h=0,i=F.length;i>h;)if(n=F[h++],o=c(n,0),p=c(n,1),q=c(n,3),r=c(n,4),s=c(n,5),t=c(n,6),u=c(n,7),o){if(x=new THREE.Face3,x.a=F[h],x.b=F[h+1],x.c=F[h+3],y=new THREE.Face3,y.a=F[h+1],y.b=F[h+2],y.c=F[h+3],h+=4,p&&(m=F[h++],x.materialIndex=m,y.materialIndex=m),g=f.faces.length,q)for(d=0;J>d;d++)for(B=a.uvs[d],f.faceVertexUvs[d][g]=[],f.faceVertexUvs[d][g+1]=[],e=0;4>e;e++)l=F[h++],D=B[2*l],E=B[2*l+1],C=new THREE.Vector2(D,E),2!==e&&f.faceVertexUvs[d][g].push(C),0!==e&&f.faceVertexUvs[d][g+1].push(C);if(r&&(k=3*F[h++],x.normal.set(H[k++],H[k++],H[k]),y.normal.copy(x.normal)),s)for(d=0;4>d;d++)k=3*F[h++],A=new THREE.Vector3(H[k++],H[k++],H[k]),2!==d&&x.vertexNormals.push(A),0!==d&&y.vertexNormals.push(A);if(t&&(j=F[h++],z=I[j],x.color.setHex(z),y.color.setHex(z)),u)for(d=0;4>d;d++)j=F[h++],z=I[j],2!==d&&x.vertexColors.push(new THREE.Color(z)),0!==d&&y.vertexColors.push(new THREE.Color(z));f.faces.push(x),f.faces.push(y)}else{if(w=new THREE.Face3,w.a=F[h++],w.b=F[h++],w.c=F[h++],p&&(m=F[h++],w.materialIndex=m),g=f.faces.length,q)for(d=0;J>d;d++)for(B=a.uvs[d],f.faceVertexUvs[d][g]=[],e=0;3>e;e++)l=F[h++],D=B[2*l],E=B[2*l+1],C=new THREE.Vector2(D,E),f.faceVertexUvs[d][g].push(C);if(r&&(k=3*F[h++],w.normal.set(H[k++],H[k++],H[k])),s)for(d=0;3>d;d++)k=3*F[h++],A=new THREE.Vector3(H[k++],H[k++],H[k]),w.vertexNormals.push(A);if(t&&(j=F[h++],w.color.setHex(I[j])),u)for(d=0;3>d;d++)j=F[h++],w.vertexColors.push(new THREE.Color(I[j]));f.faces.push(w)}}function d(){var b=void 0!==a.influencesPerVertex?a.influencesPerVertex:2;if(a.skinWeights)for(var c=0,d=a.skinWeights.length;d>c;c+=b){var e=a.skinWeights[c],g=b>1?a.skinWeights[c+1]:0,h=b>2?a.skinWeights[c+2]:0,i=b>3?a.skinWeights[c+3]:0;f.skinWeights.push(new THREE.Vector4(e,g,h,i))}if(a.skinIndices)for(var c=0,d=a.skinIndices.length;d>c;c+=b){var j=a.skinIndices[c],k=b>1?a.skinIndices[c+1]:0,l=b>2?a.skinIndices[c+2]:0,m=b>3?a.skinIndices[c+3]:0;f.skinIndices.push(new THREE.Vector4(j,k,l,m))}f.bones=a.bones,f.bones&&f.bones.length>0&&(f.skinWeights.length!==f.skinIndices.length||f.skinIndices.length!==f.vertices.length)&&THREE.warn("THREE.JSONLoader: When skinning, number of vertices ("+f.vertices.length+"), skinIndices ("+f.skinIndices.length+"), and skinWeights ("+f.skinWeights.length+") should match."),f.animation=a.animation,f.animations=a.animations}function e(b){if(void 0!==a.morphTargets){var c,d,e,g,h,i;for(c=0,d=a.morphTargets.length;d>c;c++)for(f.morphTargets[c]={},f.morphTargets[c].name=a.morphTargets[c].name,f.morphTargets[c].vertices=[],h=f.morphTargets[c].vertices,i=a.morphTargets[c].vertices,e=0,g=i.length;g>e;e+=3){var j=new THREE.Vector3;j.x=i[e]*b,j.y=i[e+1]*b,j.z=i[e+2]*b,h.push(j)}}if(void 0!==a.morphColors){var c,d,k,l,m,n,o;for(c=0,d=a.morphColors.length;d>c;c++)for(f.morphColors[c]={},f.morphColors[c].name=a.morphColors[c].name,f.morphColors[c].colors=[],m=f.morphColors[c].colors,n=a.morphColors[c].colors,k=0,l=n.length;l>k;k+=3)o=new THREE.Color(16755200),o.setRGB(n[k],n[k+1],n[k+2]),m.push(o)}}var f=new THREE.Geometry,g=void 0!==a.scale?1/a.scale:1;if(c(g),d(),e(g),f.computeFaceNormals(),f.computeBoundingSphere(),void 0===a.materials||0===a.materials.length)return{geometry:f};var h=this.initMaterials(a.materials,b);return this.needsTangents(h)&&f.computeTangents(),{geometry:f,materials:h}},THREE.LoadingManager=function(a,b,c){var d=this,e=0,f=0;this.onLoad=a,this.onProgress=b,this.onError=c,this.itemStart=function(a){f++},this.itemEnd=function(a){e++,void 0!==d.onProgress&&d.onProgress(a,e,f),e===f&&void 0!==d.onLoad&&d.onLoad()}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.BufferGeometryLoader.prototype={constructor:THREE.BufferGeometryLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader(e.manager);f.setCrossOrigin(this.crossOrigin),f.load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE.BufferGeometry,c=a.data.attributes;for(var d in c){var e=c[d],f=new self[e.type](e.array);b.addAttribute(d,new THREE.BufferAttribute(f,e.itemSize))}var g=a.data.offsets;void 0!==g&&(b.offsets=JSON.parse(JSON.stringify(g)));var h=a.data.boundingSphere;if(void 0!==h){var i=new THREE.Vector3;void 0!==h.center&&i.fromArray(h.center),b.boundingSphere=new THREE.Sphere(i,h.radius)}return b}},THREE.MaterialLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.MaterialLoader.prototype={constructor:THREE.MaterialLoader,load:function(a,b,c,d){var e=this,f=new THREE.XHRLoader(e.manager);f.setCrossOrigin(this.crossOrigin),f.load(a,function(a){b(e.parse(JSON.parse(a)))},c,d)},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a){var b=new THREE[a.type];if(void 0!==a.color&&b.color.setHex(a.color),void 0!==a.emissive&&b.emissive.setHex(a.emissive),void 0!==a.specular&&b.specular.setHex(a.specular),void 0!==a.shininess&&(b.shininess=a.shininess),void 0!==a.uniforms&&(b.uniforms=a.uniforms),void 0!==a.vertexShader&&(b.vertexShader=a.vertexShader),void 0!==a.fragmentShader&&(b.fragmentShader=a.fragmentShader),void 0!==a.vertexColors&&(b.vertexColors=a.vertexColors),void 0!==a.shading&&(b.shading=a.shading),void 0!==a.blending&&(b.blending=a.blending),
void 0!==a.side&&(b.side=a.side),void 0!==a.opacity&&(b.opacity=a.opacity),void 0!==a.transparent&&(b.transparent=a.transparent),void 0!==a.wireframe&&(b.wireframe=a.wireframe),void 0!==a.size&&(b.size=a.size),void 0!==a.sizeAttenuation&&(b.sizeAttenuation=a.sizeAttenuation),void 0!==a.materials)for(var c=0,d=a.materials.length;d>c;c++)b.materials.push(this.parse(a.materials[c]));return b}},THREE.ObjectLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager,this.texturePath=""},THREE.ObjectLoader.prototype={constructor:THREE.ObjectLoader,load:function(a,b,c,d){""===this.texturePath&&(this.texturePath=a.substring(0,a.lastIndexOf("/")+1));var e=this,f=new THREE.XHRLoader(e.manager);f.setCrossOrigin(this.crossOrigin),f.load(a,function(a){e.parse(JSON.parse(a),b)},c,d)},setTexturePath:function(a){this.texturePath=a},setCrossOrigin:function(a){this.crossOrigin=a},parse:function(a,b){var c=this.parseGeometries(a.geometries),d=this.parseImages(a.images,function(){void 0!==b&&b(g)}),e=this.parseTextures(a.textures,d),f=this.parseMaterials(a.materials,e),g=this.parseObject(a.object,c,f);return(void 0===a.images||0===a.images.length)&&void 0!==b&&b(g),g},parseGeometries:function(a){var b={};if(void 0!==a)for(var c=new THREE.JSONLoader,d=new THREE.BufferGeometryLoader,e=0,f=a.length;f>e;e++){var g,h=a[e];switch(h.type){case"PlaneGeometry":case"PlaneBufferGeometry":g=new THREE[h.type](h.width,h.height,h.widthSegments,h.heightSegments);break;case"BoxGeometry":case"CubeGeometry":g=new THREE.BoxGeometry(h.width,h.height,h.depth,h.widthSegments,h.heightSegments,h.depthSegments);break;case"CircleGeometry":g=new THREE.CircleGeometry(h.radius,h.segments);break;case"CylinderGeometry":g=new THREE.CylinderGeometry(h.radiusTop,h.radiusBottom,h.height,h.radialSegments,h.heightSegments,h.openEnded);break;case"SphereGeometry":g=new THREE.SphereGeometry(h.radius,h.widthSegments,h.heightSegments,h.phiStart,h.phiLength,h.thetaStart,h.thetaLength);break;case"IcosahedronGeometry":g=new THREE.IcosahedronGeometry(h.radius,h.detail);break;case"TorusGeometry":g=new THREE.TorusGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.arc);break;case"TorusKnotGeometry":g=new THREE.TorusKnotGeometry(h.radius,h.tube,h.radialSegments,h.tubularSegments,h.p,h.q,h.heightScale);break;case"BufferGeometry":g=d.parse(h);break;case"Geometry":g=c.parse(h.data).geometry}g.uuid=h.uuid,void 0!==h.name&&(g.name=h.name),b[h.uuid]=g}return b},parseMaterials:function(a,b){var c={};if(void 0!==a)for(var d=function(a){return void 0===b[a]&&THREE.warn("THREE.ObjectLoader: Undefined texture",a),b[a]},e=new THREE.MaterialLoader,f=0,g=a.length;g>f;f++){var h=a[f],i=e.parse(h);i.uuid=h.uuid,void 0!==h.name&&(i.name=h.name),void 0!==h.map&&(i.map=d(h.map)),void 0!==h.bumpMap&&(i.bumpMap=d(h.bumpMap),h.bumpScale&&(i.bumpScale=new THREE.Vector2(h.bumpScale,h.bumpScale))),void 0!==h.alphaMap&&(i.alphaMap=d(h.alphaMap)),void 0!==h.envMap&&(i.envMap=d(h.envMap)),void 0!==h.normalMap&&(i.normalMap=d(h.normalMap),h.normalScale&&(i.normalScale=new THREE.Vector2(h.normalScale,h.normalScale))),void 0!==h.lightMap&&(i.lightMap=d(h.lightMap)),void 0!==h.specularMap&&(i.specularMap=d(h.specularMap)),c[h.uuid]=i}return c},parseImages:function(a,b){var c=this,d={};if(void 0!==a&&a.length>0){var e=new THREE.LoadingManager(b),f=new THREE.ImageLoader(e);f.setCrossOrigin(this.crossOrigin);for(var g=function(a){return c.manager.itemStart(a),f.load(a,function(){c.manager.itemEnd(a)})},h=0,i=a.length;i>h;h++){var j=a[h],k=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(j.url)?j.url:c.texturePath+j.url;d[j.uuid]=g(k)}}return d},parseTextures:function(a,b){var c={};if(void 0!==a)for(var d=0,e=a.length;e>d;d++){var f=a[d];void 0===f.image&&THREE.warn('THREE.ObjectLoader: No "image" speficied for',f.uuid),void 0===b[f.image]&&THREE.warn("THREE.ObjectLoader: Undefined image",f.image);var g=new THREE.Texture(b[f.image]);g.needsUpdate=!0,g.uuid=f.uuid,void 0!==f.name&&(g.name=f.name),void 0!==f.repeat&&(g.repeat=new THREE.Vector2(f.repeat[0],f.repeat[1])),void 0!==f.minFilter&&(g.minFilter=THREE[f.minFilter]),void 0!==f.magFilter&&(g.magFilter=THREE[f.magFilter]),void 0!==f.anisotropy&&(g.anisotropy=f.anisotropy),f.wrap instanceof Array&&(g.wrapS=THREE[f.wrap[0]],g.wrapT=THREE[f.wrap[1]]),c[f.uuid]=g}return c},parseObject:function(){var a=new THREE.Matrix4;return function(b,c,d){var e,f=function(a){return void 0===c[a]&&THREE.warn("THREE.ObjectLoader: Undefined geometry",a),c[a]},g=function(a){return void 0===d[a]&&THREE.warn("THREE.ObjectLoader: Undefined material",a),d[a]};switch(b.type){case"Scene":e=new THREE.Scene;break;case"PerspectiveCamera":e=new THREE.PerspectiveCamera(b.fov,b.aspect,b.near,b.far);break;case"OrthographicCamera":e=new THREE.OrthographicCamera(b.left,b.right,b.top,b.bottom,b.near,b.far);break;case"AmbientLight":e=new THREE.AmbientLight(b.color);break;case"DirectionalLight":e=new THREE.DirectionalLight(b.color,b.intensity);break;case"PointLight":e=new THREE.PointLight(b.color,b.intensity,b.distance,b.decay);break;case"SpotLight":e=new THREE.SpotLight(b.color,b.intensity,b.distance,b.angle,b.exponent,b.decay);break;case"HemisphereLight":e=new THREE.HemisphereLight(b.color,b.groundColor,b.intensity);break;case"Mesh":e=new THREE.Mesh(f(b.geometry),g(b.material));break;case"Line":e=new THREE.Line(f(b.geometry),g(b.material),b.mode);break;case"PointCloud":e=new THREE.PointCloud(f(b.geometry),g(b.material));break;case"Sprite":e=new THREE.Sprite(g(b.material));break;case"Group":e=new THREE.Group;break;default:e=new THREE.Object3D}if(e.uuid=b.uuid,void 0!==b.name&&(e.name=b.name),void 0!==b.matrix?(a.fromArray(b.matrix),a.decompose(e.position,e.quaternion,e.scale)):(void 0!==b.position&&e.position.fromArray(b.position),void 0!==b.rotation&&e.rotation.fromArray(b.rotation),void 0!==b.scale&&e.scale.fromArray(b.scale)),void 0!==b.visible&&(e.visible=b.visible),void 0!==b.userData&&(e.userData=b.userData),void 0!==b.children)for(var h in b.children)e.add(this.parseObject(b.children[h],c,d));return e}}()},THREE.TextureLoader=function(a){this.manager=void 0!==a?a:THREE.DefaultLoadingManager},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a,b,c,d){var e=this,f=new THREE.ImageLoader(e.manager);f.setCrossOrigin(this.crossOrigin),f.load(a,function(a){var c=new THREE.Texture(a);c.needsUpdate=!0,void 0!==b&&b(c)},c,d)},setCrossOrigin:function(a){this.crossOrigin=a}},THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(){this._parser=null},THREE.BinaryTextureLoader.prototype={constructor:THREE.BinaryTextureLoader,load:function(a,b,c,d){var e=this,f=new THREE.DataTexture,g=new THREE.XHRLoader;return g.setResponseType("arraybuffer"),g.load(a,function(a){var c=e._parser(a);c&&(void 0!==c.image?f.image=c.image:void 0!==c.data&&(f.image.width=c.width,f.image.height=c.height,f.image.data=c.data),f.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping,f.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping,f.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter,f.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter,f.anisotropy=void 0!==c.anisotropy?c.anisotropy:1,void 0!==c.format&&(f.format=c.format),void 0!==c.type&&(f.type=c.type),void 0!==c.mipmaps&&(f.mipmaps=c.mipmaps),1===c.mipmapCount&&(f.minFilter=THREE.LinearFilter),f.needsUpdate=!0,b&&b(f,c))},c,d),f}},THREE.CompressedTextureLoader=function(){this._parser=null},THREE.CompressedTextureLoader.prototype={constructor:THREE.CompressedTextureLoader,load:function(a,b,c){var d=this,e=[],f=new THREE.CompressedTexture;f.image=e;var g=new THREE.XHRLoader;if(g.setResponseType("arraybuffer"),a instanceof Array)for(var h=0,i=function(c){g.load(a[c],function(a){var g=d._parser(a,!0);e[c]={width:g.width,height:g.height,format:g.format,mipmaps:g.mipmaps},h+=1,6===h&&(1==g.mipmapCount&&(f.minFilter=THREE.LinearFilter),f.format=g.format,f.needsUpdate=!0,b&&b(f))})},j=0,k=a.length;k>j;++j)i(j);else g.load(a,function(a){var c=d._parser(a,!0);if(c.isCubemap)for(var g=c.mipmaps.length/c.mipmapCount,h=0;g>h;h++){e[h]={mipmaps:[]};for(var i=0;i<c.mipmapCount;i++)e[h].mipmaps.push(c.mipmaps[h*c.mipmapCount+i]),e[h].format=c.format,e[h].width=c.width,e[h].height=c.height}else f.image.width=c.width,f.image.height=c.height,f.mipmaps=c.mipmaps;1===c.mipmapCount&&(f.minFilter=THREE.LinearFilter),f.format=c.format,f.needsUpdate=!0,b&&b(f)});return f}},THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Material",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthTest=!0,this.depthWrite=!0,this.colorWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this._needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){a===!0&&this.update(),this._needsUpdate=a},setValues:function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0!==c){if(b in this){var d=this[b];d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):"overdraw"==b?this[b]=Number(c):this[b]=c}}else THREE.warn("THREE.Material: '"+b+"' parameter is undefined.")}},toJSON:function(){var a={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type};return""!==this.name&&(a.name=this.name),this instanceof THREE.MeshBasicMaterial?(a.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshLambertMaterial?(a.color=this.color.getHex(),a.emissive=this.emissive.getHex(),this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.shading!==THREE.SmoothShading&&(a.shading=this.shading),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshPhongMaterial?(a.color=this.color.getHex(),a.emissive=this.emissive.getHex(),a.specular=this.specular.getHex(),a.shininess=this.shininess,this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.shading!==THREE.SmoothShading&&(a.shading=this.shading),this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshNormalMaterial?(this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.MeshDepthMaterial?(this.blending!==THREE.NormalBlending&&(a.blending=this.blending),this.side!==THREE.FrontSide&&(a.side=this.side)):this instanceof THREE.PointCloudMaterial?(a.size=this.size,a.sizeAttenuation=this.sizeAttenuation,a.color=this.color.getHex(),this.vertexColors!==THREE.NoColors&&(a.vertexColors=this.vertexColors),this.blending!==THREE.NormalBlending&&(a.blending=this.blending)):this instanceof THREE.ShaderMaterial?(a.uniforms=this.uniforms,a.vertexShader=this.vertexShader,a.fragmentShader=this.fragmentShader):this instanceof THREE.SpriteMaterial&&(a.color=this.color.getHex()),this.opacity<1&&(a.opacity=this.opacity),this.transparent!==!1&&(a.transparent=this.transparent),this.wireframe!==!1&&(a.wireframe=this.wireframe),a},clone:function(a){return void 0===a&&(a=new THREE.Material),a.name=this.name,a.side=this.side,a.opacity=this.opacity,a.transparent=this.transparent,a.blending=this.blending,a.blendSrc=this.blendSrc,a.blendDst=this.blendDst,a.blendEquation=this.blendEquation,a.blendSrcAlpha=this.blendSrcAlpha,a.blendDstAlpha=this.blendDstAlpha,a.blendEquationAlpha=this.blendEquationAlpha,a.depthTest=this.depthTest,a.depthWrite=this.depthWrite,a.polygonOffset=this.polygonOffset,a.polygonOffsetFactor=this.polygonOffsetFactor,a.polygonOffsetUnits=this.polygonOffsetUnits,a.alphaTest=this.alphaTest,a.overdraw=this.overdraw,a.visible=this.visible,a},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Material.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(a){THREE.Material.call(this),this.type="LineBasicMaterial",this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(a)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial,THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.linewidth=this.linewidth,a.linecap=this.linecap,a.linejoin=this.linejoin,a.vertexColors=this.vertexColors,a.fog=this.fog,a},THREE.LineDashedMaterial=function(a){THREE.Material.call(this),this.type="LineDashedMaterial",this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(a)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial,THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.linewidth=this.linewidth,a.scale=this.scale,a.dashSize=this.dashSize,a.gapSize=this.gapSize,a.vertexColors=this.vertexColors,a.fog=this.fog,a},THREE.MeshBasicMaterial=function(a){THREE.Material.call(this),this.type="MeshBasicMaterial",this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(a)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial,THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.map=this.map,a.lightMap=this.lightMap,a.specularMap=this.specularMap,a.alphaMap=this.alphaMap,a.envMap=this.envMap,a.combine=this.combine,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,a.fog=this.fog,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.wireframeLinecap=this.wireframeLinecap,a.wireframeLinejoin=this.wireframeLinejoin,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a},THREE.MeshLambertMaterial=function(a){THREE.Material.call(this),this.type="MeshLambertMaterial",this.color=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial,THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.emissive.copy(this.emissive),a.wrapAround=this.wrapAround,a.wrapRGB.copy(this.wrapRGB),a.map=this.map,a.lightMap=this.lightMap,a.specularMap=this.specularMap,a.alphaMap=this.alphaMap,a.envMap=this.envMap,a.combine=this.combine,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,a.fog=this.fog,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.wireframeLinecap=this.wireframeLinecap,a.wireframeLinejoin=this.wireframeLinejoin,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a.morphNormals=this.morphNormals,a},THREE.MeshPhongMaterial=function(a){THREE.Material.call(this),this.type="MeshPhongMaterial",this.color=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(a)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial,THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.emissive.copy(this.emissive),a.specular.copy(this.specular),a.shininess=this.shininess,a.metal=this.metal,a.wrapAround=this.wrapAround,a.wrapRGB.copy(this.wrapRGB),a.map=this.map,a.lightMap=this.lightMap,a.bumpMap=this.bumpMap,a.bumpScale=this.bumpScale,a.normalMap=this.normalMap,a.normalScale.copy(this.normalScale),a.specularMap=this.specularMap,a.alphaMap=this.alphaMap,a.envMap=this.envMap,a.combine=this.combine,a.reflectivity=this.reflectivity,a.refractionRatio=this.refractionRatio,a.fog=this.fog,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.wireframeLinecap=this.wireframeLinecap,a.wireframeLinejoin=this.wireframeLinejoin,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a.morphNormals=this.morphNormals,a},THREE.MeshDepthMaterial=function(a){THREE.Material.call(this),this.type="MeshDepthMaterial",this.morphTargets=!1,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(a)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial,THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.MeshDepthMaterial;return THREE.Material.prototype.clone.call(this,a),a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a},THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a),this.type="MeshNormalMaterial",this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(a)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial,THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,a),a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a},THREE.MeshFaceMaterial=function(a){this.uuid=THREE.Math.generateUUID(),this.type="MeshFaceMaterial",this.materials=a instanceof Array?a:[]},THREE.MeshFaceMaterial.prototype={constructor:THREE.MeshFaceMaterial,toJSON:function(){for(var a={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},b=0,c=this.materials.length;c>b;b++)a.materials.push(this.materials[b].toJSON());return a},clone:function(){for(var a=new THREE.MeshFaceMaterial,b=0;b<this.materials.length;b++)a.materials.push(this.materials[b].clone());return a}},THREE.PointCloudMaterial=function(a){THREE.Material.call(this),this.type="PointCloudMaterial",this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=THREE.NoColors,this.fog=!0,this.setValues(a)},THREE.PointCloudMaterial.prototype=Object.create(THREE.Material.prototype),THREE.PointCloudMaterial.prototype.constructor=THREE.PointCloudMaterial,THREE.PointCloudMaterial.prototype.clone=function(){var a=new THREE.PointCloudMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.map=this.map,a.size=this.size,a.sizeAttenuation=this.sizeAttenuation,a.vertexColors=this.vertexColors,a.fog=this.fog,a},THREE.ParticleBasicMaterial=function(a){return THREE.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(a)},THREE.ParticleSystemMaterial=function(a){return THREE.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial."),new THREE.PointCloudMaterial(a)},THREE.ShaderMaterial=function(a){THREE.Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.attributes=null,this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=THREE.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.setValues(a)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial,THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,a),a.fragmentShader=this.fragmentShader,a.vertexShader=this.vertexShader,a.uniforms=THREE.UniformsUtils.clone(this.uniforms),a.attributes=this.attributes,a.defines=this.defines,a.shading=this.shading,a.wireframe=this.wireframe,a.wireframeLinewidth=this.wireframeLinewidth,a.fog=this.fog,a.lights=this.lights,a.vertexColors=this.vertexColors,a.skinning=this.skinning,a.morphTargets=this.morphTargets,a.morphNormals=this.morphNormals,a},THREE.RawShaderMaterial=function(a){THREE.ShaderMaterial.call(this,a),this.type="RawShaderMaterial"},THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial,THREE.RawShaderMaterial.prototype.clone=function(){var a=new THREE.RawShaderMaterial;return THREE.ShaderMaterial.prototype.clone.call(this,a),a},THREE.SpriteMaterial=function(a){THREE.Material.call(this),this.type="SpriteMaterial",this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(a)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial,THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.map=this.map,a.rotation=this.rotation,a.fog=this.fog,a},THREE.Texture=function(a,b,c,d,e,f,g,h,i){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.sourceFile="",this.image=void 0!==a?a:THREE.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==b?b:THREE.Texture.DEFAULT_MAPPING,this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==e?e:THREE.LinearFilter,this.minFilter=void 0!==f?f:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==i?i:1,this.format=void 0!==g?g:THREE.RGBAFormat,this.type=void 0!==h?h:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this._needsUpdate=!1,this.onUpdate=null},THREE.Texture.DEFAULT_IMAGE=void 0,THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping,THREE.Texture.prototype={constructor:THREE.Texture,get needsUpdate(){return this._needsUpdate},set needsUpdate(a){a===!0&&this.update(),this._needsUpdate=a},clone:function(a){return void 0===a&&(a=new THREE.Texture),a.image=this.image,a.mipmaps=this.mipmaps.slice(0),a.mapping=this.mapping,a.wrapS=this.wrapS,a.wrapT=this.wrapT,a.magFilter=this.magFilter,a.minFilter=this.minFilter,a.anisotropy=this.anisotropy,a.format=this.format,a.type=this.type,a.offset.copy(this.offset),a.repeat.copy(this.repeat),a.generateMipmaps=this.generateMipmaps,a.premultiplyAlpha=this.premultiplyAlpha,a.flipY=this.flipY,a.unpackAlignment=this.unpackAlignment,a},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.Texture.prototype),THREE.TextureIdCount=0,THREE.CubeTexture=function(a,b,c,d,e,f,g,h,i){b=void 0!==b?b:THREE.CubeReflectionMapping,THREE.Texture.call(this,a,b,c,d,e,f,g,h,i),this.images=a},THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CubeTexture.prototype.constructor=THREE.CubeTexture,THREE.CubeTexture.clone=function(a){return void 0===a&&(a=new THREE.CubeTexture),THREE.Texture.prototype.clone.call(this,a),a.images=this.images,a},THREE.CompressedTexture=function(a,b,c,d,e,f,g,h,i,j,k){THREE.Texture.call(this,null,f,g,h,i,j,d,e,k),this.image={width:b,height:c},this.mipmaps=a,this.flipY=!1,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture,THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,a),a},THREE.DataTexture=function(a,b,c,d,e,f,g,h,i,j,k){THREE.Texture.call(this,null,f,g,h,i,j,d,e,k),this.image={data:a,width:b,height:c}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.constructor=THREE.DataTexture,THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,a),a},THREE.VideoTexture=function(a,b,c,d,e,f,g,h,i){THREE.Texture.call(this,a,b,c,d,e,f,g,h,i),this.generateMipmaps=!1;var j=this,k=function(){requestAnimationFrame(k),a.readyState===a.HAVE_ENOUGH_DATA&&(j.needsUpdate=!0)};k()},THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype),THREE.VideoTexture.prototype.constructor=THREE.VideoTexture,THREE.Group=function(){THREE.Object3D.call(this),this.type="Group"},THREE.Group.prototype=Object.create(THREE.Object3D.prototype),THREE.Group.prototype.constructor=THREE.Group,THREE.PointCloud=function(a,b){THREE.Object3D.call(this),this.type="PointCloud",this.geometry=void 0!==a?a:new THREE.Geometry,this.material=void 0!==b?b:new THREE.PointCloudMaterial({color:16777215*Math.random()})},THREE.PointCloud.prototype=Object.create(THREE.Object3D.prototype),THREE.PointCloud.prototype.constructor=THREE.PointCloud,THREE.PointCloud.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray;return function(c,d){var e=this,f=e.geometry,g=c.params.PointCloud.threshold;if(a.getInverse(this.matrixWorld),b.copy(c.ray).applyMatrix4(a),null===f.boundingBox||b.isIntersectionBox(f.boundingBox)!==!1){var h=g/((this.scale.x+this.scale.y+this.scale.z)/3),i=new THREE.Vector3,j=function(a,f){var g=b.distanceToPoint(a);if(h>g){var i=b.closestPointToPoint(a);i.applyMatrix4(e.matrixWorld);var j=c.ray.origin.distanceTo(i);d.push({distance:j,distanceToRay:g,point:i.clone(),index:f,face:null,object:e})}};if(f instanceof THREE.BufferGeometry){var k=f.attributes,l=k.position.array;if(void 0!==k.index){var m=k.index.array,n=f.offsets;if(0===n.length){var o={start:0,count:m.length,index:0};n=[o]}for(var p=0,q=n.length;q>p;++p)for(var r=n[p].start,s=n[p].count,t=n[p].index,u=r,v=r+s;v>u;u++){var w=t+m[u];i.fromArray(l,3*w),j(i,w)}}else for(var x=l.length/3,u=0;x>u;u++)i.set(l[3*u],l[3*u+1],l[3*u+2]),j(i,u)}else for(var y=this.geometry.vertices,u=0;u<y.length;u++)j(y[u],u)}}}(),THREE.PointCloud.prototype.clone=function(a){return void 0===a&&(a=new THREE.PointCloud(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.ParticleSystem=function(a,b){return THREE.warn("THREE.ParticleSystem has been renamed to THREE.PointCloud."),new THREE.PointCloud(a,b)},THREE.Line=function(a,b,c){THREE.Object3D.call(this),this.type="Line",this.geometry=void 0!==a?a:new THREE.Geometry,this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.mode=void 0!==c?c:THREE.LineStrip},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.constructor=THREE.Line,THREE.Line.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere;return function(d,e){var f=d.linePrecision,g=f*f,h=this.geometry;if(null===h.boundingSphere&&h.computeBoundingSphere(),c.copy(h.boundingSphere),c.applyMatrix4(this.matrixWorld),d.ray.isIntersectionSphere(c)!==!1){a.getInverse(this.matrixWorld),b.copy(d.ray).applyMatrix4(a);var i=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,m=this.mode===THREE.LineStrip?1:2;if(h instanceof THREE.BufferGeometry){var n=h.attributes;if(void 0!==n.index){var o=n.index.array,p=n.position.array,q=h.offsets;0===q.length&&(q=[{start:0,count:o.length,index:0}]);for(var r=0;r<q.length;r++)for(var s=q[r].start,t=q[r].count,u=q[r].index,v=s;s+t-1>v;v+=m){var w=u+o[v],x=u+o[v+1];i.fromArray(p,3*w),j.fromArray(p,3*x);var y=b.distanceSqToSegment(i,j,l,k);if(!(y>g)){var z=b.origin.distanceTo(l);z<d.near||z>d.far||e.push({distance:z,point:k.clone().applyMatrix4(this.matrixWorld),index:v,offsetIndex:r,face:null,faceIndex:null,object:this})}}}else for(var p=n.position.array,v=0;v<p.length/3-1;v+=m){i.fromArray(p,3*v),j.fromArray(p,3*v+3);var y=b.distanceSqToSegment(i,j,l,k);if(!(y>g)){var z=b.origin.distanceTo(l);z<d.near||z>d.far||e.push({distance:z,point:k.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}}else if(h instanceof THREE.Geometry)for(var A=h.vertices,B=A.length,v=0;B-1>v;v+=m){var y=b.distanceSqToSegment(A[v],A[v+1],l,k);if(!(y>g)){var z=b.origin.distanceTo(l);z<d.near||z>d.far||e.push({distance:z,point:k.clone().applyMatrix4(this.matrixWorld),index:v,face:null,faceIndex:null,object:this})}}}}}(),THREE.Line.prototype.clone=function(a){return void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.mode)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.Mesh=function(a,b){THREE.Object3D.call(this),this.type="Mesh",this.geometry=void 0!==a?a:new THREE.Geometry,this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.constructor=THREE.Mesh,THREE.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;b>a;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){return void 0!==this.morphTargetDictionary[a]?this.morphTargetDictionary[a]:(THREE.warn("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0."),
0)},THREE.Mesh.prototype.raycast=function(){var a=new THREE.Matrix4,b=new THREE.Ray,c=new THREE.Sphere,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Vector3;return function(g,h){var i=this.geometry;if(null===i.boundingSphere&&i.computeBoundingSphere(),c.copy(i.boundingSphere),c.applyMatrix4(this.matrixWorld),g.ray.isIntersectionSphere(c)!==!1&&(a.getInverse(this.matrixWorld),b.copy(g.ray).applyMatrix4(a),null===i.boundingBox||b.isIntersectionBox(i.boundingBox)!==!1))if(i instanceof THREE.BufferGeometry){var j=this.material;if(void 0===j)return;var k,l,m,n=i.attributes,o=g.precision;if(void 0!==n.index){var p=n.index.array,q=n.position.array,r=i.offsets;0===r.length&&(r=[{start:0,count:p.length,index:0}]);for(var s=0,t=r.length;t>s;++s)for(var u=r[s].start,v=r[s].count,w=r[s].index,x=u,y=u+v;y>x;x+=3){if(k=w+p[x],l=w+p[x+1],m=w+p[x+2],d.fromArray(q,3*k),e.fromArray(q,3*l),f.fromArray(q,3*m),j.side===THREE.BackSide)var z=b.intersectTriangle(f,e,d,!0);else var z=b.intersectTriangle(d,e,f,j.side!==THREE.DoubleSide);if(null!==z){z.applyMatrix4(this.matrixWorld);var A=g.ray.origin.distanceTo(z);o>A||A<g.near||A>g.far||h.push({distance:A,point:z,face:new THREE.Face3(k,l,m,THREE.Triangle.normal(d,e,f)),faceIndex:null,object:this})}}}else for(var q=n.position.array,x=0,B=0,y=q.length;y>x;x+=3,B+=9){if(k=x,l=x+1,m=x+2,d.fromArray(q,B),e.fromArray(q,B+3),f.fromArray(q,B+6),j.side===THREE.BackSide)var z=b.intersectTriangle(f,e,d,!0);else var z=b.intersectTriangle(d,e,f,j.side!==THREE.DoubleSide);if(null!==z){z.applyMatrix4(this.matrixWorld);var A=g.ray.origin.distanceTo(z);o>A||A<g.near||A>g.far||h.push({distance:A,point:z,face:new THREE.Face3(k,l,m,THREE.Triangle.normal(d,e,f)),faceIndex:null,object:this})}}}else if(i instanceof THREE.Geometry)for(var k,l,m,C=this.material instanceof THREE.MeshFaceMaterial,D=C===!0?this.material.materials:null,o=g.precision,E=i.vertices,F=0,G=i.faces.length;G>F;F++){var H=i.faces[F],j=C===!0?D[H.materialIndex]:this.material;if(void 0!==j){if(k=E[H.a],l=E[H.b],m=E[H.c],j.morphTargets===!0){var I=i.morphTargets,J=this.morphTargetInfluences;d.set(0,0,0),e.set(0,0,0),f.set(0,0,0);for(var K=0,L=I.length;L>K;K++){var M=J[K];if(0!==M){var N=I[K].vertices;d.x+=(N[H.a].x-k.x)*M,d.y+=(N[H.a].y-k.y)*M,d.z+=(N[H.a].z-k.z)*M,e.x+=(N[H.b].x-l.x)*M,e.y+=(N[H.b].y-l.y)*M,e.z+=(N[H.b].z-l.z)*M,f.x+=(N[H.c].x-m.x)*M,f.y+=(N[H.c].y-m.y)*M,f.z+=(N[H.c].z-m.z)*M}}d.add(k),e.add(l),f.add(m),k=d,l=e,m=f}if(j.side===THREE.BackSide)var z=b.intersectTriangle(m,l,k,!0);else var z=b.intersectTriangle(k,l,m,j.side!==THREE.DoubleSide);if(null!==z){z.applyMatrix4(this.matrixWorld);var A=g.ray.origin.distanceTo(z);o>A||A<g.near||A>g.far||h.push({distance:A,point:z,face:H,faceIndex:F,object:this})}}}}}(),THREE.Mesh.prototype.clone=function(a,b){return void 0===a&&(a=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,a,b),a},THREE.Bone=function(a){THREE.Object3D.call(this),this.type="Bone",this.skin=a},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.constructor=THREE.Bone,THREE.Skeleton=function(a,b,c){if(this.useVertexTexture=void 0!==c?c:!0,this.identityMatrix=new THREE.Matrix4,a=a||[],this.bones=a.slice(0),this.useVertexTexture){var d;d=this.bones.length>256?64:this.bones.length>64?32:this.bones.length>16?16:8,this.boneTextureWidth=d,this.boneTextureHeight=d,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===b)this.calculateInverses();else if(this.bones.length===b.length)this.boneInverses=b.slice(0);else{THREE.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[];for(var e=0,f=this.bones.length;f>e;e++)this.boneInverses.push(new THREE.Matrix4)}},THREE.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var a=0,b=this.bones.length;b>a;a++){var c=new THREE.Matrix4;this.bones[a]&&c.getInverse(this.bones[a].matrixWorld),this.boneInverses.push(c)}},THREE.Skeleton.prototype.pose=function(){for(var a,b=0,c=this.bones.length;c>b;b++)a=this.bones[b],a&&a.matrixWorld.getInverse(this.boneInverses[b]);for(var b=0,c=this.bones.length;c>b;b++)a=this.bones[b],a&&(a.parent?(a.matrix.getInverse(a.parent.matrixWorld),a.matrix.multiply(a.matrixWorld)):a.matrix.copy(a.matrixWorld),a.matrix.decompose(a.position,a.quaternion,a.scale))},THREE.Skeleton.prototype.update=function(){var a=new THREE.Matrix4;return function(){for(var b=0,c=this.bones.length;c>b;b++){var d=this.bones[b]?this.bones[b].matrixWorld:this.identityMatrix;a.multiplyMatrices(d,this.boneInverses[b]),a.flattenToArrayOffset(this.boneMatrices,16*b)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new THREE.Matrix4,this.bindMatrixInverse=new THREE.Matrix4;var d=[];if(this.geometry&&void 0!==this.geometry.bones){for(var e,f,g,h,i,j=0,k=this.geometry.bones.length;k>j;++j)f=this.geometry.bones[j],g=f.pos,h=f.rotq,i=f.scl,e=new THREE.Bone(this),d.push(e),e.name=f.name,e.position.set(g[0],g[1],g[2]),e.quaternion.set(h[0],h[1],h[2],h[3]),void 0!==i?e.scale.set(i[0],i[1],i[2]):e.scale.set(1,1,1);for(var j=0,k=this.geometry.bones.length;k>j;++j)f=this.geometry.bones[j],-1!==f.parent?d[f.parent].add(d[j]):this.add(d[j])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new THREE.Skeleton(d,void 0,c))},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh,THREE.SkinnedMesh.prototype.bind=function(a,b){this.skeleton=a,void 0===b&&(this.updateMatrixWorld(!0),b=this.matrixWorld),this.bindMatrix.copy(b),this.bindMatrixInverse.getInverse(b)},THREE.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()},THREE.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof THREE.Geometry)for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();c!==1/0?b.multiplyScalar(c):b.set(1)}},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):THREE.warn("THREE.SkinnedMesh unreckognized bindMode: "+this.bindMode)},THREE.SkinnedMesh.prototype.clone=function(a){return void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,a),a},THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b),this.type="MorphAnimMesh",this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh,THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a,this.endKeyframe=b,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)_?(\d+)/,e=0,f=a.morphTargets.length;f>e;e++){var g=a.morphTargets[e],h=g.name.match(d);if(h&&h.length>1){var i=h[1];c[i]||(c[i]={start:1/0,end:-(1/0)});var j=c[i];e<j.start&&(j.start=e),e>j.end&&(j.end=e),b||(b=i)}}a.firstAnimation=b},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[a]={start:b,end:c}},THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1e3*((c.end-c.start)/b),this.time=0):THREE.warn("THREE.MorphAnimMesh: animation["+a+"] undefined in .playAnimation()")},THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a,this.mirroredLoop?(this.time>this.duration||this.time<0)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),this.time<0&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,this.time<0&&(this.time+=this.duration));var c=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);c!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[c]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=c);var d=this.time%b/b;this.directionBackwards&&(d=1-d),this.morphTargetInfluences[this.currentKeyframe]=d,this.morphTargetInfluences[this.lastKeyframe]=1-d},THREE.MorphAnimMesh.prototype.interpolateTargets=function(a,b,c){for(var d=this.morphTargetInfluences,e=0,f=d.length;f>e;e++)d[e]=0;a>-1&&(d[a]=1-c),b>-1&&(d[b]=c)},THREE.MorphAnimMesh.prototype.clone=function(a){return void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material)),a.duration=this.duration,a.mirroredLoop=this.mirroredLoop,a.time=this.time,a.lastKeyframe=this.lastKeyframe,a.currentKeyframe=this.currentKeyframe,a.direction=this.direction,a.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,a),a},THREE.LOD=function(){THREE.Object3D.call(this),this.objects=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.constructor=THREE.LOD,THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0),b=Math.abs(b);for(var c=0;c<this.objects.length&&!(b<this.objects[c].distance);c++);this.objects.splice(c,0,{distance:b,object:a}),this.add(a)},THREE.LOD.prototype.getObjectForDistance=function(a){for(var b=1,c=this.objects.length;c>b&&!(a<this.objects[b].distance);b++);return this.objects[b-1].object},THREE.LOD.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.origin.distanceTo(a);this.getObjectForDistance(d).raycast(b,c)}}(),THREE.LOD.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(c){if(this.objects.length>1){a.setFromMatrixPosition(c.matrixWorld),b.setFromMatrixPosition(this.matrixWorld);var d=a.distanceTo(b);this.objects[0].object.visible=!0;for(var e=1,f=this.objects.length;f>e&&d>=this.objects[e].distance;e++)this.objects[e-1].object.visible=!1,this.objects[e].object.visible=!0;for(;f>e;e++)this.objects[e].object.visible=!1}}}(),THREE.LOD.prototype.clone=function(a){void 0===a&&(a=new THREE.LOD),THREE.Object3D.prototype.clone.call(this,a);for(var b=0,c=this.objects.length;c>b;b++){var d=this.objects[b].object.clone();d.visible=0===b,a.addLevel(d,this.objects[b].distance)}return a},THREE.Sprite=function(){var a=new Uint16Array([0,1,2,0,2,3]),b=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),c=new Float32Array([0,0,1,0,1,1,0,1]),d=new THREE.BufferGeometry;return d.addAttribute("index",new THREE.BufferAttribute(a,1)),d.addAttribute("position",new THREE.BufferAttribute(b,3)),d.addAttribute("uv",new THREE.BufferAttribute(c,2)),function(a){THREE.Object3D.call(this),this.type="Sprite",this.geometry=d,this.material=void 0!==a?a:new THREE.SpriteMaterial}}(),THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.constructor=THREE.Sprite,THREE.Sprite.prototype.raycast=function(){var a=new THREE.Vector3;return function(b,c){a.setFromMatrixPosition(this.matrixWorld);var d=b.ray.distanceToPoint(a);d>this.scale.x||c.push({distance:d,point:this.position,face:null,object:this})}}(),THREE.Sprite.prototype.clone=function(a){return void 0===a&&(a=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,a),a},THREE.Particle=THREE.Sprite,THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==a&&this.add(a,b,c,d,e)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.constructor=THREE.LensFlare,THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){void 0===b&&(b=-1),void 0===c&&(c=0),void 0===f&&(f=1),void 0===e&&(e=new THREE.Color(16777215)),void 0===d&&(d=THREE.NormalBlending),c=Math.min(c,Math.max(0,c)),this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})},THREE.LensFlare.prototype.updateLensFlares=function(){var a,b,c=this.lensFlares.length,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;c>a;a++)b=this.lensFlares[a],b.x=this.positionScreen.x+d*b.distance,b.y=this.positionScreen.y+e*b.distance,b.wantedRotation=b.x*Math.PI*.25,b.rotation+=.25*(b.wantedRotation-b.rotation)},THREE.Scene=function(){THREE.Object3D.call(this),this.type="Scene",this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.constructor=THREE.Scene,THREE.Scene.prototype.clone=function(a){return void 0===a&&(a=new THREE.Scene),THREE.Object3D.prototype.clone.call(this,a),null!==this.fog&&(a.fog=this.fog.clone()),null!==this.overrideMaterial&&(a.overrideMaterial=this.overrideMaterial.clone()),a.autoUpdate=this.autoUpdate,a.matrixAutoUpdate=this.matrixAutoUpdate,a},THREE.Fog=function(a,b,c){this.name="",this.color=new THREE.Color(a),this.near=void 0!==b?b:1,this.far=void 0!==c?c:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(a,b){this.name="",this.color=new THREE.Color(a),this.density=void 0!==b?b:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.ShaderChunk={},THREE.ShaderChunk.common="#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\nfloat square( in float a ) { return a*a; }\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\nfloat average( in float a ) { return a; }\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\n}\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\n	return normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal) {\n	float distance = dot( planeNormal, point-pointOnPlane );\n	return point - distance * planeNormal;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return pointOnLine + lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) );\n}\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\n	if ( decayExponent > 0.0 ) {\n	  return pow( saturate( 1.0 - lightDistance / cutoffDistance ), decayExponent );\n	}\n	return 1.0;\n}\n\nvec3 inputToLinear( in vec3 a ) {\n#ifdef GAMMA_INPUT\n	return pow( a, vec3( float( GAMMA_FACTOR ) ) );\n#else\n	return a;\n#endif\n}\nvec3 linearToOutput( in vec3 a ) {\n#ifdef GAMMA_OUTPUT\n	return pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\n#else\n	return a;\n#endif\n}\n",THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n	if ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n",THREE.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vec3( 0.0 );\n\n#endif\n\ntransformedNormal = normalize( transformedNormal );\n\n#if MAX_DIR_LIGHTS > 0\n\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n	vec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\n\n	float dotProduct = dot( transformedNormal, dirVector );\n	vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n	#ifdef DOUBLE_SIDED\n\n		vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n		#ifdef WRAP_AROUND\n\n			vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n		#endif\n\n	#endif\n\n	#ifdef WRAP_AROUND\n\n		vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n		directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n\n		#ifdef DOUBLE_SIDED\n\n			directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n\n		#endif\n\n	#endif\n\n	vLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n\n	#ifdef DOUBLE_SIDED\n\n		vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n\n	#endif\n\n}\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n		lVector = normalize( lVector );\n		float dotProduct = dot( transformedNormal, lVector );\n\n		vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n		#ifdef DOUBLE_SIDED\n\n			vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n			#ifdef WRAP_AROUND\n\n				vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n			#endif\n\n		#endif\n\n		#ifdef WRAP_AROUND\n\n			vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n			pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n\n			#ifdef DOUBLE_SIDED\n\n				pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n\n			#endif\n\n		#endif\n\n		vLightFront += pointLightColor[ i ] * pointLightWeighting * attenuation;\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += pointLightColor[ i ] * pointLightWeightingBack * attenuation;\n\n		#endif\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz - mvPosition.xyz;\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n			float attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n			lVector = normalize( lVector );\n\n			float dotProduct = dot( transformedNormal, lVector );\n			vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n\n			#ifdef DOUBLE_SIDED\n\n				vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n\n				#ifdef WRAP_AROUND\n\n					vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n\n				#endif\n\n			#endif\n\n			#ifdef WRAP_AROUND\n\n				vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\n				spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n\n				#ifdef DOUBLE_SIDED\n\n					spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n\n				#endif\n\n			#endif\n\n			vLightFront += spotLightColor[ i ] * spotLightWeighting * attenuation * spotEffect;\n\n			#ifdef DOUBLE_SIDED\n\n				vLightBack += spotLightColor[ i ] * spotLightWeightingBack * attenuation * spotEffect;\n\n			#endif\n\n		}\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\n\n		float dotProduct = dot( transformedNormal, lVector );\n\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n		float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\n\n		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n		#endif\n\n	}\n\n#endif\n\nvLightFront += ambientLightColor;\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack += ambientLightColor;\n\n#endif\n",THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n	uniform vec4 offsetRepeat;\n	uniform sampler2D map;\n\n#endif\n",THREE.ShaderChunk.default_vertex="#ifdef USE_SKINNING\n\n	vec4 mvPosition = modelViewMatrix * skinned;\n\n#elif defined( USE_MORPHTARGETS )\n\n	vec4 mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n\n#else\n\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n",THREE.ShaderChunk.map_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n\n#endif\n\n#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif",THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n	#ifdef USE_MORPHNORMALS\n\n	vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n\n	#else\n\n	vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		varying float vFragDepth;\n\n	#endif\n\n	uniform float logDepthBufFC;\n\n#endif",THREE.ShaderChunk.lightmap_pars_vertex="#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n\n#endif",THREE.ShaderChunk.lights_phong_fragment="#ifndef FLAT_SHADED\n\n	vec3 normal = normalize( vNormal );\n\n	#ifdef DOUBLE_SIDED\n\n		normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n	#endif\n\n#else\n\n	vec3 fdx = dFdx( vViewPosition );\n	vec3 fdy = dFdy( vViewPosition );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n\n#endif\n\nvec3 viewPosition = normalize( vViewPosition );\n\n#ifdef USE_NORMALMAP\n\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\nvec3 totalDiffuseLight = vec3( 0.0 );\nvec3 totalSpecularLight = vec3( 0.0 );\n\n#if MAX_POINT_LIGHTS > 0\n\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n		lVector = normalize( lVector );\n\n		// diffuse\n\n		float dotProduct = dot( normal, lVector );\n\n		#ifdef WRAP_AROUND\n\n			float pointDiffuseWeightFull = max( dotProduct, 0.0 );\n			float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float pointDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		totalDiffuseLight += pointLightColor[ i ] * pointDiffuseWeight * attenuation;\n\n				// specular\n\n		vec3 pointHalfVector = normalize( lVector + viewPosition );\n		float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\n		float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\n		totalSpecularLight += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * attenuation * specularNormalization;\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\n		vec3 lVector = lPosition.xyz + vViewPosition.xyz;\n\n		float attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n		lVector = normalize( lVector );\n\n		float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\n\n			// diffuse\n\n			float dotProduct = dot( normal, lVector );\n\n			#ifdef WRAP_AROUND\n\n				float spotDiffuseWeightFull = max( dotProduct, 0.0 );\n				float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n				vec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n\n			#else\n\n				float spotDiffuseWeight = max( dotProduct, 0.0 );\n\n			#endif\n\n			totalDiffuseLight += spotLightColor[ i ] * spotDiffuseWeight * attenuation * spotEffect;\n\n			// specular\n\n			vec3 spotHalfVector = normalize( lVector + viewPosition );\n			float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\n			float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n\n			float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n			vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\n			totalSpecularLight += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * attenuation * specularNormalization * spotEffect;\n\n		}\n\n	}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n	for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n		vec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\n\n		// diffuse\n\n		float dotProduct = dot( normal, dirVector );\n\n		#ifdef WRAP_AROUND\n\n			float dirDiffuseWeightFull = max( dotProduct, 0.0 );\n			float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\n\n			vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n\n		#else\n\n			float dirDiffuseWeight = max( dotProduct, 0.0 );\n\n		#endif\n\n		totalDiffuseLight += directionalLightColor[ i ] * dirDiffuseWeight;\n\n		// specular\n\n		vec3 dirHalfVector = normalize( dirVector + viewPosition );\n		float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\n		float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n\n		/*\n		// fresnel term from skin shader\n		const float F0 = 0.128;\n\n		float base = 1.0 - dot( viewPosition, dirHalfVector );\n		float exponential = pow( base, 5.0 );\n\n		float fresnel = exponential + F0 * ( 1.0 - exponential );\n		*/\n\n		/*\n		// fresnel term from fresnel shader\n		const float mFresnelBias = 0.08;\n		const float mFresnelScale = 0.3;\n		const float mFresnelPower = 5.0;\n\n		float fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\n		*/\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		// 		dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\n\n		vec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\n		totalSpecularLight += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\n\n		// diffuse\n\n		float dotProduct = dot( normal, lVector );\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n		vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		totalDiffuseLight += hemiColor;\n\n		// specular (sky light)\n\n		vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\n		float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\n		float hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\n\n		// specular (ground light)\n\n		vec3 lVectorGround = -lVector;\n\n		vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\n		float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\n		float hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\n\n		float dotProductGround = dot( normal, lVectorGround );\n\n		float specularNormalization = ( shininess + 2.0 ) / 8.0;\n\n		vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\n		vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\n		totalSpecularLight += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n\n	}\n\n#endif\n\n#ifdef METAL\n\n	outgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) * specular + totalSpecularLight + emissive;\n\n#else\n\n	outgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) + totalSpecularLight + emissive;\n\n#endif\n",THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n	uniform vec3 fogColor;\n\n	#ifdef FOG_EXP2\n\n		uniform float fogDensity;\n\n	#else\n\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n\n#endif",THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n	vec3 morphedNormal = vec3( 0.0 );\n\n	morphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	morphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	morphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	morphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n	morphedNormal += normal;\n\n#endif",THREE.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n	uniform float reflectivity;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	uniform float flipEnvMap;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		uniform float refractionRatio;\n\n	#else\n\n		varying vec3 vReflect;\n\n	#endif\n\n#endif\n",
THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif",THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n\n	// Per-Pixel Tangent Space Normal Mapping\n	// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n\n	}\n\n#endif\n",THREE.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n",THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n	varying vec2 vUv2;\n	uniform sampler2D lightMap;\n\n#endif",THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n	}\n\n#endif",THREE.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	vWorldPosition = worldPosition.xyz;\n\n#endif",THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n	vec4 texelColor = texture2D( map, vUv );\n\n	texelColor.xyz = inputToLinear( texelColor.xyz );\n\n	diffuseColor *= texelColor;\n\n#endif",THREE.ShaderChunk.lightmap_vertex="#ifdef USE_LIGHTMAP\n\n	vUv2 = uv2;\n\n#endif",THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n	diffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\n#endif\n",THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif\n",THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n	vColor.xyz = inputToLinear( color.xyz );\n\n#endif",THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n	#ifdef USE_MORPHTARGETS\n\n	vec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n	vec4 skinVertex = bindMatrix * vec4( position, 1.0 );\n\n	#endif\n\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n\n#endif\n",THREE.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	varying vec3 vReflect;\n\n	uniform float refractionRatio;\n\n#endif\n",THREE.ShaderChunk.linear_to_gamma_fragment="\n	outgoingLight = linearToOutput( outgoingLight );\n",THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif",THREE.ShaderChunk.lights_lambert_pars_vertex="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n",THREE.ShaderChunk.map_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n\n#endif\n",THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n		// Transforming Normal Vectors with the Inverse Transformation\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n		#ifdef ENVMAP_MODE_REFLECTION\n\n			vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n		#else\n\n			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n		#endif\n\n	#else\n\n		vec3 reflectVec = vReflect;\n\n	#endif\n\n	#ifdef DOUBLE_SIDED\n		float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n	#else\n		float flipNormal = 1.0;\n	#endif\n\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n		vec2 sampleUV;\n		sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n		sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n		vec4 envColor = texture2D( envMap, sampleUV );\n\n	#elif defined( ENVMAP_TYPE_SPHERE )\n		vec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n	#endif\n\n	envColor.xyz = inputToLinear( envColor.xyz );\n\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_MIX )\n\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_ADD )\n\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n	uniform sampler2D specularMap;\n\n#endif",THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n	gl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		vFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n	#endif\n\n#endif",THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n	#ifndef USE_MORPHNORMALS\n\n	uniform float morphTargetInfluences[ 8 ];\n\n	#else\n\n	uniform float morphTargetInfluences[ 4 ];\n\n	#endif\n\n#endif",THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n\n#else\n\n	specularStrength = 1.0;\n\n#endif",THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n	#else\n\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n	#endif\n\n	#ifdef FOG_EXP2\n\n		float fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\n		fogFactor = whiteCompliment( fogFactor );\n\n	#else\n\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n\n	#endif\n	\n	outgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n#endif",THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n\n	// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\n	// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\n\n	// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\n\n	vec2 dHdxy_fwd() {\n\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n		return vec2( dBx, dBy );\n\n	}\n\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;		// normalized\n\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n\n		float fDet = dot( vSigmaX, R1 );\n\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n\n	}\n\n#endif\n",THREE.ShaderChunk.defaultnormal_vertex="#ifdef USE_SKINNING\n\n	vec3 objectNormal = skinnedNormal.xyz;\n\n#elif defined( USE_MORPHNORMALS )\n\n	vec3 objectNormal = morphedNormal;\n\n#else\n\n	vec3 objectNormal = normal;\n\n#endif\n\n#ifdef FLIP_SIDED\n\n	objectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n",THREE.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n\n#ifdef WRAP_AROUND\n\n	uniform vec3 wrapRGB;\n\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n	varying vec3 vNormal;\n\n#endif\n",THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",THREE.ShaderChunk.map_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\n\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif",THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n	outgoingLight *= diffuseColor.xyz * texture2D( lightMap, vUv2 ).xyz;\n\n#endif",THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n	uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n\n#endif",THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n	diffuseColor.rgb *= vColor;\n\n#endif",THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n	vec3 morphed = vec3( 0.0 );\n	morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n	#ifndef USE_MORPHNORMALS\n\n	morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n	#endif\n\n	morphed += position;\n\n#endif",THREE.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	vec3 worldNormal = transformDirection( objectNormal, modelMatrix );\n\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n	#ifdef ENVMAP_MODE_REFLECTION\n\n		vReflect = reflect( cameraToVertex, worldNormal );\n\n	#else\n\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n	#ifdef SHADOWMAP_DEBUG\n\n		vec3 frustumColors[3];\n		frustumColors[0] = vec3( 1.0, 0.5, 0.0 );\n		frustumColors[1] = vec3( 0.0, 1.0, 0.8 );\n		frustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n\n	#endif\n\n	#ifdef SHADOWMAP_CASCADE\n\n		int inFrustumCount = 0;\n\n	#endif\n\n	float fDepth;\n	vec3 shadowColor = vec3( 1.0 );\n\n	for( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n				// if ( something && something ) breaks ATI OpenGL shader compiler\n				// if ( all( something, something ) ) using this instead\n\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n\n				// don't shadow pixels outside of light frustum\n				// use just first frustum (for cascades)\n				// don't shadow pixels behind far plane of light frustum\n\n		#ifdef SHADOWMAP_CASCADE\n\n			inFrustumCount += int( inFrustum );\n			bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n\n		#else\n\n			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n		#endif\n\n		bool frustumTest = all( frustumTestVec );\n\n		if ( frustumTest ) {\n\n			shadowCoord.z += shadowBias[ i ];\n\n			#if defined( SHADOWMAP_TYPE_PCF )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n		/*\n						// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\n						// must enroll loop manually\n\n				for ( float y = -1.25; y <= 1.25; y += 1.25 )\n					for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n\n						vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n\n								// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\n								//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\n\n						float fDepth = unpackDepth( rgbaDepth );\n\n						if ( fDepth < shadowCoord.z )\n							shadow += 1.0;\n\n				}\n\n				shadow /= 9.0;\n\n		*/\n\n				const float shadowDelta = 1.0 / 9.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.25 * xPixelOffset;\n				float dy0 = -1.25 * yPixelOffset;\n				float dx1 = 1.25 * xPixelOffset;\n				float dy1 = 1.25 * yPixelOffset;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += shadowDelta;\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n						// Percentage-close filtering\n						// (9 pixel kernel)\n						// http://fabiensanglard.net/shadowmappingPCF/\n\n				float shadow = 0.0;\n\n				float xPixelOffset = 1.0 / shadowMapSize[ i ].x;\n				float yPixelOffset = 1.0 / shadowMapSize[ i ].y;\n\n				float dx0 = -1.0 * xPixelOffset;\n				float dy0 = -1.0 * yPixelOffset;\n				float dx1 = 1.0 * xPixelOffset;\n				float dy1 = 1.0 * yPixelOffset;\n\n				mat3 shadowKernel;\n				mat3 depthKernel;\n\n				depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n				vec3 shadowZ = vec3( shadowCoord.z );\n				shadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\n				shadowKernel[0] *= vec3(0.25);\n\n				shadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\n				shadowKernel[1] *= vec3(0.25);\n\n				shadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\n				shadowKernel[2] *= vec3(0.25);\n\n				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\n\n				shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\n				shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\n\n				vec4 shadowValues;\n				shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\n				shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\n				shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\n				shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\n\n				shadow = dot( shadowValues, vec4( 1.0 ) );\n\n				shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n\n			#else\n\n				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n				float fDepth = unpackDepth( rgbaDepth );\n\n				if ( fDepth < shadowCoord.z )\n\n		// spot with multiple shadows is darker\n\n					shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n\n		// spot with multiple shadows has the same color as single shadow spot\n\n		// 					shadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\n\n			#endif\n\n		}\n\n\n		#ifdef SHADOWMAP_DEBUG\n\n			#ifdef SHADOWMAP_CASCADE\n\n				if ( inFrustum && inFrustumCount == 1 ) outgoingLight *= frustumColors[ i ];\n\n			#else\n\n				if ( inFrustum ) outgoingLight *= frustumColors[ i ];\n\n			#endif\n\n		#endif\n\n	}\n\n	// NOTE: I am unsure if this is correct in linear space.  -bhouston, Dec 29, 2014\n	shadowColor = inputToLinear( shadowColor );\n\n	outgoingLight = outgoingLight * shadowColor;\n\n#endif\n",THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n	#ifdef USE_SKINNING\n\n		vec4 worldPosition = modelMatrix * skinned;\n\n	#elif defined( USE_MORPHTARGETS )\n\n		vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n\n	#else\n\n		vec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n	uniform sampler2D shadowMap[ MAX_SHADOWS ];\n	uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform float shadowBias[ MAX_SHADOWS ];\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n	float unpackDepth( const in vec4 rgba_depth ) {\n\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		float depth = dot( rgba_depth, bit_shift );\n		return depth;\n\n	}\n\n#endif",THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n\n	#ifdef BONE_TEXTURE\n\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n\n			y = dy * ( y + 0.5 );\n\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n			mat4 bone = mat4( v1, v2, v3, v4 );\n\n			return bone;\n\n		}\n\n	#else\n\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n\n		}\n\n	#endif\n\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n	uniform float logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		#extension GL_EXT_frag_depth : enable\n		varying float vFragDepth;\n\n	#endif\n\n#endif",THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n	uniform sampler2D alphaMap;\n\n#endif\n",THREE.UniformsUtils={merge:function(a){for(var b={},c=0;c<a.length;c++){var d=this.clone(a[c]);for(var e in d)b[e]=d[e]}return b},clone:function(a){var b={};for(var c in a){b[c]={};for(var d in a[c]){var e=a[c][d];e instanceof THREE.Color||e instanceof THREE.Vector2||e instanceof THREE.Vector3||e instanceof THREE.Vector4||e instanceof THREE.Matrix4||e instanceof THREE.Texture?b[c][d]=e.clone():e instanceof Array?b[c][d]=e.slice():b[c][d]=e}}return b}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},pointLightDecay:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]},spotLightDecay:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"	#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"	#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"	outgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform vec3 emissive;","uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"	#ifdef DOUBLE_SIDED","		if ( gl_FrontFacing )","			outgoingLight += diffuseColor.rgb * vLightFront + emissive;","		else","			outgoingLight += diffuseColor.rgb * vLightBack + emissive;","	#else","		outgoingLight += diffuseColor.rgb * vLightFront + emissive;","	#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","#ifndef FLAT_SHADED","	varying vec3 vNormal;","#endif",THREE.ShaderChunk.common,THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED","	vNormal = normalize( transformedNormal );","#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"	vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define PHONG","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.alphamap_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphamap_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")
},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	#ifdef USE_SIZEATTENUATION","		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","	#else","		gl_PointSize = size;","	#endif","	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( psColor, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.alphatest_fragment,"	outgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"	vLineDistance = scale * lineDistance;","	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.common,THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	if ( mod( vLineDistance, totalSize ) > dashSize ) {","		discard;","	}","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( diffuse, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,THREE.ShaderChunk.color_fragment,"	outgoingLight = diffuseColor.rgb;",THREE.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT","		float depth = gl_FragDepthEXT / gl_FragCoord.w;","	#else","		float depth = gl_FragCoord.z / gl_FragCoord.w;","	#endif","	float color = 1.0 - smoothstep( mNear, mFar, depth );","	gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vNormal = normalize( normalMatrix * normal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vWorldPosition = transformDirection( position, modelMatrix );","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vWorldPosition = transformDirection( position, modelMatrix );","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","uniform float tFlip;","varying vec3 vWorldPosition;",THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","vec3 direction = normalize( vWorldPosition );","vec2 sampleUV;","sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );","sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;","gl_FragColor = texture2D( tEquirect, sampleUV );",THREE.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[THREE.ShaderChunk.common,THREE.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {","	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","	const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );","	res -= res.xxyz * bit_mask;","	return res;","}","void main() {",THREE.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT","		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );","	#else","		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","	#endif","}"].join("\n")}},THREE.WebGLRenderer=function(a){function b(a){a.__webglVertexBuffer=Ea.createBuffer(),a.__webglColorBuffer=Ea.createBuffer(),Fa.info.memory.geometries++}function c(a){a.__webglVertexBuffer=Ea.createBuffer(),a.__webglColorBuffer=Ea.createBuffer(),a.__webglLineDistanceBuffer=Ea.createBuffer(),Fa.info.memory.geometries++}function d(a){a.__webglVertexBuffer=Ea.createBuffer(),a.__webglNormalBuffer=Ea.createBuffer(),a.__webglTangentBuffer=Ea.createBuffer(),a.__webglColorBuffer=Ea.createBuffer(),a.__webglUVBuffer=Ea.createBuffer(),a.__webglUV2Buffer=Ea.createBuffer(),a.__webglSkinIndicesBuffer=Ea.createBuffer(),a.__webglSkinWeightsBuffer=Ea.createBuffer(),a.__webglFaceBuffer=Ea.createBuffer(),a.__webglLineBuffer=Ea.createBuffer();var b=a.numMorphTargets;if(b){a.__webglMorphTargetsBuffers=[];for(var c=0,d=b;d>c;c++)a.__webglMorphTargetsBuffers.push(Ea.createBuffer())}var e=a.numMorphNormals;if(e){a.__webglMorphNormalsBuffers=[];for(var c=0,d=e;d>c;c++)a.__webglMorphNormalsBuffers.push(Ea.createBuffer())}Fa.info.memory.geometries++}function e(a){var b=a.geometry,c=a.material,d=b.vertices.length;if(c.attributes){void 0===b.__webglCustomAttributesList&&(b.__webglCustomAttributesList=[]);for(var e in c.attributes){var f=c.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?g=4:"c"===f.type&&(g=3),f.size=g,f.array=new Float32Array(d*g),f.buffer=Ea.createBuffer(),f.buffer.belongsToAttribute=e,f.needsUpdate=!0}b.__webglCustomAttributesList.push(f)}}}function f(a,b){var c=a.vertices.length;a.__vertexArray=new Float32Array(3*c),a.__colorArray=new Float32Array(3*c),a.__webglParticleCount=c,e(b)}function g(a,b){var c=a.vertices.length;a.__vertexArray=new Float32Array(3*c),a.__colorArray=new Float32Array(3*c),a.__lineDistanceArray=new Float32Array(1*c),a.__webglLineCount=c,e(b)}function h(a,b){var c=b.geometry,d=a.faces3,e=3*d.length,f=1*d.length,g=3*d.length,h=i(b,a);a.__vertexArray=new Float32Array(3*e),a.__normalArray=new Float32Array(3*e),a.__colorArray=new Float32Array(3*e),a.__uvArray=new Float32Array(2*e),c.faceVertexUvs.length>1&&(a.__uv2Array=new Float32Array(2*e)),c.hasTangents&&(a.__tangentArray=new Float32Array(4*e)),b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinIndexArray=new Float32Array(4*e),a.__skinWeightArray=new Float32Array(4*e));var j=null!==ab.get("OES_element_index_uint")&&f>21845?Uint32Array:Uint16Array;a.__typeArray=j,a.__faceArray=new j(3*f),a.__lineArray=new j(2*g);var k=a.numMorphTargets;if(k){a.__morphTargetsArrays=[];for(var l=0,m=k;m>l;l++)a.__morphTargetsArrays.push(new Float32Array(3*e))}var n=a.numMorphNormals;if(n){a.__morphNormalsArrays=[];for(var l=0,m=n;m>l;l++)a.__morphNormalsArrays.push(new Float32Array(3*e))}if(a.__webglFaceCount=3*f,a.__webglLineCount=2*g,h.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var o in h.attributes){var p=h.attributes[o],q={};for(var r in p)q[r]=p[r];if(!q.__webglInitialized||q.createUniqueBuffers){q.__webglInitialized=!0;var s=1;"v2"===q.type?s=2:"v3"===q.type?s=3:"v4"===q.type?s=4:"c"===q.type&&(s=3),q.size=s,q.array=new Float32Array(e*s),q.buffer=Ea.createBuffer(),q.buffer.belongsToAttribute=o,p.needsUpdate=!0,q.__original=p}a.__webglCustomAttributesList.push(q)}}a.__inittedArrays=!0}function i(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function j(a){return a instanceof THREE.MeshPhongMaterial==!1&&a.shading===THREE.FlatShading}function k(a,b,c){var d,e,f,g,h,i,j,k,l,m,n,o=a.vertices,p=o.length,q=a.colors,r=q.length,s=a.__vertexArray,t=a.__colorArray,u=a.verticesNeedUpdate,v=a.colorsNeedUpdate,w=a.__webglCustomAttributesList;if(u){for(d=0;p>d;d++)f=o[d],g=3*d,s[g]=f.x,s[g+1]=f.y,s[g+2]=f.z;Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglVertexBuffer),Ea.bufferData(Ea.ARRAY_BUFFER,s,b)}if(v){for(e=0;r>e;e++)h=q[e],g=3*e,t[g]=h.r,t[g+1]=h.g,t[g+2]=h.b;Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglColorBuffer),Ea.bufferData(Ea.ARRAY_BUFFER,t,b)}if(w)for(i=0,j=w.length;j>i;i++){if(n=w[i],n.needsUpdate&&(void 0===n.boundTo||"vertices"===n.boundTo))if(l=n.value.length,g=0,1===n.size)for(k=0;l>k;k++)n.array[k]=n.value[k];else if(2===n.size)for(k=0;l>k;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,g+=2;else if(3===n.size)if("c"===n.type)for(k=0;l>k;k++)m=n.value[k],n.array[g]=m.r,n.array[g+1]=m.g,n.array[g+2]=m.b,g+=3;else for(k=0;l>k;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,n.array[g+2]=m.z,g+=3;else if(4===n.size)for(k=0;l>k;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,n.array[g+2]=m.z,n.array[g+3]=m.w,g+=4;Ea.bindBuffer(Ea.ARRAY_BUFFER,n.buffer),Ea.bufferData(Ea.ARRAY_BUFFER,n.array,b),n.needsUpdate=!1}}function l(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o=a.vertices,p=a.colors,q=a.lineDistances,r=o.length,s=p.length,t=q.length,u=a.__vertexArray,v=a.__colorArray,w=a.__lineDistanceArray,x=a.verticesNeedUpdate,y=a.colorsNeedUpdate,z=a.lineDistancesNeedUpdate,A=a.__webglCustomAttributesList;if(x){for(c=0;r>c;c++)f=o[c],g=3*c,u[g]=f.x,u[g+1]=f.y,u[g+2]=f.z;Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglVertexBuffer),Ea.bufferData(Ea.ARRAY_BUFFER,u,b)}if(y){for(d=0;s>d;d++)h=p[d],g=3*d,v[g]=h.r,v[g+1]=h.g,v[g+2]=h.b;Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglColorBuffer),Ea.bufferData(Ea.ARRAY_BUFFER,v,b)}if(z){for(e=0;t>e;e++)w[e]=q[e];Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglLineDistanceBuffer),Ea.bufferData(Ea.ARRAY_BUFFER,w,b)}if(A)for(i=0,j=A.length;j>i;i++)if(n=A[i],n.needsUpdate&&(void 0===n.boundTo||"vertices"===n.boundTo)){if(g=0,l=n.value.length,1===n.size)for(k=0;l>k;k++)n.array[k]=n.value[k];else if(2===n.size)for(k=0;l>k;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,g+=2;else if(3===n.size)if("c"===n.type)for(k=0;l>k;k++)m=n.value[k],n.array[g]=m.r,n.array[g+1]=m.g,n.array[g+2]=m.b,g+=3;else for(k=0;l>k;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,n.array[g+2]=m.z,g+=3;else if(4===n.size)for(k=0;l>k;k++)m=n.value[k],n.array[g]=m.x,n.array[g+1]=m.y,n.array[g+2]=m.z,n.array[g+3]=m.w,g+=4;Ea.bindBuffer(Ea.ARRAY_BUFFER,n.buffer),Ea.bufferData(Ea.ARRAY_BUFFER,n.array,b),n.needsUpdate=!1}}function m(a,b,c,d,e){if(a.__inittedArrays){var f,g,h,i,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W=j(e),X=0,Y=0,Z=0,$=0,_=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=a.__vertexArray,ia=a.__uvArray,ja=a.__uv2Array,ka=a.__normalArray,la=a.__tangentArray,ma=a.__colorArray,na=a.__skinIndexArray,oa=a.__skinWeightArray,pa=a.__morphTargetsArrays,qa=a.__morphNormalsArrays,ra=a.__webglCustomAttributesList,sa=a.__faceArray,ta=a.__lineArray,ua=b.geometry,va=ua.verticesNeedUpdate,wa=ua.elementsNeedUpdate,xa=ua.uvsNeedUpdate,ya=ua.normalsNeedUpdate,za=ua.tangentsNeedUpdate,Aa=ua.colorsNeedUpdate,Ba=ua.morphTargetsNeedUpdate,Ca=ua.vertices,Da=a.faces3,Fa=ua.faces,Ga=ua.faceVertexUvs[0],Ha=ua.faceVertexUvs[1],Ia=ua.skinIndices,Ja=ua.skinWeights,Ka=ua.morphTargets,La=ua.morphNormals;if(va){for(f=0,g=Da.length;g>f;f++)i=Fa[Da[f]],r=Ca[i.a],s=Ca[i.b],t=Ca[i.c],ha[Y]=r.x,ha[Y+1]=r.y,ha[Y+2]=r.z,ha[Y+3]=s.x,ha[Y+4]=s.y,ha[Y+5]=s.z,ha[Y+6]=t.x,ha[Y+7]=t.y,ha[Y+8]=t.z,Y+=9;Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglVertexBuffer),Ea.bufferData(Ea.ARRAY_BUFFER,ha,c)}if(Ba)for(O=0,P=Ka.length;P>O;O++){for(fa=0,f=0,g=Da.length;g>f;f++)S=Da[f],i=Fa[S],r=Ka[O].vertices[i.a],s=Ka[O].vertices[i.b],t=Ka[O].vertices[i.c],Q=pa[O],Q[fa]=r.x,Q[fa+1]=r.y,Q[fa+2]=r.z,Q[fa+3]=s.x,Q[fa+4]=s.y,Q[fa+5]=s.z,Q[fa+6]=t.x,Q[fa+7]=t.y,Q[fa+8]=t.z,e.morphNormals&&(W?(x=La[O].faceNormals[S],y=x,z=x):(T=La[O].vertexNormals[S],x=T.a,y=T.b,z=T.c),R=qa[O],R[fa]=x.x,R[fa+1]=x.y,R[fa+2]=x.z,R[fa+3]=y.x,R[fa+4]=y.y,R[fa+5]=y.z,R[fa+6]=z.x,R[fa+7]=z.y,R[fa+8]=z.z),fa+=9;Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglMorphTargetsBuffers[O]),Ea.bufferData(Ea.ARRAY_BUFFER,pa[O],c),e.morphNormals&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglMorphNormalsBuffers[O]),Ea.bufferData(Ea.ARRAY_BUFFER,qa[O],c))}if(Ja.length){for(f=0,g=Da.length;g>f;f++)i=Fa[Da[f]],D=Ja[i.a],E=Ja[i.b],F=Ja[i.c],oa[ea]=D.x,oa[ea+1]=D.y,oa[ea+2]=D.z,oa[ea+3]=D.w,oa[ea+4]=E.x,oa[ea+5]=E.y,oa[ea+6]=E.z,oa[ea+7]=E.w,oa[ea+8]=F.x,oa[ea+9]=F.y,oa[ea+10]=F.z,oa[ea+11]=F.w,G=Ia[i.a],H=Ia[i.b],I=Ia[i.c],na[ea]=G.x,na[ea+1]=G.y,na[ea+2]=G.z,na[ea+3]=G.w,na[ea+4]=H.x,na[ea+5]=H.y,na[ea+6]=H.z,na[ea+7]=H.w,na[ea+8]=I.x,na[ea+9]=I.y,na[ea+10]=I.z,na[ea+11]=I.w,ea+=12;ea>0&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglSkinIndicesBuffer),Ea.bufferData(Ea.ARRAY_BUFFER,na,c),Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglSkinWeightsBuffer),Ea.bufferData(Ea.ARRAY_BUFFER,oa,c))}if(Aa){for(f=0,g=Da.length;g>f;f++)i=Fa[Da[f]],m=i.vertexColors,n=i.color,3===m.length&&e.vertexColors===THREE.VertexColors?(A=m[0],B=m[1],C=m[2]):(A=n,B=n,C=n),ma[da]=A.r,ma[da+1]=A.g,ma[da+2]=A.b,ma[da+3]=B.r,ma[da+4]=B.g,ma[da+5]=B.b,ma[da+6]=C.r,ma[da+7]=C.g,ma[da+8]=C.b,da+=9;da>0&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglColorBuffer),Ea.bufferData(Ea.ARRAY_BUFFER,ma,c))}if(za&&ua.hasTangents){for(f=0,g=Da.length;g>f;f++)i=Fa[Da[f]],o=i.vertexTangents,u=o[0],v=o[1],w=o[2],la[ba]=u.x,la[ba+1]=u.y,la[ba+2]=u.z,la[ba+3]=u.w,la[ba+4]=v.x,la[ba+5]=v.y,la[ba+6]=v.z,la[ba+7]=v.w,la[ba+8]=w.x,la[ba+9]=w.y,la[ba+10]=w.z,la[ba+11]=w.w,ba+=12;Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglTangentBuffer),Ea.bufferData(Ea.ARRAY_BUFFER,la,c)}if(ya){for(f=0,g=Da.length;g>f;f++)if(i=Fa[Da[f]],k=i.vertexNormals,l=i.normal,3===k.length&&W===!1)for(J=0;3>J;J++)L=k[J],ka[aa]=L.x,ka[aa+1]=L.y,ka[aa+2]=L.z,aa+=3;else for(J=0;3>J;J++)ka[aa]=l.x,ka[aa+1]=l.y,ka[aa+2]=l.z,aa+=3;Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglNormalBuffer),Ea.bufferData(Ea.ARRAY_BUFFER,ka,c)}if(xa&&Ga){for(f=0,g=Da.length;g>f;f++)if(h=Da[f],p=Ga[h],void 0!==p)for(J=0;3>J;J++)M=p[J],ia[Z]=M.x,ia[Z+1]=M.y,Z+=2;Z>0&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglUVBuffer),Ea.bufferData(Ea.ARRAY_BUFFER,ia,c))}if(xa&&Ha){for(f=0,g=Da.length;g>f;f++)if(h=Da[f],q=Ha[h],void 0!==q)for(J=0;3>J;J++)N=q[J],ja[$]=N.x,ja[$+1]=N.y,$+=2;$>0&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglUV2Buffer),Ea.bufferData(Ea.ARRAY_BUFFER,ja,c))}if(wa){for(f=0,g=Da.length;g>f;f++)sa[_]=X,sa[_+1]=X+1,sa[_+2]=X+2,_+=3,ta[ca]=X,ta[ca+1]=X+1,ta[ca+2]=X,ta[ca+3]=X+2,ta[ca+4]=X+1,ta[ca+5]=X+2,ca+=6,X+=3;Ea.bindBuffer(Ea.ELEMENT_ARRAY_BUFFER,a.__webglFaceBuffer),Ea.bufferData(Ea.ELEMENT_ARRAY_BUFFER,sa,c),Ea.bindBuffer(Ea.ELEMENT_ARRAY_BUFFER,a.__webglLineBuffer),Ea.bufferData(Ea.ELEMENT_ARRAY_BUFFER,ta,c)}if(ra)for(J=0,K=ra.length;K>J;J++)if(V=ra[J],V.__original.needsUpdate){if(ga=0,1===V.size){if(void 0===V.boundTo||"vertices"===V.boundTo)for(f=0,g=Da.length;g>f;f++)i=Fa[Da[f]],V.array[ga]=V.value[i.a],V.array[ga+1]=V.value[i.b],V.array[ga+2]=V.value[i.c],ga+=3;else if("faces"===V.boundTo)for(f=0,g=Da.length;g>f;f++)U=V.value[Da[f]],V.array[ga]=U,V.array[ga+1]=U,V.array[ga+2]=U,ga+=3}else if(2===V.size){if(void 0===V.boundTo||"vertices"===V.boundTo)for(f=0,g=Da.length;g>f;f++)i=Fa[Da[f]],r=V.value[i.a],s=V.value[i.b],t=V.value[i.c],V.array[ga]=r.x,V.array[ga+1]=r.y,V.array[ga+2]=s.x,V.array[ga+3]=s.y,V.array[ga+4]=t.x,V.array[ga+5]=t.y,ga+=6;else if("faces"===V.boundTo)for(f=0,g=Da.length;g>f;f++)U=V.value[Da[f]],r=U,s=U,t=U,V.array[ga]=r.x,V.array[ga+1]=r.y,V.array[ga+2]=s.x,V.array[ga+3]=s.y,V.array[ga+4]=t.x,V.array[ga+5]=t.y,ga+=6}else if(3===V.size){var Ma;if(Ma="c"===V.type?["r","g","b"]:["x","y","z"],void 0===V.boundTo||"vertices"===V.boundTo)for(f=0,g=Da.length;g>f;f++)i=Fa[Da[f]],r=V.value[i.a],s=V.value[i.b],t=V.value[i.c],V.array[ga]=r[Ma[0]],V.array[ga+1]=r[Ma[1]],V.array[ga+2]=r[Ma[2]],V.array[ga+3]=s[Ma[0]],V.array[ga+4]=s[Ma[1]],V.array[ga+5]=s[Ma[2]],V.array[ga+6]=t[Ma[0]],V.array[ga+7]=t[Ma[1]],V.array[ga+8]=t[Ma[2]],ga+=9;else if("faces"===V.boundTo)for(f=0,g=Da.length;g>f;f++)U=V.value[Da[f]],r=U,s=U,t=U,V.array[ga]=r[Ma[0]],V.array[ga+1]=r[Ma[1]],V.array[ga+2]=r[Ma[2]],V.array[ga+3]=s[Ma[0]],V.array[ga+4]=s[Ma[1]],V.array[ga+5]=s[Ma[2]],V.array[ga+6]=t[Ma[0]],V.array[ga+7]=t[Ma[1]],V.array[ga+8]=t[Ma[2]],ga+=9;else if("faceVertices"===V.boundTo)for(f=0,g=Da.length;g>f;f++)U=V.value[Da[f]],r=U[0],s=U[1],t=U[2],V.array[ga]=r[Ma[0]],V.array[ga+1]=r[Ma[1]],V.array[ga+2]=r[Ma[2]],V.array[ga+3]=s[Ma[0]],V.array[ga+4]=s[Ma[1]],V.array[ga+5]=s[Ma[2]],V.array[ga+6]=t[Ma[0]],V.array[ga+7]=t[Ma[1]],V.array[ga+8]=t[Ma[2]],ga+=9}else if(4===V.size)if(void 0===V.boundTo||"vertices"===V.boundTo)for(f=0,g=Da.length;g>f;f++)i=Fa[Da[f]],r=V.value[i.a],s=V.value[i.b],t=V.value[i.c],V.array[ga]=r.x,V.array[ga+1]=r.y,V.array[ga+2]=r.z,V.array[ga+3]=r.w,V.array[ga+4]=s.x,V.array[ga+5]=s.y,V.array[ga+6]=s.z,V.array[ga+7]=s.w,V.array[ga+8]=t.x,V.array[ga+9]=t.y,V.array[ga+10]=t.z,V.array[ga+11]=t.w,ga+=12;else if("faces"===V.boundTo)for(f=0,g=Da.length;g>f;f++)U=V.value[Da[f]],r=U,s=U,t=U,V.array[ga]=r.x,V.array[ga+1]=r.y,V.array[ga+2]=r.z,V.array[ga+3]=r.w,V.array[ga+4]=s.x,V.array[ga+5]=s.y,V.array[ga+6]=s.z,V.array[ga+7]=s.w,V.array[ga+8]=t.x,V.array[ga+9]=t.y,V.array[ga+10]=t.z,V.array[ga+11]=t.w,ga+=12;else if("faceVertices"===V.boundTo)for(f=0,g=Da.length;g>f;f++)U=V.value[Da[f]],r=U[0],s=U[1],t=U[2],V.array[ga]=r.x,V.array[ga+1]=r.y,V.array[ga+2]=r.z,V.array[ga+3]=r.w,V.array[ga+4]=s.x,V.array[ga+5]=s.y,V.array[ga+6]=s.z,V.array[ga+7]=s.w,V.array[ga+8]=t.x,V.array[ga+9]=t.y,V.array[ga+10]=t.z,V.array[ga+11]=t.w,ga+=12;Ea.bindBuffer(Ea.ARRAY_BUFFER,V.buffer),Ea.bufferData(Ea.ARRAY_BUFFER,V.array,c)}d&&(delete a.__inittedArrays,delete a.__colorArray,delete a.__normalArray,delete a.__tangentArray,delete a.__uvArray,delete a.__uv2Array,delete a.__faceArray,delete a.__vertexArray,delete a.__lineArray,delete a.__skinIndexArray,delete a.__skinWeightArray)}}function n(a,b,c,d){for(var e=c.attributes,f=b.attributes,g=b.attributesKeys,h=0,i=g.length;i>h;h++){var j=g[h],k=f[j];if(k>=0){var l=e[j];if(void 0!==l){var m=l.itemSize;Ea.bindBuffer(Ea.ARRAY_BUFFER,l.buffer),_a.enableAttribute(k),Ea.vertexAttribPointer(k,m,Ea.FLOAT,!1,0,d*m*4)}else void 0!==a.defaultAttributeValues&&(2===a.defaultAttributeValues[j].length?Ea.vertexAttrib2fv(k,a.defaultAttributeValues[j]):3===a.defaultAttributeValues[j].length&&Ea.vertexAttrib3fv(k,a.defaultAttributeValues[j]))}}_a.disableUnusedAttributes()}function o(a,b,c){var d=a.program.attributes;if(-1!==c.morphTargetBase&&d.position>=0?(Ea.bindBuffer(Ea.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[c.morphTargetBase]),_a.enableAttribute(d.position),Ea.vertexAttribPointer(d.position,3,Ea.FLOAT,!1,0,0)):d.position>=0&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,b.__webglVertexBuffer),_a.enableAttribute(d.position),Ea.vertexAttribPointer(d.position,3,Ea.FLOAT,!1,0,0)),c.morphTargetForcedOrder.length)for(var e,f=0,g=c.morphTargetForcedOrder,h=c.morphTargetInfluences;f<a.numSupportedMorphTargets&&f<g.length;)e=d["morphTarget"+f],e>=0&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[g[f]]),_a.enableAttribute(e),Ea.vertexAttribPointer(e,3,Ea.FLOAT,!1,0,0)),e=d["morphNormal"+f],e>=0&&a.morphNormals&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,b.__webglMorphNormalsBuffers[g[f]]),_a.enableAttribute(e),Ea.vertexAttribPointer(e,3,Ea.FLOAT,!1,0,0)),c.__webglMorphTargetInfluences[f]=h[g[f]],f++;else{var i=[],h=c.morphTargetInfluences,j=c.geometry.morphTargets;h.length>j.length&&(console.warn("THREE.WebGLRenderer: Influences array is bigger than morphTargets array."),h.length=j.length);for(var k=0,l=h.length;l>k;k++){var m=h[k];i.push([m,k])}i.length>a.numSupportedMorphTargets?(i.sort(r),i.length=a.numSupportedMorphTargets):i.length>a.numSupportedMorphNormals?i.sort(r):0===i.length&&i.push([0,0]);for(var e,f=0,n=a.numSupportedMorphTargets;n>f;f++)if(i[f]){var o=i[f][1];e=d["morphTarget"+f],e>=0&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[o]),_a.enableAttribute(e),Ea.vertexAttribPointer(e,3,Ea.FLOAT,!1,0,0)),e=d["morphNormal"+f],e>=0&&a.morphNormals&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,b.__webglMorphNormalsBuffers[o]),_a.enableAttribute(e),Ea.vertexAttribPointer(e,3,Ea.FLOAT,!1,0,0)),c.__webglMorphTargetInfluences[f]=h[o]}else c.__webglMorphTargetInfluences[f]=0}null!==a.program.uniforms.morphTargetInfluences&&Ea.uniform1fv(a.program.uniforms.morphTargetInfluences,c.__webglMorphTargetInfluences)}function p(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.material.id!==b.material.id?a.material.id-b.material.id:a.z!==b.z?a.z-b.z:a.id-b.id}function q(a,b){return a.object.renderOrder!==b.object.renderOrder?a.object.renderOrder-b.object.renderOrder:a.z!==b.z?b.z-a.z:a.id-b.id}function r(a,b){return b[0]-a[0]}function s(a){if(a.visible!==!1){if(a instanceof THREE.Scene||a instanceof THREE.Group);else if(x(a),a instanceof THREE.Light)xa.push(a);else if(a instanceof THREE.Sprite)Ca.push(a);else if(a instanceof THREE.LensFlare)Da.push(a);else{var b=ya[a.id];if(b&&(a.frustumCulled===!1||Ta.intersectsObject(a)===!0))for(var c=0,d=b.length;d>c;c++){var e=b[c];w(e),e.render=!0,Fa.sortObjects===!0&&(Va.setFromMatrixPosition(a.matrixWorld),Va.applyProjection(Ua),e.z=Va.z)}}for(var c=0,d=a.children.length;d>c;c++)s(a.children[c])}}function t(a,b,c,d,e){for(var f,g=0,h=a.length;h>g;g++){var i=a[g],j=i.object,k=i.buffer;if(X(j,b),e)f=e;else{if(f=i.material,!f)continue;I(f)}Fa.setMaterialFaces(f),k instanceof THREE.BufferGeometry?Fa.renderBufferDirect(b,c,d,f,k,j):Fa.renderBuffer(b,c,d,f,k,j)}}function u(a,b,c,d,e,f){for(var g,h=0,i=a.length;i>h;h++){var j=a[h],k=j.object;if(k.visible){if(f)g=f;else{if(g=j[b],!g)continue;I(g)}Fa.renderImmediateObject(c,d,e,g,k)}}}function v(a){var b=a.object,c=b.material;c.transparent?(a.transparent=c,a.opaque=null):(a.opaque=c,a.transparent=null)}function w(a){var b=a.object,c=a.buffer,d=b.geometry,e=b.material;if(e instanceof THREE.MeshFaceMaterial){var f=d instanceof THREE.BufferGeometry?0:c.materialIndex;e=e.materials[f],a.material=e,e.transparent?Ba.push(a):Aa.push(a)}else e&&(a.material=e,e.transparent?Ba.push(a):Aa.push(a))}function x(a){void 0===a.__webglInit&&(a.__webglInit=!0,a._modelViewMatrix=new THREE.Matrix4,a._normalMatrix=new THREE.Matrix3,a.addEventListener("removed",ub));var d=a.geometry;if(void 0===d||void 0===d.__webglInit&&(d.__webglInit=!0,d.addEventListener("dispose",vb),d instanceof THREE.BufferGeometry?Fa.info.memory.geometries++:a instanceof THREE.Mesh?z(a,d):a instanceof THREE.Line?void 0===d.__webglVertexBuffer&&(c(d),g(d,a),d.verticesNeedUpdate=!0,d.colorsNeedUpdate=!0,d.lineDistancesNeedUpdate=!0):a instanceof THREE.PointCloud&&void 0===d.__webglVertexBuffer&&(b(d),f(d,a),d.verticesNeedUpdate=!0,d.colorsNeedUpdate=!0)),void 0===a.__webglActive)if(a.__webglActive=!0,a instanceof THREE.Mesh){if(d instanceof THREE.BufferGeometry)A(ya,d,a);else if(d instanceof THREE.Geometry)for(var e=Eb[d.id],h=0,i=e.length;i>h;h++)A(ya,e[h],a)}else a instanceof THREE.Line||a instanceof THREE.PointCloud?A(ya,d,a):(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)&&B(za,a)}function y(a,b){for(var c,d,e=ab.get("OES_element_index_uint")?4294967296:65535,f={},g=a.morphTargets.length,h=a.morphNormals.length,i={},j=[],k=0,l=a.faces.length;l>k;k++){var m=a.faces[k],n=b?m.materialIndex:0;n in f||(f[n]={hash:n,counter:0}),c=f[n].hash+"_"+f[n].counter,c in i||(d={id:Fb++,faces3:[],materialIndex:n,vertices:0,numMorphTargets:g,numMorphNormals:h},i[c]=d,j.push(d)),i[c].vertices+3>e&&(f[n].counter+=1,c=f[n].hash+"_"+f[n].counter,c in i||(d={id:Fb++,faces3:[],materialIndex:n,vertices:0,numMorphTargets:g,numMorphNormals:h},i[c]=d,j.push(d))),i[c].faces3.push(k),i[c].vertices+=3}return j}function z(a,b){var c=a.material,e=!1;(void 0===Eb[b.id]||b.groupsNeedUpdate===!0)&&(delete ya[a.id],Eb[b.id]=y(b,c instanceof THREE.MeshFaceMaterial),b.groupsNeedUpdate=!1);for(var f=Eb[b.id],g=0,i=f.length;i>g;g++){var j=f[g];void 0===j.__webglVertexBuffer?(d(j),h(j,a),b.verticesNeedUpdate=!0,b.morphTargetsNeedUpdate=!0,b.elementsNeedUpdate=!0,b.uvsNeedUpdate=!0,b.normalsNeedUpdate=!0,b.tangentsNeedUpdate=!0,b.colorsNeedUpdate=!0,e=!0):e=!1,(e||void 0===a.__webglActive)&&A(ya,j,a)}a.__webglActive=!0}function A(a,b,c){var d=c.id;a[d]=a[d]||[],a[d].push({id:d,buffer:b,object:c,material:null,z:0})}function B(a,b){a.push({id:null,object:b,opaque:null,transparent:null,z:0})}function C(a){var b=a.geometry;if(b instanceof THREE.BufferGeometry)for(var c=b.attributes,d=b.attributesKeys,e=0,f=d.length;f>e;e++){var g=d[e],h=c[g],j="index"===g?Ea.ELEMENT_ARRAY_BUFFER:Ea.ARRAY_BUFFER;void 0===h.buffer?(h.buffer=Ea.createBuffer(),Ea.bindBuffer(j,h.buffer),Ea.bufferData(j,h.array,h instanceof THREE.DynamicBufferAttribute?Ea.DYNAMIC_DRAW:Ea.STATIC_DRAW),h.needsUpdate=!1):h.needsUpdate===!0&&(Ea.bindBuffer(j,h.buffer),void 0===h.updateRange||-1===h.updateRange.count?Ea.bufferSubData(j,0,h.array):0===h.updateRange.count?console.error("THREE.WebGLRenderer.updateObject: using updateRange for THREE.DynamicBufferAttribute and marked as needsUpdate but count is 0, ensure you are using set methods or updating manually."):(Ea.bufferSubData(j,h.updateRange.offset*h.array.BYTES_PER_ELEMENT,h.array.subarray(h.updateRange.offset,h.updateRange.offset+h.updateRange.count)),h.updateRange.count=0),h.needsUpdate=!1)}else if(a instanceof THREE.Mesh){b.groupsNeedUpdate===!0&&z(a,b);for(var n=Eb[b.id],e=0,o=n.length;o>e;e++){var p=n[e],q=i(a,p),r=q.attributes&&D(q);(b.verticesNeedUpdate||b.morphTargetsNeedUpdate||b.elementsNeedUpdate||b.uvsNeedUpdate||b.normalsNeedUpdate||b.colorsNeedUpdate||b.tangentsNeedUpdate||r)&&m(p,a,Ea.DYNAMIC_DRAW,!b.dynamic,q)}b.verticesNeedUpdate=!1,b.morphTargetsNeedUpdate=!1,b.elementsNeedUpdate=!1,b.uvsNeedUpdate=!1,b.normalsNeedUpdate=!1,b.colorsNeedUpdate=!1,b.tangentsNeedUpdate=!1,q.attributes&&E(q)}else if(a instanceof THREE.Line){var q=i(a,b),r=q.attributes&&D(q);(b.verticesNeedUpdate||b.colorsNeedUpdate||b.lineDistancesNeedUpdate||r)&&l(b,Ea.DYNAMIC_DRAW),b.verticesNeedUpdate=!1,b.colorsNeedUpdate=!1,b.lineDistancesNeedUpdate=!1,q.attributes&&E(q)}else if(a instanceof THREE.PointCloud){var q=i(a,b),r=q.attributes&&D(q);(b.verticesNeedUpdate||b.colorsNeedUpdate||r)&&k(b,Ea.DYNAMIC_DRAW,a),b.verticesNeedUpdate=!1,b.colorsNeedUpdate=!1,q.attributes&&E(q)}}function D(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function E(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function F(a){a instanceof THREE.Mesh||a instanceof THREE.PointCloud||a instanceof THREE.Line?delete ya[a.id]:(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)&&G(za,a),delete a.__webglInit,delete a._modelViewMatrix,delete a._normalMatrix,delete a.__webglActive}function G(a,b){for(var c=a.length-1;c>=0;c--)a[c].object===b&&a.splice(c,1)}function H(a,b,c,d){a.addEventListener("dispose",yb);var e=Gb[a.type];if(e){var f=THREE.ShaderLib[e];a.__webglShader={uniforms:THREE.UniformsUtils.clone(f.uniforms),vertexShader:f.vertexShader,fragmentShader:f.fragmentShader}}else a.__webglShader={uniforms:a.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader};var g=ia(b),h=ja(b),i=ha(d),j={precision:na,supportsVertexTextures:ib,map:!!a.map,envMap:!!a.envMap,envMapMode:a.envMap&&a.envMap.mapping,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,alphaMap:!!a.alphaMap,combine:a.combine,vertexColors:a.vertexColors,fog:c,useFog:a.fog,fogExp:c instanceof THREE.FogExp2,flatShading:a.shading===THREE.FlatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:ua,skinning:a.skinning,maxBones:i,useVertexTexture:jb&&d&&d.skeleton&&d.skeleton.useVertexTexture,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:Fa.maxMorphTargets,maxMorphNormals:Fa.maxMorphNormals,maxDirLights:g.directional,maxPointLights:g.point,maxSpotLights:g.spot,maxHemiLights:g.hemi,maxShadows:h,shadowMapEnabled:Fa.shadowMapEnabled&&d.receiveShadow&&h>0,shadowMapType:Fa.shadowMapType,shadowMapDebug:Fa.shadowMapDebug,shadowMapCascade:Fa.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide},k=[];if(e?k.push(e):(k.push(a.fragmentShader),k.push(a.vertexShader)),void 0!==a.defines)for(var l in a.defines)k.push(l),k.push(a.defines[l]);for(var l in j)k.push(l),k.push(j[l]);for(var m,n=k.join(),o=0,p=Ga.length;p>o;o++){var q=Ga[o];if(q.code===n){m=q,m.usedTimes++;break}}void 0===m&&(m=new THREE.WebGLProgram(Fa,n,a,j),Ga.push(m),Fa.info.memory.programs=Ga.length),a.program=m;var r=m.attributes;if(a.morphTargets){a.numSupportedMorphTargets=0;for(var s,t="morphTarget",u=0;u<Fa.maxMorphTargets;u++)s=t+u,r[s]>=0&&a.numSupportedMorphTargets++}if(a.morphNormals){a.numSupportedMorphNormals=0;var s,t="morphNormal";for(u=0;u<Fa.maxMorphNormals;u++)s=t+u,r[s]>=0&&a.numSupportedMorphNormals++}a.uniformsList=[];for(var v in a.__webglShader.uniforms){var w=a.program.uniforms[v];w&&a.uniformsList.push([a.__webglShader.uniforms[v],w])}}function I(a){a.transparent===!0?_a.setBlending(a.blending,a.blendEquation,a.blendSrc,a.blendDst,a.blendEquationAlpha,a.blendSrcAlpha,a.blendDstAlpha):_a.setBlending(THREE.NoBlending),_a.setDepthTest(a.depthTest),_a.setDepthWrite(a.depthWrite),_a.setColorWrite(a.colorWrite),
_a.setPolygonOffset(a.polygonOffset,a.polygonOffsetFactor,a.polygonOffsetUnits)}function J(a,b,c,d,e){Ma=0,d.needsUpdate&&(d.program&&Db(d),H(d,b,c,e),d.needsUpdate=!1),d.morphTargets&&(e.__webglMorphTargetInfluences||(e.__webglMorphTargetInfluences=new Float32Array(Fa.maxMorphTargets)));var f=!1,g=!1,h=!1,i=d.program,j=i.uniforms,k=d.__webglShader.uniforms;if(i.id!==Ha&&(Ea.useProgram(i.program),Ha=i.id,f=!0,g=!0,h=!0),d.id!==Ja&&(-1===Ja&&(h=!0),Ja=d.id,g=!0),(f||a!==La)&&(Ea.uniformMatrix4fv(j.projectionMatrix,!1,a.projectionMatrix.elements),ua&&Ea.uniform1f(j.logDepthBufFC,2/(Math.log(a.far+1)/Math.LN2)),a!==La&&(La=a),(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==j.cameraPosition&&(Va.setFromMatrixPosition(a.matrixWorld),Ea.uniform3f(j.cameraPosition,Va.x,Va.y,Va.z)),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshBasicMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&null!==j.viewMatrix&&Ea.uniformMatrix4fv(j.viewMatrix,!1,a.matrixWorldInverse.elements)),d.skinning)if(e.bindMatrix&&null!==j.bindMatrix&&Ea.uniformMatrix4fv(j.bindMatrix,!1,e.bindMatrix.elements),e.bindMatrixInverse&&null!==j.bindMatrixInverse&&Ea.uniformMatrix4fv(j.bindMatrixInverse,!1,e.bindMatrixInverse.elements),jb&&e.skeleton&&e.skeleton.useVertexTexture){if(null!==j.boneTexture){var l=V();Ea.uniform1i(j.boneTexture,l),Fa.setTexture(e.skeleton.boneTexture,l)}null!==j.boneTextureWidth&&Ea.uniform1i(j.boneTextureWidth,e.skeleton.boneTextureWidth),null!==j.boneTextureHeight&&Ea.uniform1i(j.boneTextureHeight,e.skeleton.boneTextureHeight)}else e.skeleton&&e.skeleton.boneMatrices&&null!==j.boneGlobalMatrices&&Ea.uniformMatrix4fv(j.boneGlobalMatrices,!1,e.skeleton.boneMatrices);return g&&(c&&d.fog&&O(k,c),(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights)&&(Xa&&(h=!0,Z(b),Xa=!1),h?(R(k,Ya),S(k,!0)):S(k,!1)),(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial)&&K(k,d),d instanceof THREE.LineBasicMaterial?L(k,d):d instanceof THREE.LineDashedMaterial?(L(k,d),M(k,d)):d instanceof THREE.PointCloudMaterial?N(k,d):d instanceof THREE.MeshPhongMaterial?P(k,d):d instanceof THREE.MeshLambertMaterial?Q(k,d):d instanceof THREE.MeshDepthMaterial?(k.mNear.value=a.near,k.mFar.value=a.far,k.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(k.opacity.value=d.opacity),e.receiveShadow&&!d._shadowPass&&T(k,b),W(d.uniformsList)),U(j,e),null!==j.modelMatrix&&Ea.uniformMatrix4fv(j.modelMatrix,!1,e.matrixWorld.elements),i}function K(a,b){a.opacity.value=b.opacity,a.diffuse.value=b.color,a.map.value=b.map,a.lightMap.value=b.lightMap,a.specularMap.value=b.specularMap,a.alphaMap.value=b.alphaMap,b.bumpMap&&(a.bumpMap.value=b.bumpMap,a.bumpScale.value=b.bumpScale),b.normalMap&&(a.normalMap.value=b.normalMap,a.normalScale.value.copy(b.normalScale));var c;if(b.map?c=b.map:b.specularMap?c=b.specularMap:b.normalMap?c=b.normalMap:b.bumpMap?c=b.bumpMap:b.alphaMap&&(c=b.alphaMap),void 0!==c){var d=c.offset,e=c.repeat;a.offsetRepeat.value.set(d.x,d.y,e.x,e.y)}a.envMap.value=b.envMap,a.flipEnvMap.value=b.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,a.reflectivity.value=b.reflectivity,a.refractionRatio.value=b.refractionRatio}function L(a,b){a.diffuse.value=b.color,a.opacity.value=b.opacity}function M(a,b){a.dashSize.value=b.dashSize,a.totalSize.value=b.dashSize+b.gapSize,a.scale.value=b.scale}function N(a,b){if(a.psColor.value=b.color,a.opacity.value=b.opacity,a.size.value=b.size,a.scale.value=ka.height/2,a.map.value=b.map,null!==b.map){var c=b.map.offset,d=b.map.repeat;a.offsetRepeat.value.set(c.x,c.y,d.x,d.y)}}function O(a,b){a.fogColor.value=b.color,b instanceof THREE.Fog?(a.fogNear.value=b.near,a.fogFar.value=b.far):b instanceof THREE.FogExp2&&(a.fogDensity.value=b.density)}function P(a,b){a.shininess.value=b.shininess,a.emissive.value=b.emissive,a.specular.value=b.specular,b.wrapAround&&a.wrapRGB.value.copy(b.wrapRGB)}function Q(a,b){a.emissive.value=b.emissive,b.wrapAround&&a.wrapRGB.value.copy(b.wrapRGB)}function R(a,b){a.ambientLightColor.value=b.ambient,a.directionalLightColor.value=b.directional.colors,a.directionalLightDirection.value=b.directional.positions,a.pointLightColor.value=b.point.colors,a.pointLightPosition.value=b.point.positions,a.pointLightDistance.value=b.point.distances,a.pointLightDecay.value=b.point.decays,a.spotLightColor.value=b.spot.colors,a.spotLightPosition.value=b.spot.positions,a.spotLightDistance.value=b.spot.distances,a.spotLightDirection.value=b.spot.directions,a.spotLightAngleCos.value=b.spot.anglesCos,a.spotLightExponent.value=b.spot.exponents,a.spotLightDecay.value=b.spot.decays,a.hemisphereLightSkyColor.value=b.hemi.skyColors,a.hemisphereLightGroundColor.value=b.hemi.groundColors,a.hemisphereLightDirection.value=b.hemi.positions}function S(a,b){a.ambientLightColor.needsUpdate=b,a.directionalLightColor.needsUpdate=b,a.directionalLightDirection.needsUpdate=b,a.pointLightColor.needsUpdate=b,a.pointLightPosition.needsUpdate=b,a.pointLightDistance.needsUpdate=b,a.pointLightDecay.needsUpdate=b,a.spotLightColor.needsUpdate=b,a.spotLightPosition.needsUpdate=b,a.spotLightDistance.needsUpdate=b,a.spotLightDirection.needsUpdate=b,a.spotLightAngleCos.needsUpdate=b,a.spotLightExponent.needsUpdate=b,a.spotLightDecay.needsUpdate=b,a.hemisphereLightSkyColor.needsUpdate=b,a.hemisphereLightGroundColor.needsUpdate=b,a.hemisphereLightDirection.needsUpdate=b}function T(a,b){if(a.shadowMatrix)for(var c=0,d=0,e=b.length;e>d;d++){var f=b[d];f.castShadow&&(f instanceof THREE.SpotLight||f instanceof THREE.DirectionalLight&&!f.shadowCascade)&&(a.shadowMap.value[c]=f.shadowMap,a.shadowMapSize.value[c]=f.shadowMapSize,a.shadowMatrix.value[c]=f.shadowMatrix,a.shadowDarkness.value[c]=f.shadowDarkness,a.shadowBias.value[c]=f.shadowBias,c++)}}function U(a,b){Ea.uniformMatrix4fv(a.modelViewMatrix,!1,b._modelViewMatrix.elements),a.normalMatrix&&Ea.uniformMatrix3fv(a.normalMatrix,!1,b._normalMatrix.elements)}function V(){var a=Ma;return a>=eb&&THREE.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+eb),Ma+=1,a}function W(a){for(var b,c,d,e=0,f=a.length;f>e;e++){var g=a[e][0];if(g.needsUpdate!==!1){var h=g.type,i=g.value,j=a[e][1];switch(h){case"1i":Ea.uniform1i(j,i);break;case"1f":Ea.uniform1f(j,i);break;case"2f":Ea.uniform2f(j,i[0],i[1]);break;case"3f":Ea.uniform3f(j,i[0],i[1],i[2]);break;case"4f":Ea.uniform4f(j,i[0],i[1],i[2],i[3]);break;case"1iv":Ea.uniform1iv(j,i);break;case"3iv":Ea.uniform3iv(j,i);break;case"1fv":Ea.uniform1fv(j,i);break;case"2fv":Ea.uniform2fv(j,i);break;case"3fv":Ea.uniform3fv(j,i);break;case"4fv":Ea.uniform4fv(j,i);break;case"Matrix3fv":Ea.uniformMatrix3fv(j,!1,i);break;case"Matrix4fv":Ea.uniformMatrix4fv(j,!1,i);break;case"i":Ea.uniform1i(j,i);break;case"f":Ea.uniform1f(j,i);break;case"v2":Ea.uniform2f(j,i.x,i.y);break;case"v3":Ea.uniform3f(j,i.x,i.y,i.z);break;case"v4":Ea.uniform4f(j,i.x,i.y,i.z,i.w);break;case"c":Ea.uniform3f(j,i.r,i.g,i.b);break;case"iv1":Ea.uniform1iv(j,i);break;case"iv":Ea.uniform3iv(j,i);break;case"fv1":Ea.uniform1fv(j,i);break;case"fv":Ea.uniform3fv(j,i);break;case"v2v":void 0===g._array&&(g._array=new Float32Array(2*i.length));for(var k=0,l=i.length;l>k;k++)d=2*k,g._array[d]=i[k].x,g._array[d+1]=i[k].y;Ea.uniform2fv(j,g._array);break;case"v3v":void 0===g._array&&(g._array=new Float32Array(3*i.length));for(var k=0,l=i.length;l>k;k++)d=3*k,g._array[d]=i[k].x,g._array[d+1]=i[k].y,g._array[d+2]=i[k].z;Ea.uniform3fv(j,g._array);break;case"v4v":void 0===g._array&&(g._array=new Float32Array(4*i.length));for(var k=0,l=i.length;l>k;k++)d=4*k,g._array[d]=i[k].x,g._array[d+1]=i[k].y,g._array[d+2]=i[k].z,g._array[d+3]=i[k].w;Ea.uniform4fv(j,g._array);break;case"m3":Ea.uniformMatrix3fv(j,!1,i.elements);break;case"m3v":void 0===g._array&&(g._array=new Float32Array(9*i.length));for(var k=0,l=i.length;l>k;k++)i[k].flattenToArrayOffset(g._array,9*k);Ea.uniformMatrix3fv(j,!1,g._array);break;case"m4":Ea.uniformMatrix4fv(j,!1,i.elements);break;case"m4v":void 0===g._array&&(g._array=new Float32Array(16*i.length));for(var k=0,l=i.length;l>k;k++)i[k].flattenToArrayOffset(g._array,16*k);Ea.uniformMatrix4fv(j,!1,g._array);break;case"t":if(b=i,c=V(),Ea.uniform1i(j,c),!b)continue;b instanceof THREE.CubeTexture||b.image instanceof Array&&6===b.image.length?aa(b,c):b instanceof THREE.WebGLRenderTargetCube?ba(b,c):Fa.setTexture(b,c);break;case"tv":void 0===g._array&&(g._array=[]);for(var k=0,l=g.value.length;l>k;k++)g._array[k]=V();Ea.uniform1iv(j,g._array);for(var k=0,l=g.value.length;l>k;k++)b=g.value[k],c=g._array[k],b&&Fa.setTexture(b,c);break;default:THREE.warn("THREE.WebGLRenderer: Unknown uniform type: "+h)}}}}function X(a,b){a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld),a._normalMatrix.getNormalMatrix(a._modelViewMatrix)}function Y(a,b,c,d){a[b]=c.r*d,a[b+1]=c.g*d,a[b+2]=c.b*d}function Z(a){var b,c,d,e,f,g,h,i,j=0,k=0,l=0,m=Ya,n=m.directional.colors,o=m.directional.positions,p=m.point.colors,q=m.point.positions,r=m.point.distances,s=m.point.decays,t=m.spot.colors,u=m.spot.positions,v=m.spot.distances,w=m.spot.directions,x=m.spot.anglesCos,y=m.spot.exponents,z=m.spot.decays,A=m.hemi.skyColors,B=m.hemi.groundColors,C=m.hemi.positions,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;for(b=0,c=a.length;c>b;b++)if(d=a[b],!d.onlyShadow)if(e=d.color,h=d.intensity,i=d.distance,d instanceof THREE.AmbientLight){if(!d.visible)continue;j+=e.r,k+=e.g,l+=e.b}else if(d instanceof THREE.DirectionalLight){if(H+=1,!d.visible)continue;Wa.setFromMatrixPosition(d.matrixWorld),Va.setFromMatrixPosition(d.target.matrixWorld),Wa.sub(Va),Wa.normalize(),L=3*D,o[L]=Wa.x,o[L+1]=Wa.y,o[L+2]=Wa.z,Y(n,L,e,h),D+=1}else if(d instanceof THREE.PointLight){if(I+=1,!d.visible)continue;M=3*E,Y(p,M,e,h),Va.setFromMatrixPosition(d.matrixWorld),q[M]=Va.x,q[M+1]=Va.y,q[M+2]=Va.z,r[E]=i,s[E]=0===d.distance?0:d.decay,E+=1}else if(d instanceof THREE.SpotLight){if(J+=1,!d.visible)continue;N=3*F,Y(t,N,e,h),Wa.setFromMatrixPosition(d.matrixWorld),u[N]=Wa.x,u[N+1]=Wa.y,u[N+2]=Wa.z,v[F]=i,Va.setFromMatrixPosition(d.target.matrixWorld),Wa.sub(Va),Wa.normalize(),w[N]=Wa.x,w[N+1]=Wa.y,w[N+2]=Wa.z,x[F]=Math.cos(d.angle),y[F]=d.exponent,z[F]=0===d.distance?0:d.decay,F+=1}else if(d instanceof THREE.HemisphereLight){if(K+=1,!d.visible)continue;Wa.setFromMatrixPosition(d.matrixWorld),Wa.normalize(),O=3*G,C[O]=Wa.x,C[O+1]=Wa.y,C[O+2]=Wa.z,f=d.color,g=d.groundColor,Y(A,O,f,h),Y(B,O,g,h),G+=1}for(b=3*D,c=Math.max(n.length,3*H);c>b;b++)n[b]=0;for(b=3*E,c=Math.max(p.length,3*I);c>b;b++)p[b]=0;for(b=3*F,c=Math.max(t.length,3*J);c>b;b++)t[b]=0;for(b=3*G,c=Math.max(A.length,3*K);c>b;b++)A[b]=0;for(b=3*G,c=Math.max(B.length,3*K);c>b;b++)B[b]=0;m.directional.length=D,m.point.length=E,m.spot.length=F,m.hemi.length=G,m.ambient[0]=j,m.ambient[1]=k,m.ambient[2]=l}function $(a,b,c){var d;c?(Ea.texParameteri(a,Ea.TEXTURE_WRAP_S,ga(b.wrapS)),Ea.texParameteri(a,Ea.TEXTURE_WRAP_T,ga(b.wrapT)),Ea.texParameteri(a,Ea.TEXTURE_MAG_FILTER,ga(b.magFilter)),Ea.texParameteri(a,Ea.TEXTURE_MIN_FILTER,ga(b.minFilter))):(Ea.texParameteri(a,Ea.TEXTURE_WRAP_S,Ea.CLAMP_TO_EDGE),Ea.texParameteri(a,Ea.TEXTURE_WRAP_T,Ea.CLAMP_TO_EDGE),(b.wrapS!==THREE.ClampToEdgeWrapping||b.wrapT!==THREE.ClampToEdgeWrapping)&&THREE.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( "+b.sourceFile+" )"),Ea.texParameteri(a,Ea.TEXTURE_MAG_FILTER,fa(b.magFilter)),Ea.texParameteri(a,Ea.TEXTURE_MIN_FILTER,fa(b.minFilter)),b.minFilter!==THREE.NearestFilter&&b.minFilter!==THREE.LinearFilter&&THREE.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( "+b.sourceFile+" )")),d=ab.get("EXT_texture_filter_anisotropic"),d&&b.type!==THREE.FloatType&&b.type!==THREE.HalfFloatType&&(b.anisotropy>1||b.__currentAnisotropy)&&(Ea.texParameterf(a,d.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,Fa.getMaxAnisotropy())),b.__currentAnisotropy=b.anisotropy)}function _(a,b){if(a.width>b||a.height>b){var c=b/Math.max(a.width,a.height),d=document.createElement("canvas");d.width=Math.floor(a.width*c),d.height=Math.floor(a.height*c);var e=d.getContext("2d");return e.drawImage(a,0,0,a.width,a.height,0,0,d.width,d.height),THREE.warn("THREE.WebGLRenderer: image is too big ("+a.width+"x"+a.height+"). Resized to "+d.width+"x"+d.height,a),d}return a}function aa(a,b){if(6===a.image.length)if(a.needsUpdate){a.image.__webglTextureCube||(a.addEventListener("dispose",wb),a.image.__webglTextureCube=Ea.createTexture(),Fa.info.memory.textures++),Ea.activeTexture(Ea.TEXTURE0+b),Ea.bindTexture(Ea.TEXTURE_CUBE_MAP,a.image.__webglTextureCube),Ea.pixelStorei(Ea.UNPACK_FLIP_Y_WEBGL,a.flipY);for(var c=a instanceof THREE.CompressedTexture,d=a.image[0]instanceof THREE.DataTexture,e=[],f=0;6>f;f++)!Fa.autoScaleCubemaps||c||d?e[f]=d?a.image[f].image:a.image[f]:e[f]=_(a.image[f],hb);var g=e[0],h=THREE.Math.isPowerOfTwo(g.width)&&THREE.Math.isPowerOfTwo(g.height),i=ga(a.format),j=ga(a.type);$(Ea.TEXTURE_CUBE_MAP,a,h);for(var f=0;6>f;f++)if(c)for(var k,l=e[f].mipmaps,m=0,n=l.length;n>m;m++)k=l[m],a.format!==THREE.RGBAFormat&&a.format!==THREE.RGBFormat?ob().indexOf(i)>-1?Ea.compressedTexImage2D(Ea.TEXTURE_CUBE_MAP_POSITIVE_X+f,m,i,k.width,k.height,0,k.data):THREE.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()"):Ea.texImage2D(Ea.TEXTURE_CUBE_MAP_POSITIVE_X+f,m,i,k.width,k.height,0,i,j,k.data);else d?Ea.texImage2D(Ea.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,i,e[f].width,e[f].height,0,i,j,e[f].data):Ea.texImage2D(Ea.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,i,i,j,e[f]);a.generateMipmaps&&h&&Ea.generateMipmap(Ea.TEXTURE_CUBE_MAP),a.needsUpdate=!1,a.onUpdate&&a.onUpdate()}else Ea.activeTexture(Ea.TEXTURE0+b),Ea.bindTexture(Ea.TEXTURE_CUBE_MAP,a.image.__webglTextureCube)}function ba(a,b){Ea.activeTexture(Ea.TEXTURE0+b),Ea.bindTexture(Ea.TEXTURE_CUBE_MAP,a.__webglTexture)}function ca(a,b,c){Ea.bindFramebuffer(Ea.FRAMEBUFFER,a),Ea.framebufferTexture2D(Ea.FRAMEBUFFER,Ea.COLOR_ATTACHMENT0,c,b.__webglTexture,0)}function da(a,b){Ea.bindRenderbuffer(Ea.RENDERBUFFER,a),b.depthBuffer&&!b.stencilBuffer?(Ea.renderbufferStorage(Ea.RENDERBUFFER,Ea.DEPTH_COMPONENT16,b.width,b.height),Ea.framebufferRenderbuffer(Ea.FRAMEBUFFER,Ea.DEPTH_ATTACHMENT,Ea.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(Ea.renderbufferStorage(Ea.RENDERBUFFER,Ea.DEPTH_STENCIL,b.width,b.height),Ea.framebufferRenderbuffer(Ea.FRAMEBUFFER,Ea.DEPTH_STENCIL_ATTACHMENT,Ea.RENDERBUFFER,a)):Ea.renderbufferStorage(Ea.RENDERBUFFER,Ea.RGBA4,b.width,b.height)}function ea(a){a instanceof THREE.WebGLRenderTargetCube?(Ea.bindTexture(Ea.TEXTURE_CUBE_MAP,a.__webglTexture),Ea.generateMipmap(Ea.TEXTURE_CUBE_MAP),Ea.bindTexture(Ea.TEXTURE_CUBE_MAP,null)):(Ea.bindTexture(Ea.TEXTURE_2D,a.__webglTexture),Ea.generateMipmap(Ea.TEXTURE_2D),Ea.bindTexture(Ea.TEXTURE_2D,null))}function fa(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||a===THREE.NearestMipMapLinearFilter?Ea.NEAREST:Ea.LINEAR}function ga(a){var b;if(a===THREE.RepeatWrapping)return Ea.REPEAT;if(a===THREE.ClampToEdgeWrapping)return Ea.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return Ea.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return Ea.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return Ea.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return Ea.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return Ea.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return Ea.LINEAR_MIPMAP_NEAREST;if(a===THREE.LinearMipMapLinearFilter)return Ea.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return Ea.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return Ea.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return Ea.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return Ea.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return Ea.BYTE;if(a===THREE.ShortType)return Ea.SHORT;if(a===THREE.UnsignedShortType)return Ea.UNSIGNED_SHORT;if(a===THREE.IntType)return Ea.INT;if(a===THREE.UnsignedIntType)return Ea.UNSIGNED_INT;if(a===THREE.FloatType)return Ea.FLOAT;if(b=ab.get("OES_texture_half_float"),null!==b&&a===THREE.HalfFloatType)return b.HALF_FLOAT_OES;if(a===THREE.AlphaFormat)return Ea.ALPHA;if(a===THREE.RGBFormat)return Ea.RGB;if(a===THREE.RGBAFormat)return Ea.RGBA;if(a===THREE.LuminanceFormat)return Ea.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return Ea.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return Ea.FUNC_ADD;if(a===THREE.SubtractEquation)return Ea.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return Ea.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return Ea.ZERO;if(a===THREE.OneFactor)return Ea.ONE;if(a===THREE.SrcColorFactor)return Ea.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return Ea.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return Ea.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return Ea.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return Ea.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return Ea.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return Ea.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return Ea.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return Ea.SRC_ALPHA_SATURATE;if(b=ab.get("WEBGL_compressed_texture_s3tc"),null!==b){if(a===THREE.RGB_S3TC_DXT1_Format)return b.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return b.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return b.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return b.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(b=ab.get("WEBGL_compressed_texture_pvrtc"),null!==b){if(a===THREE.RGB_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===THREE.RGB_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===THREE.RGBA_PVRTC_4BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===THREE.RGBA_PVRTC_2BPPV1_Format)return b.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(b=ab.get("EXT_blend_minmax"),null!==b){if(a===THREE.MinEquation)return b.MIN_EXT;if(a===THREE.MaxEquation)return b.MAX_EXT}return 0}function ha(a){if(jb&&a&&a.skeleton&&a.skeleton.useVertexTexture)return 1024;var b=Ea.getParameter(Ea.MAX_VERTEX_UNIFORM_VECTORS),c=Math.floor((b-20)/4),d=c;return void 0!==a&&a instanceof THREE.SkinnedMesh&&(d=Math.min(a.skeleton.bones.length,d),d<a.skeleton.bones.length&&THREE.warn("WebGLRenderer: too many bones - "+a.skeleton.bones.length+", this GPU supports just "+d+" (try OpenGL instead of ANGLE)")),d}function ia(a){for(var b=0,c=0,d=0,e=0,f=0,g=a.length;g>f;f++){var h=a[f];h.onlyShadow||h.visible===!1||(h instanceof THREE.DirectionalLight&&b++,h instanceof THREE.PointLight&&c++,h instanceof THREE.SpotLight&&d++,h instanceof THREE.HemisphereLight&&e++)}return{directional:b,point:c,spot:d,hemi:e}}function ja(a){for(var b=0,c=0,d=a.length;d>c;c++){var e=a[c];e.castShadow&&(e instanceof THREE.SpotLight&&b++,e instanceof THREE.DirectionalLight&&!e.shadowCascade&&b++)}return b}console.log("THREE.WebGLRenderer",THREE.REVISION),a=a||{};var ka=void 0!==a.canvas?a.canvas:document.createElement("canvas"),la=void 0!==a.context?a.context:null,ma=1,na=void 0!==a.precision?a.precision:"highp",oa=void 0!==a.alpha?a.alpha:!1,pa=void 0!==a.depth?a.depth:!0,qa=void 0!==a.stencil?a.stencil:!0,ra=void 0!==a.antialias?a.antialias:!1,sa=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,ta=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,ua=void 0!==a.logarithmicDepthBuffer?a.logarithmicDepthBuffer:!1,va=new THREE.Color(0),wa=0,xa=[],ya={},za=[],Aa=[],Ba=[],Ca=[],Da=[];this.domElement=ka,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.shadowMapEnabled=!1,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Ea,Fa=this,Ga=[],Ha=null,Ia=null,Ja=-1,Ka="",La=null,Ma=0,Na=0,Oa=0,Pa=ka.width,Qa=ka.height,Ra=0,Sa=0,Ta=new THREE.Frustum,Ua=new THREE.Matrix4,Va=new THREE.Vector3,Wa=new THREE.Vector3,Xa=!0,Ya={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[],decays:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[],decays:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};try{var Za={alpha:oa,depth:pa,stencil:qa,antialias:ra,premultipliedAlpha:sa,preserveDrawingBuffer:ta};if(Ea=la||ka.getContext("webgl",Za)||ka.getContext("experimental-webgl",Za),null===Ea)throw null!==ka.getContext("webgl")?"Error creating WebGL context with your selected attributes.":"Error creating WebGL context.";ka.addEventListener("webglcontextlost",function(a){a.preventDefault(),db(),cb(),ya={}},!1)}catch($a){THREE.error("THREE.WebGLRenderer: "+$a)}var _a=new THREE.WebGLState(Ea,ga);void 0===Ea.getShaderPrecisionFormat&&(Ea.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}});var ab=new THREE.WebGLExtensions(Ea);ab.get("OES_texture_float"),ab.get("OES_texture_float_linear"),ab.get("OES_texture_half_float"),ab.get("OES_texture_half_float_linear"),ab.get("OES_standard_derivatives"),ua&&ab.get("EXT_frag_depth");var bb=function(a,b,c,d){sa===!0&&(a*=d,b*=d,c*=d),Ea.clearColor(a,b,c,d)},cb=function(){Ea.clearColor(0,0,0,1),Ea.clearDepth(1),Ea.clearStencil(0),Ea.enable(Ea.DEPTH_TEST),Ea.depthFunc(Ea.LEQUAL),Ea.frontFace(Ea.CCW),Ea.cullFace(Ea.BACK),Ea.enable(Ea.CULL_FACE),Ea.enable(Ea.BLEND),Ea.blendEquation(Ea.FUNC_ADD),Ea.blendFunc(Ea.SRC_ALPHA,Ea.ONE_MINUS_SRC_ALPHA),Ea.viewport(Na,Oa,Pa,Qa),bb(va.r,va.g,va.b,wa)},db=function(){Ha=null,La=null,Ka="",Ja=-1,Xa=!0,_a.reset()};cb(),this.context=Ea,this.state=_a;var eb=Ea.getParameter(Ea.MAX_TEXTURE_IMAGE_UNITS),fb=Ea.getParameter(Ea.MAX_VERTEX_TEXTURE_IMAGE_UNITS),gb=Ea.getParameter(Ea.MAX_TEXTURE_SIZE),hb=Ea.getParameter(Ea.MAX_CUBE_MAP_TEXTURE_SIZE),ib=fb>0,jb=ib&&ab.get("OES_texture_float"),kb=Ea.getShaderPrecisionFormat(Ea.VERTEX_SHADER,Ea.HIGH_FLOAT),lb=Ea.getShaderPrecisionFormat(Ea.VERTEX_SHADER,Ea.MEDIUM_FLOAT),mb=Ea.getShaderPrecisionFormat(Ea.FRAGMENT_SHADER,Ea.HIGH_FLOAT),nb=Ea.getShaderPrecisionFormat(Ea.FRAGMENT_SHADER,Ea.MEDIUM_FLOAT),ob=function(){var a;return function(){if(void 0!==a)return a;if(a=[],ab.get("WEBGL_compressed_texture_pvrtc")||ab.get("WEBGL_compressed_texture_s3tc"))for(var b=Ea.getParameter(Ea.COMPRESSED_TEXTURE_FORMATS),c=0;c<b.length;c++)a.push(b[c]);return a}}(),pb=kb.precision>0&&mb.precision>0,qb=lb.precision>0&&nb.precision>0;"highp"!==na||pb||(qb?(na="mediump",THREE.warn("THREE.WebGLRenderer: highp not supported, using mediump.")):(na="lowp",THREE.warn("THREE.WebGLRenderer: highp and mediump not supported, using lowp."))),"mediump"!==na||qb||(na="lowp",THREE.warn("THREE.WebGLRenderer: mediump not supported, using lowp."));var rb=new THREE.ShadowMapPlugin(this,xa,ya,za),sb=new THREE.SpritePlugin(this,Ca),tb=new THREE.LensFlarePlugin(this,Da);this.getContext=function(){return Ea},this.forceContextLoss=function(){ab.get("WEBGL_lose_context").loseContext()},this.supportsVertexTextures=function(){return ib},this.supportsFloatTextures=function(){return ab.get("OES_texture_float")},this.supportsHalfFloatTextures=function(){return ab.get("OES_texture_half_float")},this.supportsStandardDerivatives=function(){return ab.get("OES_standard_derivatives")},this.supportsCompressedTextureS3TC=function(){return ab.get("WEBGL_compressed_texture_s3tc")},this.supportsCompressedTexturePVRTC=function(){return ab.get("WEBGL_compressed_texture_pvrtc")},this.supportsBlendMinMax=function(){return ab.get("EXT_blend_minmax")},this.getMaxAnisotropy=function(){var a;return function(){if(void 0!==a)return a;var b=ab.get("EXT_texture_filter_anisotropic");return a=null!==b?Ea.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}}(),this.getPrecision=function(){return na},this.getPixelRatio=function(){return ma},this.setPixelRatio=function(a){ma=a},this.setSize=function(a,b,c){ka.width=a*ma,ka.height=b*ma,c!==!1&&(ka.style.width=a+"px",ka.style.height=b+"px"),this.setViewport(0,0,a,b)},this.setViewport=function(a,b,c,d){Na=a*ma,Oa=b*ma,Pa=c*ma,Qa=d*ma,Ea.viewport(Na,Oa,Pa,Qa)},this.setScissor=function(a,b,c,d){Ea.scissor(a*ma,b*ma,c*ma,d*ma)},this.enableScissorTest=function(a){a?Ea.enable(Ea.SCISSOR_TEST):Ea.disable(Ea.SCISSOR_TEST)},this.getClearColor=function(){return va},this.setClearColor=function(a,b){va.set(a),wa=void 0!==b?b:1,bb(va.r,va.g,va.b,wa)},this.getClearAlpha=function(){return wa},this.setClearAlpha=function(a){wa=a,bb(va.r,va.g,va.b,wa)},this.clear=function(a,b,c){var d=0;(void 0===a||a)&&(d|=Ea.COLOR_BUFFER_BIT),(void 0===b||b)&&(d|=Ea.DEPTH_BUFFER_BIT),(void 0===c||c)&&(d|=Ea.STENCIL_BUFFER_BIT),Ea.clear(d)},this.clearColor=function(){Ea.clear(Ea.COLOR_BUFFER_BIT)},this.clearDepth=function(){Ea.clear(Ea.DEPTH_BUFFER_BIT)},this.clearStencil=function(){Ea.clear(Ea.STENCIL_BUFFER_BIT)},this.clearTarget=function(a,b,c,d){this.setRenderTarget(a),this.clear(b,c,d)},this.resetGLState=db;var ub=function(a){var b=a.target;b.traverse(function(a){a.removeEventListener("remove",ub),F(a)})},vb=function(a){var b=a.target;b.removeEventListener("dispose",vb),Ab(b)},wb=function(a){var b=a.target;b.removeEventListener("dispose",wb),Bb(b),Fa.info.memory.textures--},xb=function(a){var b=a.target;b.removeEventListener("dispose",xb),Cb(b),Fa.info.memory.textures--},yb=function(a){var b=a.target;b.removeEventListener("dispose",yb),Db(b)},zb=function(a){for(var b=["__webglVertexBuffer","__webglNormalBuffer","__webglTangentBuffer","__webglColorBuffer","__webglUVBuffer","__webglUV2Buffer","__webglSkinIndicesBuffer","__webglSkinWeightsBuffer","__webglFaceBuffer","__webglLineBuffer","__webglLineDistanceBuffer"],c=0,d=b.length;d>c;c++){var e=b[c];void 0!==a[e]&&(Ea.deleteBuffer(a[e]),delete a[e])}if(void 0!==a.__webglCustomAttributesList){for(var e in a.__webglCustomAttributesList)Ea.deleteBuffer(a.__webglCustomAttributesList[e].buffer);delete a.__webglCustomAttributesList}Fa.info.memory.geometries--},Ab=function(a){if(delete a.__webglInit,a instanceof THREE.BufferGeometry){for(var b in a.attributes){var c=a.attributes[b];void 0!==c.buffer&&(Ea.deleteBuffer(c.buffer),delete c.buffer)}Fa.info.memory.geometries--}else{var d=Eb[a.id];if(void 0!==d){for(var e=0,f=d.length;f>e;e++){var g=d[e];if(void 0!==g.numMorphTargets){for(var h=0,i=g.numMorphTargets;i>h;h++)Ea.deleteBuffer(g.__webglMorphTargetsBuffers[h]);delete g.__webglMorphTargetsBuffers}if(void 0!==g.numMorphNormals){for(var h=0,i=g.numMorphNormals;i>h;h++)Ea.deleteBuffer(g.__webglMorphNormalsBuffers[h]);delete g.__webglMorphNormalsBuffers}zb(g)}delete Eb[a.id]}else zb(a)}Ka=""},Bb=function(a){if(a.image&&a.image.__webglTextureCube)Ea.deleteTexture(a.image.__webglTextureCube),delete a.image.__webglTextureCube;else{if(void 0===a.__webglInit)return;Ea.deleteTexture(a.__webglTexture),delete a.__webglTexture,delete a.__webglInit}},Cb=function(a){if(a&&void 0!==a.__webglTexture){if(Ea.deleteTexture(a.__webglTexture),delete a.__webglTexture,a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)Ea.deleteFramebuffer(a.__webglFramebuffer[b]),Ea.deleteRenderbuffer(a.__webglRenderbuffer[b]);else Ea.deleteFramebuffer(a.__webglFramebuffer),Ea.deleteRenderbuffer(a.__webglRenderbuffer);delete a.__webglFramebuffer,delete a.__webglRenderbuffer}},Db=function(a){var b=a.program.program;if(void 0!==b){a.program=void 0;var c,d,e,f=!1;for(c=0,d=Ga.length;d>c;c++)if(e=Ga[c],e.program===b){e.usedTimes--,0===e.usedTimes&&(f=!0);break}if(f===!0){var g=[];for(c=0,d=Ga.length;d>c;c++)e=Ga[c],e.program!==b&&g.push(e);Ga=g,Ea.deleteProgram(b),Fa.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){if(_a.initAttributes(),a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=Ea.createBuffer()),a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=Ea.createBuffer()),a.hasUvs&&!a.__webglUvBuffer&&(a.__webglUvBuffer=Ea.createBuffer()),a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=Ea.createBuffer()),a.hasPositions&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglVertexBuffer),Ea.bufferData(Ea.ARRAY_BUFFER,a.positionArray,Ea.DYNAMIC_DRAW),_a.enableAttribute(b.attributes.position),Ea.vertexAttribPointer(b.attributes.position,3,Ea.FLOAT,!1,0,0)),a.hasNormals){if(Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglNormalBuffer),c instanceof THREE.MeshPhongMaterial==!1&&c.shading===THREE.FlatShading){var d,e,f,g,h,i,j,k,l,m,n,o,p,q,r=3*a.count;for(q=0;r>q;q+=9)p=a.normalArray,g=p[q],j=p[q+1],m=p[q+2],h=p[q+3],k=p[q+4],n=p[q+5],i=p[q+6],l=p[q+7],o=p[q+8],d=(g+h+i)/3,e=(j+k+l)/3,f=(m+n+o)/3,p[q]=d,p[q+1]=e,p[q+2]=f,p[q+3]=d,p[q+4]=e,p[q+5]=f,p[q+6]=d,p[q+7]=e,p[q+8]=f}Ea.bufferData(Ea.ARRAY_BUFFER,a.normalArray,Ea.DYNAMIC_DRAW),_a.enableAttribute(b.attributes.normal),Ea.vertexAttribPointer(b.attributes.normal,3,Ea.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglUvBuffer),Ea.bufferData(Ea.ARRAY_BUFFER,a.uvArray,Ea.DYNAMIC_DRAW),_a.enableAttribute(b.attributes.uv),Ea.vertexAttribPointer(b.attributes.uv,2,Ea.FLOAT,!1,0,0)),a.hasColors&&c.vertexColors!==THREE.NoColors&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,a.__webglColorBuffer),Ea.bufferData(Ea.ARRAY_BUFFER,a.colorArray,Ea.DYNAMIC_DRAW),_a.enableAttribute(b.attributes.color),Ea.vertexAttribPointer(b.attributes.color,3,Ea.FLOAT,!1,0,0)),_a.disableUnusedAttributes(),Ea.drawArrays(Ea.TRIANGLES,0,a.count),a.count=0},this.renderBufferDirect=function(a,b,c,d,e,f){if(d.visible!==!1){C(f);var g=J(a,b,c,d,f),h=!1,i=d.wireframe?1:0,j="direct_"+e.id+"_"+g.id+"_"+i;if(j!==Ka&&(Ka=j,h=!0),h&&_a.initAttributes(),f instanceof THREE.Mesh){var k=d.wireframe===!0?Ea.LINES:Ea.TRIANGLES,l=e.attributes.index;if(l){var m,o;l.array instanceof Uint32Array&&ab.get("OES_element_index_uint")?(m=Ea.UNSIGNED_INT,o=4):(m=Ea.UNSIGNED_SHORT,o=2);var p=e.offsets;if(0===p.length)h&&(n(d,g,e,0),Ea.bindBuffer(Ea.ELEMENT_ARRAY_BUFFER,l.buffer)),Ea.drawElements(k,l.array.length,m,0),Fa.info.render.calls++,Fa.info.render.vertices+=l.array.length,Fa.info.render.faces+=l.array.length/3;else{h=!0;for(var q=0,r=p.length;r>q;q++){var s=p[q].index;h&&(n(d,g,e,s),Ea.bindBuffer(Ea.ELEMENT_ARRAY_BUFFER,l.buffer)),Ea.drawElements(k,p[q].count,m,p[q].start*o),Fa.info.render.calls++,Fa.info.render.vertices+=p[q].count,Fa.info.render.faces+=p[q].count/3}}}else{h&&n(d,g,e,0);var t=e.attributes.position;Ea.drawArrays(k,0,t.array.length/t.itemSize),Fa.info.render.calls++,Fa.info.render.vertices+=t.array.length/t.itemSize,Fa.info.render.faces+=t.array.length/(3*t.itemSize)}}else if(f instanceof THREE.PointCloud){var k=Ea.POINTS,l=e.attributes.index;if(l){var m,o;l.array instanceof Uint32Array&&ab.get("OES_element_index_uint")?(m=Ea.UNSIGNED_INT,o=4):(m=Ea.UNSIGNED_SHORT,o=2);var p=e.offsets;if(0===p.length)h&&(n(d,g,e,0),Ea.bindBuffer(Ea.ELEMENT_ARRAY_BUFFER,l.buffer)),Ea.drawElements(k,l.array.length,m,0),Fa.info.render.calls++,Fa.info.render.points+=l.array.length;else{p.length>1&&(h=!0);for(var q=0,r=p.length;r>q;q++){var s=p[q].index;h&&(n(d,g,e,s),Ea.bindBuffer(Ea.ELEMENT_ARRAY_BUFFER,l.buffer)),Ea.drawElements(k,p[q].count,m,p[q].start*o),Fa.info.render.calls++,Fa.info.render.points+=p[q].count}}}else{h&&n(d,g,e,0);var t=e.attributes.position,p=e.offsets;if(0===p.length)Ea.drawArrays(k,0,t.array.length/3),Fa.info.render.calls++,Fa.info.render.points+=t.array.length/3;else for(var q=0,r=p.length;r>q;q++)Ea.drawArrays(k,p[q].index,p[q].count),Fa.info.render.calls++,Fa.info.render.points+=p[q].count}}else if(f instanceof THREE.Line){var k=f.mode===THREE.LineStrip?Ea.LINE_STRIP:Ea.LINES;_a.setLineWidth(d.linewidth*ma);var l=e.attributes.index;
if(l){var m,o;l.array instanceof Uint32Array?(m=Ea.UNSIGNED_INT,o=4):(m=Ea.UNSIGNED_SHORT,o=2);var p=e.offsets;if(0===p.length)h&&(n(d,g,e,0),Ea.bindBuffer(Ea.ELEMENT_ARRAY_BUFFER,l.buffer)),Ea.drawElements(k,l.array.length,m,0),Fa.info.render.calls++,Fa.info.render.vertices+=l.array.length;else{p.length>1&&(h=!0);for(var q=0,r=p.length;r>q;q++){var s=p[q].index;h&&(n(d,g,e,s),Ea.bindBuffer(Ea.ELEMENT_ARRAY_BUFFER,l.buffer)),Ea.drawElements(k,p[q].count,m,p[q].start*o),Fa.info.render.calls++,Fa.info.render.vertices+=p[q].count}}}else{h&&n(d,g,e,0);var t=e.attributes.position,p=e.offsets;if(0===p.length)Ea.drawArrays(k,0,t.array.length/3),Fa.info.render.calls++,Fa.info.render.vertices+=t.array.length/3;else for(var q=0,r=p.length;r>q;q++)Ea.drawArrays(k,p[q].index,p[q].count),Fa.info.render.calls++,Fa.info.render.vertices+=p[q].count}}}},this.renderBuffer=function(a,b,c,d,e,f){if(d.visible!==!1){C(f);var g=J(a,b,c,d,f),h=g.attributes,i=!1,j=d.wireframe?1:0,k=e.id+"_"+g.id+"_"+j;if(k!==Ka&&(Ka=k,i=!0),i&&_a.initAttributes(),!d.morphTargets&&h.position>=0?i&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,e.__webglVertexBuffer),_a.enableAttribute(h.position),Ea.vertexAttribPointer(h.position,3,Ea.FLOAT,!1,0,0)):f.morphTargetBase&&o(d,e,f),i){if(e.__webglCustomAttributesList)for(var l=0,m=e.__webglCustomAttributesList.length;m>l;l++){var n=e.__webglCustomAttributesList[l];h[n.buffer.belongsToAttribute]>=0&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,n.buffer),_a.enableAttribute(h[n.buffer.belongsToAttribute]),Ea.vertexAttribPointer(h[n.buffer.belongsToAttribute],n.size,Ea.FLOAT,!1,0,0))}h.color>=0&&(f.geometry.colors.length>0||f.geometry.faces.length>0?(Ea.bindBuffer(Ea.ARRAY_BUFFER,e.__webglColorBuffer),_a.enableAttribute(h.color),Ea.vertexAttribPointer(h.color,3,Ea.FLOAT,!1,0,0)):void 0!==d.defaultAttributeValues&&Ea.vertexAttrib3fv(h.color,d.defaultAttributeValues.color)),h.normal>=0&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,e.__webglNormalBuffer),_a.enableAttribute(h.normal),Ea.vertexAttribPointer(h.normal,3,Ea.FLOAT,!1,0,0)),h.tangent>=0&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,e.__webglTangentBuffer),_a.enableAttribute(h.tangent),Ea.vertexAttribPointer(h.tangent,4,Ea.FLOAT,!1,0,0)),h.uv>=0&&(f.geometry.faceVertexUvs[0]?(Ea.bindBuffer(Ea.ARRAY_BUFFER,e.__webglUVBuffer),_a.enableAttribute(h.uv),Ea.vertexAttribPointer(h.uv,2,Ea.FLOAT,!1,0,0)):void 0!==d.defaultAttributeValues&&Ea.vertexAttrib2fv(h.uv,d.defaultAttributeValues.uv)),h.uv2>=0&&(f.geometry.faceVertexUvs[1]?(Ea.bindBuffer(Ea.ARRAY_BUFFER,e.__webglUV2Buffer),_a.enableAttribute(h.uv2),Ea.vertexAttribPointer(h.uv2,2,Ea.FLOAT,!1,0,0)):void 0!==d.defaultAttributeValues&&Ea.vertexAttrib2fv(h.uv2,d.defaultAttributeValues.uv2)),d.skinning&&h.skinIndex>=0&&h.skinWeight>=0&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),_a.enableAttribute(h.skinIndex),Ea.vertexAttribPointer(h.skinIndex,4,Ea.FLOAT,!1,0,0),Ea.bindBuffer(Ea.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),_a.enableAttribute(h.skinWeight),Ea.vertexAttribPointer(h.skinWeight,4,Ea.FLOAT,!1,0,0)),h.lineDistance>=0&&(Ea.bindBuffer(Ea.ARRAY_BUFFER,e.__webglLineDistanceBuffer),_a.enableAttribute(h.lineDistance),Ea.vertexAttribPointer(h.lineDistance,1,Ea.FLOAT,!1,0,0))}if(_a.disableUnusedAttributes(),f instanceof THREE.Mesh){var p=e.__typeArray===Uint32Array?Ea.UNSIGNED_INT:Ea.UNSIGNED_SHORT;d.wireframe?(_a.setLineWidth(d.wireframeLinewidth*ma),i&&Ea.bindBuffer(Ea.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),Ea.drawElements(Ea.LINES,e.__webglLineCount,p,0)):(i&&Ea.bindBuffer(Ea.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),Ea.drawElements(Ea.TRIANGLES,e.__webglFaceCount,p,0)),Fa.info.render.calls++,Fa.info.render.vertices+=e.__webglFaceCount,Fa.info.render.faces+=e.__webglFaceCount/3}else if(f instanceof THREE.Line){var q=f.mode===THREE.LineStrip?Ea.LINE_STRIP:Ea.LINES;_a.setLineWidth(d.linewidth*ma),Ea.drawArrays(q,0,e.__webglLineCount),Fa.info.render.calls++}else f instanceof THREE.PointCloud&&(Ea.drawArrays(Ea.POINTS,0,e.__webglParticleCount),Fa.info.render.calls++,Fa.info.render.points+=e.__webglParticleCount)}},this.render=function(a,b,c,d){if(b instanceof THREE.Camera==!1)return void THREE.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");var e=a.fog;Ka="",Ja=-1,La=null,Xa=!0,a.autoUpdate===!0&&a.updateMatrixWorld(),void 0===b.parent&&b.updateMatrixWorld(),a.traverse(function(a){a instanceof THREE.SkinnedMesh&&a.skeleton.update()}),b.matrixWorldInverse.getInverse(b.matrixWorld),Ua.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse),Ta.setFromMatrix(Ua),xa.length=0,Aa.length=0,Ba.length=0,Ca.length=0,Da.length=0,s(a),Fa.sortObjects===!0&&(Aa.sort(p),Ba.sort(q)),rb.render(a,b),Fa.info.render.calls=0,Fa.info.render.vertices=0,Fa.info.render.faces=0,Fa.info.render.points=0,this.setRenderTarget(c),(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);for(var f=0,g=za.length;g>f;f++){var h=za[f],i=h.object;i.visible&&(X(i,b),v(h))}if(a.overrideMaterial){var j=a.overrideMaterial;I(j),t(Aa,b,xa,e,j),t(Ba,b,xa,e,j),u(za,"",b,xa,e,j)}else _a.setBlending(THREE.NoBlending),t(Aa,b,xa,e,null),u(za,"opaque",b,xa,e,null),t(Ba,b,xa,e,null),u(za,"transparent",b,xa,e,null);sb.render(a,b),tb.render(a,b,Ra,Sa),c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&ea(c),_a.setDepthTest(!0),_a.setDepthWrite(!0),_a.setColorWrite(!0)},this.renderImmediateObject=function(a,b,c,d,e){var f=J(a,b,c,d,e);Ka="",Fa.setMaterialFaces(d),e.immediateRenderCallback?e.immediateRenderCallback(f,Ea,Ta):e.render(function(a){Fa.renderBufferImmediate(a,f,d)})};var Eb={},Fb=0,Gb={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointCloudMaterial:"particle_basic"};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?Ea.disable(Ea.CULL_FACE):(b===THREE.FrontFaceDirectionCW?Ea.frontFace(Ea.CW):Ea.frontFace(Ea.CCW),a===THREE.CullFaceBack?Ea.cullFace(Ea.BACK):a===THREE.CullFaceFront?Ea.cullFace(Ea.FRONT):Ea.cullFace(Ea.FRONT_AND_BACK),Ea.enable(Ea.CULL_FACE))},this.setMaterialFaces=function(a){_a.setDoubleSided(a.side===THREE.DoubleSide),_a.setFlipSided(a.side===THREE.BackSide)},this.uploadTexture=function(a){void 0===a.__webglInit&&(a.__webglInit=!0,a.addEventListener("dispose",wb),a.__webglTexture=Ea.createTexture(),Fa.info.memory.textures++),Ea.bindTexture(Ea.TEXTURE_2D,a.__webglTexture),Ea.pixelStorei(Ea.UNPACK_FLIP_Y_WEBGL,a.flipY),Ea.pixelStorei(Ea.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha),Ea.pixelStorei(Ea.UNPACK_ALIGNMENT,a.unpackAlignment),a.image=_(a.image,gb);var b=a.image,c=THREE.Math.isPowerOfTwo(b.width)&&THREE.Math.isPowerOfTwo(b.height),d=ga(a.format),e=ga(a.type);$(Ea.TEXTURE_2D,a,c);var f,g=a.mipmaps;if(a instanceof THREE.DataTexture)if(g.length>0&&c){for(var h=0,i=g.length;i>h;h++)f=g[h],Ea.texImage2D(Ea.TEXTURE_2D,h,d,f.width,f.height,0,d,e,f.data);a.generateMipmaps=!1}else Ea.texImage2D(Ea.TEXTURE_2D,0,d,b.width,b.height,0,d,e,b.data);else if(a instanceof THREE.CompressedTexture)for(var h=0,i=g.length;i>h;h++)f=g[h],a.format!==THREE.RGBAFormat&&a.format!==THREE.RGBFormat?ob().indexOf(d)>-1?Ea.compressedTexImage2D(Ea.TEXTURE_2D,h,d,f.width,f.height,0,f.data):THREE.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Ea.texImage2D(Ea.TEXTURE_2D,h,d,f.width,f.height,0,d,e,f.data);else if(g.length>0&&c){for(var h=0,i=g.length;i>h;h++)f=g[h],Ea.texImage2D(Ea.TEXTURE_2D,h,d,d,e,f);a.generateMipmaps=!1}else Ea.texImage2D(Ea.TEXTURE_2D,0,d,d,e,a.image);a.generateMipmaps&&c&&Ea.generateMipmap(Ea.TEXTURE_2D),a.needsUpdate=!1,a.onUpdate&&a.onUpdate()},this.setTexture=function(a,b){Ea.activeTexture(Ea.TEXTURE0+b),a.needsUpdate?Fa.uploadTexture(a):Ea.bindTexture(Ea.TEXTURE_2D,a.__webglTexture)},this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&void 0===a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0),void 0===a.stencilBuffer&&(a.stencilBuffer=!0),a.addEventListener("dispose",xb),a.__webglTexture=Ea.createTexture(),Fa.info.memory.textures++;var c=THREE.Math.isPowerOfTwo(a.width)&&THREE.Math.isPowerOfTwo(a.height),d=ga(a.format),e=ga(a.type);if(b){a.__webglFramebuffer=[],a.__webglRenderbuffer=[],Ea.bindTexture(Ea.TEXTURE_CUBE_MAP,a.__webglTexture),$(Ea.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++)a.__webglFramebuffer[f]=Ea.createFramebuffer(),a.__webglRenderbuffer[f]=Ea.createRenderbuffer(),Ea.texImage2D(Ea.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null),ca(a.__webglFramebuffer[f],a,Ea.TEXTURE_CUBE_MAP_POSITIVE_X+f),da(a.__webglRenderbuffer[f],a);c&&Ea.generateMipmap(Ea.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=Ea.createFramebuffer(),a.shareDepthFrom?a.__webglRenderbuffer=a.shareDepthFrom.__webglRenderbuffer:a.__webglRenderbuffer=Ea.createRenderbuffer(),Ea.bindTexture(Ea.TEXTURE_2D,a.__webglTexture),$(Ea.TEXTURE_2D,a,c),Ea.texImage2D(Ea.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),ca(a.__webglFramebuffer,a,Ea.TEXTURE_2D),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?Ea.framebufferRenderbuffer(Ea.FRAMEBUFFER,Ea.DEPTH_ATTACHMENT,Ea.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&Ea.framebufferRenderbuffer(Ea.FRAMEBUFFER,Ea.DEPTH_STENCIL_ATTACHMENT,Ea.RENDERBUFFER,a.__webglRenderbuffer):da(a.__webglRenderbuffer,a),c&&Ea.generateMipmap(Ea.TEXTURE_2D);b?Ea.bindTexture(Ea.TEXTURE_CUBE_MAP,null):Ea.bindTexture(Ea.TEXTURE_2D,null),Ea.bindRenderbuffer(Ea.RENDERBUFFER,null),Ea.bindFramebuffer(Ea.FRAMEBUFFER,null)}var g,h,i,j,k;a?(g=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,h=a.width,i=a.height,j=0,k=0):(g=null,h=Pa,i=Qa,j=Na,k=Oa),g!==Ia&&(Ea.bindFramebuffer(Ea.FRAMEBUFFER,g),Ea.viewport(j,k,h,i),Ia=g),Ra=h,Sa=i},this.readRenderTargetPixels=function(a,b,c,d,e,f){if(!(a instanceof THREE.WebGLRenderTarget))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");if(a.__webglFramebuffer){if(a.format!==THREE.RGBAFormat)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.");var g=!1;a.__webglFramebuffer!==Ia&&(Ea.bindFramebuffer(Ea.FRAMEBUFFER,a.__webglFramebuffer),g=!0),Ea.checkFramebufferStatus(Ea.FRAMEBUFFER)===Ea.FRAMEBUFFER_COMPLETE?Ea.readPixels(b,c,d,e,Ea.RGBA,Ea.UNSIGNED_BYTE,f):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete."),g&&Ea.bindFramebuffer(Ea.FRAMEBUFFER,Ia)}},this.initMaterial=function(){THREE.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},this.addPrePlugin=function(){THREE.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},this.addPostPlugin=function(){THREE.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},this.updateShadowMap=function(){THREE.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}},THREE.WebGLRenderTarget=function(a,b,c){this.width=a,this.height=b,c=c||{},this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter,this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==c.format?c.format:THREE.RGBAFormat,this.type=void 0!==c.type?c.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0,this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=void 0!==c.shareDepthFrom?c.shareDepthFrom:null},THREE.WebGLRenderTarget.prototype={constructor:THREE.WebGLRenderTarget,setSize:function(a,b){this.width=a,this.height=b},clone:function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);return a.wrapS=this.wrapS,a.wrapT=this.wrapT,a.magFilter=this.magFilter,a.minFilter=this.minFilter,a.anisotropy=this.anisotropy,a.offset.copy(this.offset),a.repeat.copy(this.repeat),a.format=this.format,a.type=this.type,a.depthBuffer=this.depthBuffer,a.stencilBuffer=this.stencilBuffer,a.generateMipmaps=this.generateMipmaps,a.shareDepthFrom=this.shareDepthFrom,a},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.EventDispatcher.prototype.apply(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube,THREE.WebGLExtensions=function(a){var b={};this.get=function(c){if(void 0!==b[c])return b[c];var d;switch(c){case"EXT_texture_filter_anisotropic":d=a.getExtension("EXT_texture_filter_anisotropic")||a.getExtension("MOZ_EXT_texture_filter_anisotropic")||a.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":d=a.getExtension("WEBGL_compressed_texture_s3tc")||a.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":d=a.getExtension("WEBGL_compressed_texture_pvrtc")||a.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:d=a.getExtension(c)}return null===d&&THREE.warn("THREE.WebGLRenderer: "+c+" extension not supported."),b[c]=d,d}},THREE.WebGLProgram=function(){var a=0,b=function(a){var b,c,d=[];for(var e in a)b=a[e],b!==!1&&(c="#define "+e+" "+b,d.push(c));return d.join("\n")},c=function(a,b,c){for(var d={},e=0,f=c.length;f>e;e++){var g=c[e];d[g]=a.getUniformLocation(b,g)}return d},d=function(a,b,c){for(var d={},e=0,f=c.length;f>e;e++){var g=c[e];d[g]=a.getAttribLocation(b,g)}return d};return function(e,f,g,h){var i=e,j=i.context,k=g.defines,l=g.__webglShader.uniforms,m=g.attributes,n=g.__webglShader.vertexShader,o=g.__webglShader.fragmentShader,p=g.index0AttributeName;void 0===p&&h.morphTargets===!0&&(p="position");var q="SHADOWMAP_TYPE_BASIC";h.shadowMapType===THREE.PCFShadowMap?q="SHADOWMAP_TYPE_PCF":h.shadowMapType===THREE.PCFSoftShadowMap&&(q="SHADOWMAP_TYPE_PCF_SOFT");var r="ENVMAP_TYPE_CUBE",s="ENVMAP_MODE_REFLECTION",t="ENVMAP_BLENDING_MULTIPLY";if(h.envMap){switch(g.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:r="ENVMAP_TYPE_CUBE";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:r="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:r="ENVMAP_TYPE_SPHERE"}switch(g.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:s="ENVMAP_MODE_REFRACTION"}switch(g.combine){case THREE.MultiplyOperation:t="ENVMAP_BLENDING_MULTIPLY";break;case THREE.MixOperation:t="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:t="ENVMAP_BLENDING_ADD"}}var u,v,w=e.gammaFactor>0?e.gammaFactor:1,x=b(k),y=j.createProgram();g instanceof THREE.RawShaderMaterial?(u="",v=""):(u=["precision "+h.precision+" float;","precision "+h.precision+" int;",x,h.supportsVertexTextures?"#define VERTEX_TEXTURES":"",i.gammaInput?"#define GAMMA_INPUT":"",i.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+w,"#define MAX_DIR_LIGHTS "+h.maxDirLights,"#define MAX_POINT_LIGHTS "+h.maxPointLights,"#define MAX_SPOT_LIGHTS "+h.maxSpotLights,"#define MAX_HEMI_LIGHTS "+h.maxHemiLights,"#define MAX_SHADOWS "+h.maxShadows,"#define MAX_BONES "+h.maxBones,h.map?"#define USE_MAP":"",h.envMap?"#define USE_ENVMAP":"",h.envMap?"#define "+s:"",h.lightMap?"#define USE_LIGHTMAP":"",h.bumpMap?"#define USE_BUMPMAP":"",h.normalMap?"#define USE_NORMALMAP":"",h.specularMap?"#define USE_SPECULARMAP":"",h.alphaMap?"#define USE_ALPHAMAP":"",h.vertexColors?"#define USE_COLOR":"",h.flatShading?"#define FLAT_SHADED":"",h.skinning?"#define USE_SKINNING":"",h.useVertexTexture?"#define BONE_TEXTURE":"",h.morphTargets?"#define USE_MORPHTARGETS":"",h.morphNormals?"#define USE_MORPHNORMALS":"",h.wrapAround?"#define WRAP_AROUND":"",h.doubleSided?"#define DOUBLE_SIDED":"",h.flipSided?"#define FLIP_SIDED":"",h.shadowMapEnabled?"#define USE_SHADOWMAP":"",h.shadowMapEnabled?"#define "+q:"",h.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",h.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",h.sizeAttenuation?"#define USE_SIZEATTENUATION":"",h.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",""].join("\n"),v=["precision "+h.precision+" float;","precision "+h.precision+" int;",h.bumpMap||h.normalMap||h.flatShading?"#extension GL_OES_standard_derivatives : enable":"",x,"#define MAX_DIR_LIGHTS "+h.maxDirLights,"#define MAX_POINT_LIGHTS "+h.maxPointLights,"#define MAX_SPOT_LIGHTS "+h.maxSpotLights,"#define MAX_HEMI_LIGHTS "+h.maxHemiLights,"#define MAX_SHADOWS "+h.maxShadows,h.alphaTest?"#define ALPHATEST "+h.alphaTest:"",i.gammaInput?"#define GAMMA_INPUT":"",i.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+w,h.useFog&&h.fog?"#define USE_FOG":"",h.useFog&&h.fogExp?"#define FOG_EXP2":"",h.map?"#define USE_MAP":"",h.envMap?"#define USE_ENVMAP":"",h.envMap?"#define "+r:"",h.envMap?"#define "+s:"",h.envMap?"#define "+t:"",h.lightMap?"#define USE_LIGHTMAP":"",h.bumpMap?"#define USE_BUMPMAP":"",h.normalMap?"#define USE_NORMALMAP":"",h.specularMap?"#define USE_SPECULARMAP":"",h.alphaMap?"#define USE_ALPHAMAP":"",h.vertexColors?"#define USE_COLOR":"",h.flatShading?"#define FLAT_SHADED":"",h.metal?"#define METAL":"",h.wrapAround?"#define WRAP_AROUND":"",h.doubleSided?"#define DOUBLE_SIDED":"",h.flipSided?"#define FLIP_SIDED":"",h.shadowMapEnabled?"#define USE_SHADOWMAP":"",h.shadowMapEnabled?"#define "+q:"",h.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",h.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",h.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"));var z=new THREE.WebGLShader(j,j.VERTEX_SHADER,u+n),A=new THREE.WebGLShader(j,j.FRAGMENT_SHADER,v+o);j.attachShader(y,z),j.attachShader(y,A),void 0!==p&&j.bindAttribLocation(y,0,p),j.linkProgram(y);var B=j.getProgramInfoLog(y);j.getProgramParameter(y,j.LINK_STATUS)===!1&&THREE.error("THREE.WebGLProgram: shader error: "+j.getError(),"gl.VALIDATE_STATUS",j.getProgramParameter(y,j.VALIDATE_STATUS),"gl.getPRogramInfoLog",B),""!==B&&THREE.warn("THREE.WebGLProgram: gl.getProgramInfoLog()"+B),j.deleteShader(z),j.deleteShader(A);var C=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences","bindMatrix","bindMatrixInverse"];h.useVertexTexture?(C.push("boneTexture"),C.push("boneTextureWidth"),C.push("boneTextureHeight")):C.push("boneGlobalMatrices"),h.logarithmicDepthBuffer&&C.push("logDepthBufFC");for(var D in l)C.push(D);this.uniforms=c(j,y,C),C=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"];for(var E=0;E<h.maxMorphTargets;E++)C.push("morphTarget"+E);for(var E=0;E<h.maxMorphNormals;E++)C.push("morphNormal"+E);for(var F in m)C.push(F);return this.attributes=d(j,y,C),this.attributesKeys=Object.keys(this.attributes),this.id=a++,this.code=f,this.usedTimes=1,this.program=y,this.vertexShader=z,this.fragmentShader=A,this}}(),THREE.WebGLShader=function(){var a=function(a){for(var b=a.split("\n"),c=0;c<b.length;c++)b[c]=c+1+": "+b[c];return b.join("\n")};return function(b,c,d){var e=b.createShader(c);return b.shaderSource(e,d),b.compileShader(e),b.getShaderParameter(e,b.COMPILE_STATUS)===!1&&THREE.error("THREE.WebGLShader: Shader couldn't compile."),""!==b.getShaderInfoLog(e)&&THREE.warn("THREE.WebGLShader: gl.getShaderInfoLog()",b.getShaderInfoLog(e),a(d)),e}}(),THREE.WebGLState=function(a,b){var c=new Uint8Array(16),d=new Uint8Array(16),e=null,f=null,g=null,h=null,i=null,j=null,k=null,l=null,m=null,n=null,o=null,p=null,q=null,r=null,s=null,t=null;this.initAttributes=function(){for(var a=0,b=c.length;b>a;a++)c[a]=0},this.enableAttribute=function(b){c[b]=1,0===d[b]&&(a.enableVertexAttribArray(b),d[b]=1)},this.disableUnusedAttributes=function(){for(var b=0,e=d.length;e>b;b++)d[b]!==c[b]&&(a.disableVertexAttribArray(b),d[b]=0)},this.setBlending=function(c,d,l,m,n,o,p){c!==e&&(c===THREE.NoBlending?a.disable(a.BLEND):c===THREE.AdditiveBlending?(a.enable(a.BLEND),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.SRC_ALPHA,a.ONE)):c===THREE.SubtractiveBlending?(a.enable(a.BLEND),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.ONE_MINUS_SRC_COLOR)):c===THREE.MultiplyBlending?(a.enable(a.BLEND),a.blendEquation(a.FUNC_ADD),a.blendFunc(a.ZERO,a.SRC_COLOR)):c===THREE.CustomBlending?a.enable(a.BLEND):(a.enable(a.BLEND),a.blendEquationSeparate(a.FUNC_ADD,a.FUNC_ADD),a.blendFuncSeparate(a.SRC_ALPHA,a.ONE_MINUS_SRC_ALPHA,a.ONE,a.ONE_MINUS_SRC_ALPHA)),e=c),c===THREE.CustomBlending?(n=n||d,o=o||l,p=p||m,(d!==f||n!==i)&&(a.blendEquationSeparate(b(d),b(n)),f=d,i=n),(l!==g||m!==h||o!==j||p!==k)&&(a.blendFuncSeparate(b(l),b(m),b(o),b(p)),g=l,h=m,j=o,k=p)):(f=null,g=null,h=null,i=null,j=null,k=null)},this.setDepthTest=function(b){l!==b&&(b?a.enable(a.DEPTH_TEST):a.disable(a.DEPTH_TEST),l=b)},this.setDepthWrite=function(b){m!==b&&(a.depthMask(b),m=b)},this.setColorWrite=function(b){n!==b&&(a.colorMask(b,b,b,b),n=b)},this.setDoubleSided=function(b){o!==b&&(b?a.disable(a.CULL_FACE):a.enable(a.CULL_FACE),o=b)},this.setFlipSided=function(b){p!==b&&(b?a.frontFace(a.CW):a.frontFace(a.CCW),p=b)},this.setLineWidth=function(b){b!==q&&(a.lineWidth(b),q=b)},this.setPolygonOffset=function(b,c,d){r!==b&&(b?a.enable(a.POLYGON_OFFSET_FILL):a.disable(a.POLYGON_OFFSET_FILL),r=b),!b||s===c&&t===d||(a.polygonOffset(c,d),s=c,t=d)},this.reset=function(){for(var a=0;a<d.length;a++)d[a]=0;e=null,l=null,m=null,n=null,o=null,p=null}},THREE.LensFlarePlugin=function(a,b){function c(b){var c=l.createProgram(),d=l.createShader(l.FRAGMENT_SHADER),e=l.createShader(l.VERTEX_SHADER),f="precision "+a.getPrecision()+" float;\n";return l.shaderSource(d,f+b.fragmentShader),l.shaderSource(e,f+b.vertexShader),l.compileShader(d),l.compileShader(e),l.attachShader(c,d),l.attachShader(c,e),l.linkProgram(c),c}var d,e,f,g,h,i,j,k,l=a.context,m=function(){var a=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),b=new Uint16Array([0,1,2,0,2,3]);d=l.createBuffer(),e=l.createBuffer(),l.bindBuffer(l.ARRAY_BUFFER,d),l.bufferData(l.ARRAY_BUFFER,a,l.STATIC_DRAW),l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e),l.bufferData(l.ELEMENT_ARRAY_BUFFER,b,l.STATIC_DRAW),j=l.createTexture(),k=l.createTexture(),l.bindTexture(l.TEXTURE_2D,j),l.texImage2D(l.TEXTURE_2D,0,l.RGB,16,16,0,l.RGB,l.UNSIGNED_BYTE,null),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.NEAREST),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.NEAREST),l.bindTexture(l.TEXTURE_2D,k),l.texImage2D(l.TEXTURE_2D,0,l.RGBA,16,16,0,l.RGBA,l.UNSIGNED_BYTE,null),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MAG_FILTER,l.NEAREST),l.texParameteri(l.TEXTURE_2D,l.TEXTURE_MIN_FILTER,l.NEAREST),i=l.getParameter(l.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0;var m;m=i?{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},f=c(m),g={vertex:l.getAttribLocation(f,"position"),uv:l.getAttribLocation(f,"uv")},h={renderType:l.getUniformLocation(f,"renderType"),map:l.getUniformLocation(f,"map"),occlusionMap:l.getUniformLocation(f,"occlusionMap"),opacity:l.getUniformLocation(f,"opacity"),color:l.getUniformLocation(f,"color"),scale:l.getUniformLocation(f,"scale"),rotation:l.getUniformLocation(f,"rotation"),screenPosition:l.getUniformLocation(f,"screenPosition")}};this.render=function(c,n,o,p){if(0!==b.length){var q=new THREE.Vector3,r=p/o,s=.5*o,t=.5*p,u=16/p,v=new THREE.Vector2(u*r,u),w=new THREE.Vector3(1,1,0),x=new THREE.Vector2(1,1);void 0===f&&m(),l.useProgram(f),l.enableVertexAttribArray(g.vertex),l.enableVertexAttribArray(g.uv),l.uniform1i(h.occlusionMap,0),l.uniform1i(h.map,1),l.bindBuffer(l.ARRAY_BUFFER,d),l.vertexAttribPointer(g.vertex,2,l.FLOAT,!1,16,0),l.vertexAttribPointer(g.uv,2,l.FLOAT,!1,16,8),l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e),l.disable(l.CULL_FACE),l.depthMask(!1);for(var y=0,z=b.length;z>y;y++){u=16/p,v.set(u*r,u);var A=b[y];if(q.set(A.matrixWorld.elements[12],A.matrixWorld.elements[13],A.matrixWorld.elements[14]),q.applyMatrix4(n.matrixWorldInverse),q.applyProjection(n.projectionMatrix),w.copy(q),x.x=w.x*s+s,x.y=w.y*t+t,i||x.x>0&&x.x<o&&x.y>0&&x.y<p){l.activeTexture(l.TEXTURE1),l.bindTexture(l.TEXTURE_2D,j),l.copyTexImage2D(l.TEXTURE_2D,0,l.RGB,x.x-8,x.y-8,16,16,0),l.uniform1i(h.renderType,0),l.uniform2f(h.scale,v.x,v.y),l.uniform3f(h.screenPosition,w.x,w.y,w.z),l.disable(l.BLEND),l.enable(l.DEPTH_TEST),l.drawElements(l.TRIANGLES,6,l.UNSIGNED_SHORT,0),l.activeTexture(l.TEXTURE0),l.bindTexture(l.TEXTURE_2D,k),l.copyTexImage2D(l.TEXTURE_2D,0,l.RGBA,x.x-8,x.y-8,16,16,0),l.uniform1i(h.renderType,1),l.disable(l.DEPTH_TEST),l.activeTexture(l.TEXTURE1),l.bindTexture(l.TEXTURE_2D,j),l.drawElements(l.TRIANGLES,6,l.UNSIGNED_SHORT,0),A.positionScreen.copy(w),A.customUpdateCallback?A.customUpdateCallback(A):A.updateLensFlares(),l.uniform1i(h.renderType,2),l.enable(l.BLEND);for(var B=0,C=A.lensFlares.length;C>B;B++){var D=A.lensFlares[B];D.opacity>.001&&D.scale>.001&&(w.x=D.x,w.y=D.y,w.z=D.z,u=D.size*D.scale/p,v.x=u*r,v.y=u,l.uniform3f(h.screenPosition,w.x,w.y,w.z),l.uniform2f(h.scale,v.x,v.y),l.uniform1f(h.rotation,D.rotation),l.uniform1f(h.opacity,D.opacity),l.uniform3f(h.color,D.color.r,D.color.g,D.color.b),a.state.setBlending(D.blending,D.blendEquation,D.blendSrc,D.blendDst),a.setTexture(D.texture,1),l.drawElements(l.TRIANGLES,6,l.UNSIGNED_SHORT,0))}}}l.enable(l.CULL_FACE),l.enable(l.DEPTH_TEST),l.depthMask(!0),a.resetGLState()}}},THREE.ShadowMapPlugin=function(a,b,c,d){function e(a,b,d){if(b.visible){var f=c[b.id];if(f&&b.castShadow&&(b.frustumCulled===!1||o.intersectsObject(b)===!0))for(var g=0,h=f.length;h>g;g++){var i=f[g];b._modelViewMatrix.multiplyMatrices(d.matrixWorldInverse,b.matrixWorld),t.push(i)}for(var g=0,h=b.children.length;h>g;g++)e(a,b.children[g],d)}}function f(a,b){var c=new THREE.DirectionalLight;c.isVirtual=!0,c.onlyShadow=!0,c.castShadow=!0,c.shadowCameraNear=a.shadowCameraNear,c.shadowCameraFar=a.shadowCameraFar,c.shadowCameraLeft=a.shadowCameraLeft,c.shadowCameraRight=a.shadowCameraRight,c.shadowCameraBottom=a.shadowCameraBottom,c.shadowCameraTop=a.shadowCameraTop,c.shadowCameraVisible=a.shadowCameraVisible,c.shadowDarkness=a.shadowDarkness,c.shadowBias=a.shadowCascadeBias[b],c.shadowMapWidth=a.shadowCascadeWidth[b],c.shadowMapHeight=a.shadowCascadeHeight[b],c.pointsWorld=[],c.pointsFrustum=[];for(var d=c.pointsWorld,e=c.pointsFrustum,f=0;8>f;f++)d[f]=new THREE.Vector3,e[f]=new THREE.Vector3;var g=a.shadowCascadeNearZ[b],h=a.shadowCascadeFarZ[b];return e[0].set(-1,-1,g),e[1].set(1,-1,g),e[2].set(-1,1,g),e[3].set(1,1,g),e[4].set(-1,-1,h),e[5].set(1,-1,h),e[6].set(-1,1,h),e[7].set(1,1,h),c}function g(a,b){var c=a.shadowCascadeArray[b];c.position.copy(a.position),c.target.position.copy(a.target.position),c.lookAt(c.target),c.shadowCameraVisible=a.shadowCameraVisible,c.shadowDarkness=a.shadowDarkness,c.shadowBias=a.shadowCascadeBias[b];var d=a.shadowCascadeNearZ[b],e=a.shadowCascadeFarZ[b],f=c.pointsFrustum;f[0].z=d,f[1].z=d,f[2].z=d,f[3].z=d,f[4].z=e,f[5].z=e,f[6].z=e,f[7].z=e}function h(a,b){var c=b.shadowCamera,d=b.pointsFrustum,e=b.pointsWorld;q.set(1/0,1/0,1/0),r.set(-(1/0),-(1/0),-(1/0));for(var f=0;8>f;f++){var g=e[f];g.copy(d[f]),g.unproject(a),g.applyMatrix4(c.matrixWorldInverse),g.x<q.x&&(q.x=g.x),g.x>r.x&&(r.x=g.x),g.y<q.y&&(q.y=g.y),g.y>r.y&&(r.y=g.y),g.z<q.z&&(q.z=g.z),g.z>r.z&&(r.z=g.z)}c.left=q.x,c.right=r.x,c.top=r.y,c.bottom=q.y,c.updateProjectionMatrix()}function i(a){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[0]:a.material;
}var j,k,l,m,n=a.context,o=new THREE.Frustum,p=new THREE.Matrix4,q=new THREE.Vector3,r=new THREE.Vector3,s=new THREE.Vector3,t=[],u=THREE.ShaderLib.depthRGBA,v=THREE.UniformsUtils.clone(u.uniforms);j=new THREE.ShaderMaterial({uniforms:v,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader}),k=new THREE.ShaderMaterial({uniforms:v,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,morphTargets:!0}),l=new THREE.ShaderMaterial({uniforms:v,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,skinning:!0}),m=new THREE.ShaderMaterial({uniforms:v,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,morphTargets:!0,skinning:!0}),j._shadowPass=!0,k._shadowPass=!0,l._shadowPass=!0,m._shadowPass=!0,this.render=function(c,q){if(a.shadowMapEnabled!==!1){var r,u,v,w,x,y,z,A,B,C,D,E,F,G=[],H=0,I=null;for(n.clearColor(1,1,1,1),n.disable(n.BLEND),n.enable(n.CULL_FACE),n.frontFace(n.CCW),a.shadowMapCullFace===THREE.CullFaceFront?n.cullFace(n.FRONT):n.cullFace(n.BACK),a.state.setDepthTest(!0),r=0,u=b.length;u>r;r++)if(F=b[r],F.castShadow)if(F instanceof THREE.DirectionalLight&&F.shadowCascade)for(x=0;x<F.shadowCascadeCount;x++){var J;if(F.shadowCascadeArray[x])J=F.shadowCascadeArray[x];else{J=f(F,x),J.originalCamera=q;var K=new THREE.Gyroscope;K.position.copy(F.shadowCascadeOffset),K.add(J),K.add(J.target),q.add(K),F.shadowCascadeArray[x]=J}g(F,x),G[H]=J,H++}else G[H]=F,H++;for(r=0,u=G.length;u>r;r++){if(F=G[r],!F.shadowMap){var L=THREE.LinearFilter;a.shadowMapType===THREE.PCFSoftShadowMap&&(L=THREE.NearestFilter);var M={minFilter:L,magFilter:L,format:THREE.RGBAFormat};F.shadowMap=new THREE.WebGLRenderTarget(F.shadowMapWidth,F.shadowMapHeight,M),F.shadowMapSize=new THREE.Vector2(F.shadowMapWidth,F.shadowMapHeight),F.shadowMatrix=new THREE.Matrix4}if(!F.shadowCamera){if(F instanceof THREE.SpotLight)F.shadowCamera=new THREE.PerspectiveCamera(F.shadowCameraFov,F.shadowMapWidth/F.shadowMapHeight,F.shadowCameraNear,F.shadowCameraFar);else{if(!(F instanceof THREE.DirectionalLight)){THREE.error("THREE.ShadowMapPlugin: Unsupported light type for shadow",F);continue}F.shadowCamera=new THREE.OrthographicCamera(F.shadowCameraLeft,F.shadowCameraRight,F.shadowCameraTop,F.shadowCameraBottom,F.shadowCameraNear,F.shadowCameraFar)}c.add(F.shadowCamera),c.autoUpdate===!0&&c.updateMatrixWorld()}F.shadowCameraVisible&&!F.cameraHelper&&(F.cameraHelper=new THREE.CameraHelper(F.shadowCamera),c.add(F.cameraHelper)),F.isVirtual&&J.originalCamera==q&&h(q,F),y=F.shadowMap,z=F.shadowMatrix,A=F.shadowCamera,A.position.setFromMatrixPosition(F.matrixWorld),s.setFromMatrixPosition(F.target.matrixWorld),A.lookAt(s),A.updateMatrixWorld(),A.matrixWorldInverse.getInverse(A.matrixWorld),F.cameraHelper&&(F.cameraHelper.visible=F.shadowCameraVisible),F.shadowCameraVisible&&F.cameraHelper.update(),z.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),z.multiply(A.projectionMatrix),z.multiply(A.matrixWorldInverse),p.multiplyMatrices(A.projectionMatrix,A.matrixWorldInverse),o.setFromMatrix(p),a.setRenderTarget(y),a.clear(),t.length=0,e(c,c,A);var N,O,P;for(v=0,w=t.length;w>v;v++)D=t[v],E=D.object,B=D.buffer,N=i(E),O=void 0!==E.geometry.morphTargets&&E.geometry.morphTargets.length>0&&N.morphTargets,P=E instanceof THREE.SkinnedMesh&&N.skinning,C=E.customDepthMaterial?E.customDepthMaterial:P?O?m:l:O?k:j,a.setMaterialFaces(N),B instanceof THREE.BufferGeometry?a.renderBufferDirect(A,b,I,C,B,E):a.renderBuffer(A,b,I,C,B,E);for(v=0,w=d.length;w>v;v++)D=d[v],E=D.object,E.visible&&E.castShadow&&(E._modelViewMatrix.multiplyMatrices(A.matrixWorldInverse,E.matrixWorld),a.renderImmediateObject(A,b,I,j,E))}var Q=a.getClearColor(),R=a.getClearAlpha();n.clearColor(Q.r,Q.g,Q.b,R),n.enable(n.BLEND),a.shadowMapCullFace===THREE.CullFaceFront&&n.cullFace(n.BACK),a.resetGLState()}}},THREE.SpritePlugin=function(a,b){function c(){var b=k.createProgram(),c=k.createShader(k.VERTEX_SHADER),d=k.createShader(k.FRAGMENT_SHADER);return k.shaderSource(c,["precision "+a.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),k.shaderSource(d,["precision "+a.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),k.compileShader(c),k.compileShader(d),k.attachShader(b,c),k.attachShader(b,d),k.linkProgram(b),b}function d(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var e,f,g,h,i,j,k=a.context,l=new THREE.Vector3,m=new THREE.Quaternion,n=new THREE.Vector3,o=function(){var a=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),b=new Uint16Array([0,1,2,0,2,3]);e=k.createBuffer(),f=k.createBuffer(),k.bindBuffer(k.ARRAY_BUFFER,e),k.bufferData(k.ARRAY_BUFFER,a,k.STATIC_DRAW),k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,f),k.bufferData(k.ELEMENT_ARRAY_BUFFER,b,k.STATIC_DRAW),g=c(),h={position:k.getAttribLocation(g,"position"),uv:k.getAttribLocation(g,"uv")},i={uvOffset:k.getUniformLocation(g,"uvOffset"),uvScale:k.getUniformLocation(g,"uvScale"),rotation:k.getUniformLocation(g,"rotation"),scale:k.getUniformLocation(g,"scale"),color:k.getUniformLocation(g,"color"),map:k.getUniformLocation(g,"map"),opacity:k.getUniformLocation(g,"opacity"),modelViewMatrix:k.getUniformLocation(g,"modelViewMatrix"),projectionMatrix:k.getUniformLocation(g,"projectionMatrix"),fogType:k.getUniformLocation(g,"fogType"),fogDensity:k.getUniformLocation(g,"fogDensity"),fogNear:k.getUniformLocation(g,"fogNear"),fogFar:k.getUniformLocation(g,"fogFar"),fogColor:k.getUniformLocation(g,"fogColor"),alphaTest:k.getUniformLocation(g,"alphaTest")};var d=document.createElement("canvas");d.width=8,d.height=8;var l=d.getContext("2d");l.fillStyle="white",l.fillRect(0,0,8,8),j=new THREE.Texture(d),j.needsUpdate=!0};this.render=function(c,p){if(0!==b.length){void 0===g&&o(),k.useProgram(g),k.enableVertexAttribArray(h.position),k.enableVertexAttribArray(h.uv),k.disable(k.CULL_FACE),k.enable(k.BLEND),k.bindBuffer(k.ARRAY_BUFFER,e),k.vertexAttribPointer(h.position,2,k.FLOAT,!1,16,0),k.vertexAttribPointer(h.uv,2,k.FLOAT,!1,16,8),k.bindBuffer(k.ELEMENT_ARRAY_BUFFER,f),k.uniformMatrix4fv(i.projectionMatrix,!1,p.projectionMatrix.elements),k.activeTexture(k.TEXTURE0),k.uniform1i(i.map,0);var q=0,r=0,s=c.fog;s?(k.uniform3f(i.fogColor,s.color.r,s.color.g,s.color.b),s instanceof THREE.Fog?(k.uniform1f(i.fogNear,s.near),k.uniform1f(i.fogFar,s.far),k.uniform1i(i.fogType,1),q=1,r=1):s instanceof THREE.FogExp2&&(k.uniform1f(i.fogDensity,s.density),k.uniform1i(i.fogType,2),q=2,r=2)):(k.uniform1i(i.fogType,0),q=0,r=0);for(var t=0,u=b.length;u>t;t++){var v=b[t];v._modelViewMatrix.multiplyMatrices(p.matrixWorldInverse,v.matrixWorld),v.z=-v._modelViewMatrix.elements[14]}b.sort(d);for(var w=[],t=0,u=b.length;u>t;t++){var v=b[t],x=v.material;k.uniform1f(i.alphaTest,x.alphaTest),k.uniformMatrix4fv(i.modelViewMatrix,!1,v._modelViewMatrix.elements),v.matrixWorld.decompose(l,m,n),w[0]=n.x,w[1]=n.y;var y=0;c.fog&&x.fog&&(y=r),q!==y&&(k.uniform1i(i.fogType,y),q=y),null!==x.map?(k.uniform2f(i.uvOffset,x.map.offset.x,x.map.offset.y),k.uniform2f(i.uvScale,x.map.repeat.x,x.map.repeat.y)):(k.uniform2f(i.uvOffset,0,0),k.uniform2f(i.uvScale,1,1)),k.uniform1f(i.opacity,x.opacity),k.uniform3f(i.color,x.color.r,x.color.g,x.color.b),k.uniform1f(i.rotation,x.rotation),k.uniform2fv(i.scale,w),a.state.setBlending(x.blending,x.blendEquation,x.blendSrc,x.blendDst),a.state.setDepthTest(x.depthTest),a.state.setDepthWrite(x.depthWrite),x.map&&x.map.image&&x.map.image.width?a.setTexture(x.map,0):a.setTexture(j,0),k.drawElements(k.TRIANGLES,6,k.UNSIGNED_SHORT,0)}k.enable(k.CULL_FACE),a.resetGLState()}}},THREE.GeometryUtils={merge:function(a,b,c){THREE.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var d;b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),d=b.matrix,b=b.geometry),a.merge(b,d,c)},center:function(a){return THREE.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),a.center()}},THREE.ImageUtils={crossOrigin:void 0,loadTexture:function(a,b,c,d){var e=new THREE.ImageLoader;e.crossOrigin=this.crossOrigin;var f=new THREE.Texture(void 0,b);return e.load(a,function(a){f.image=a,f.needsUpdate=!0,c&&c(f)},void 0,function(a){d&&d(a)}),f.sourceFile=a,f},loadTextureCube:function(a,b,c,d){var e=[],f=new THREE.ImageLoader;f.crossOrigin=this.crossOrigin;var g=new THREE.CubeTexture(e,b);g.flipY=!1;for(var h=0,i=function(b){f.load(a[b],function(a){g.images[b]=a,h+=1,6===h&&(g.needsUpdate=!0,c&&c(g))},void 0,d)},j=0,k=a.length;k>j;++j)i(j);return g},loadCompressedTexture:function(){THREE.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){THREE.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},getNormalMap:function(a,b){var c=function(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]]},d=function(a,b){return[a[0]-b[0],a[1]-b[1],a[2]-b[2]]},e=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b=1|b;var f=a.width,g=a.height,h=document.createElement("canvas");h.width=f,h.height=g;var i=h.getContext("2d");i.drawImage(a,0,0);for(var j=i.getImageData(0,0,f,g).data,k=i.createImageData(f,g),l=k.data,m=0;f>m;m++)for(var n=0;g>n;n++){var o=0>n-1?0:n-1,p=n+1>g-1?g-1:n+1,q=0>m-1?0:m-1,r=m+1>f-1?f-1:m+1,s=[],t=[0,0,j[4*(n*f+m)]/255*b];s.push([-1,0,j[4*(n*f+q)]/255*b]),s.push([-1,-1,j[4*(o*f+q)]/255*b]),s.push([0,-1,j[4*(o*f+m)]/255*b]),s.push([1,-1,j[4*(o*f+r)]/255*b]),s.push([1,0,j[4*(n*f+r)]/255*b]),s.push([1,1,j[4*(p*f+r)]/255*b]),s.push([0,1,j[4*(p*f+m)]/255*b]),s.push([-1,1,j[4*(p*f+q)]/255*b]);for(var u=[],v=s.length,w=0;v>w;w++){var x=s[w],y=s[(w+1)%v];x=d(x,t),y=d(y,t),u.push(e(c(x,y)))}for(var z=[0,0,0],w=0;w<u.length;w++)z[0]+=u[w][0],z[1]+=u[w][1],z[2]+=u[w][2];z[0]/=u.length,z[1]/=u.length,z[2]/=u.length;var A=4*(n*f+m);l[A]=(z[0]+1)/2*255|0,l[A+1]=(z[1]+1)/2*255|0,l[A+2]=255*z[2]|0,l[A+3]=255}return i.putImageData(k,0,0),h},generateDataTexture:function(a,b,c){for(var d=a*b,e=new Uint8Array(3*d),f=Math.floor(255*c.r),g=Math.floor(255*c.g),h=Math.floor(255*c.b),i=0;d>i;i++)e[3*i]=f,e[3*i+1]=g,e[3*i+2]=h;var j=new THREE.DataTexture(e,a,b,THREE.RGBFormat);return j.needsUpdate=!0,j}},THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;e>d;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld),b.remove(a),c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld),a.applyMatrix(d),b.remove(a),c.add(a)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){try{return this.faces[this.face][this.weight][this.style]}catch(a){throw"The font "+this.face+" with "+this.weight+" weight and "+this.style+" style is missing."}},loadFace:function(a){var b=a.familyName.toLowerCase(),c=this;return c.faces[b]=c.faces[b]||{},c.faces[b][a.cssFontWeight]=c.faces[b][a.cssFontWeight]||{},c.faces[b][a.cssFontWeight][a.cssFontStyle]=a,c.faces[b][a.cssFontWeight][a.cssFontStyle]=a,a},drawText:function(a){var b,c=this.getFace(),d=this.size/c.resolution,e=0,f=String(a).split(""),g=f.length,h=[];for(b=0;g>b;b++){var i=new THREE.Path,j=this.extractGlyphPoints(f[b],c,d,e,i);e+=j.offset,h.push(j.path)}var k=e/2;return{paths:h,offset:k}},extractGlyphPoints:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y=[],z=b.glyphs[a]||b.glyphs["?"];if(z){if(z.o)for(i=z._cachedOutline||(z._cachedOutline=z.o.split(" ")),k=i.length,l=c,m=c,f=0;k>f;)switch(j=i[f++]){case"m":n=i[f++]*l+d,o=i[f++]*m,e.moveTo(n,o);break;case"l":n=i[f++]*l+d,o=i[f++]*m,e.lineTo(n,o);break;case"q":if(p=i[f++]*l+d,q=i[f++]*m,t=i[f++]*l+d,u=i[f++]*m,e.quadraticCurveTo(t,u,p,q),x=y[y.length-1])for(r=x.x,s=x.y,g=1,h=this.divisions;h>=g;g++){var A=g/h;THREE.Shape.Utils.b2(A,r,t,p),THREE.Shape.Utils.b2(A,s,u,q)}break;case"b":if(p=i[f++]*l+d,q=i[f++]*m,t=i[f++]*l+d,u=i[f++]*m,v=i[f++]*l+d,w=i[f++]*m,e.bezierCurveTo(t,u,v,w,p,q),x=y[y.length-1])for(r=x.x,s=x.y,g=1,h=this.divisions;h>=g;g++){var A=g/h;THREE.Shape.Utils.b3(A,r,t,v,p),THREE.Shape.Utils.b3(A,s,u,w,q)}}return{offset:z.ha*c,path:e}}}},THREE.FontUtils.generateShapes=function(a,b){b=b||{};var c=void 0!==b.size?b.size:100,d=void 0!==b.curveSegments?b.curveSegments:4,e=void 0!==b.font?b.font:"helvetiker",f=void 0!==b.weight?b.weight:"normal",g=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=c,THREE.FontUtils.divisions=d,THREE.FontUtils.face=e,THREE.FontUtils.weight=f,THREE.FontUtils.style=g;for(var h=THREE.FontUtils.drawText(a),i=h.paths,j=[],k=0,l=i.length;l>k;k++)Array.prototype.push.apply(j,i[k].toShapes());return j},function(a){var b=1e-10,c=function(a,b){var c=a.length;if(3>c)return null;var f,g,h,i=[],j=[],k=[];if(d(a)>0)for(g=0;c>g;g++)j[g]=g;else for(g=0;c>g;g++)j[g]=c-1-g;var l=c,m=2*l;for(g=l-1;l>2;){if(m--<=0)return THREE.warn("THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()"),b?k:i;if(f=g,f>=l&&(f=0),g=f+1,g>=l&&(g=0),h=g+1,h>=l&&(h=0),e(a,f,g,h,l,j)){var n,o,p,q,r;for(n=j[f],o=j[g],p=j[h],i.push([a[n],a[o],a[p]]),k.push([j[f],j[g],j[h]]),q=g,r=g+1;l>r;q++,r++)j[q]=j[r];l--,m=2*l}}return b?k:i},d=function(a){for(var b=a.length,c=0,d=b-1,e=0;b>e;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return.5*c},e=function(a,c,d,e,f,g){var h,i,j,k,l,m,n,o,p;if(i=a[g[c]].x,j=a[g[c]].y,k=a[g[d]].x,l=a[g[d]].y,m=a[g[e]].x,n=a[g[e]].y,b>(k-i)*(n-j)-(l-j)*(m-i))return!1;var q,r,s,t,u,v,w,x,y,z,A,B,C,D,E;for(q=m-k,r=n-l,s=i-m,t=j-n,u=k-i,v=l-j,h=0;f>h;h++)if(o=a[g[h]].x,p=a[g[h]].y,!(o===i&&p===j||o===k&&p===l||o===m&&p===n)&&(w=o-i,x=p-j,y=o-k,z=p-l,A=o-m,B=p-n,E=q*z-r*y,C=u*x-v*w,D=s*B-t*A,E>=-b&&D>=-b&&C>=-b))return!1;return!0};return a.Triangulate=c,a.Triangulate.area=d,a}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.typeface_js=self._typeface_js,THREE.Audio=function(a){THREE.Object3D.call(this),this.type="Audio",this.context=a.context,this.source=this.context.createBufferSource(),this.source.onended=this.onEnded.bind(this),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.panner=this.context.createPanner(),this.panner.connect(this.gain),this.autoplay=!1,this.startTime=0,this.isPlaying=!1},THREE.Audio.prototype=Object.create(THREE.Object3D.prototype),THREE.Audio.prototype.constructor=THREE.Audio,THREE.Audio.prototype.load=function(a){var b=this,c=new XMLHttpRequest;return c.open("GET",a,!0),c.responseType="arraybuffer",c.onload=function(a){b.context.decodeAudioData(this.response,function(a){b.source.buffer=a,b.autoplay&&b.play()})},c.send(),this},THREE.Audio.prototype.play=function(){if(this.isPlaying===!0)return void THREE.warn("THREE.Audio: Audio is already playing.");var a=this.context.createBufferSource();a.buffer=this.source.buffer,a.loop=this.source.loop,a.onended=this.source.onended,a.connect(this.panner),a.start(0,this.startTime),this.isPlaying=!0,this.source=a},THREE.Audio.prototype.pause=function(){this.source.stop(),this.startTime=this.context.currentTime},THREE.Audio.prototype.stop=function(){this.source.stop(),this.startTime=0},THREE.Audio.prototype.onEnded=function(){this.isPlaying=!1},THREE.Audio.prototype.setLoop=function(a){this.source.loop=a},THREE.Audio.prototype.setRefDistance=function(a){this.panner.refDistance=a},THREE.Audio.prototype.setRolloffFactor=function(a){this.panner.rolloffFactor=a},THREE.Audio.prototype.setVolume=function(a){this.gain.gain.value=a},THREE.Audio.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3;return function(b){THREE.Object3D.prototype.updateMatrixWorld.call(this,b),a.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(a.x,a.y,a.z)}}(),THREE.AudioListener=function(){THREE.Object3D.call(this),this.type="AudioListener",this.context=new(window.AudioContext||window.webkitAudioContext)},THREE.AudioListener.prototype=Object.create(THREE.Object3D.prototype),THREE.AudioListener.prototype.constructor=THREE.AudioListener,THREE.AudioListener.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3,b=new THREE.Quaternion,c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Vector3;return function(g){THREE.Object3D.prototype.updateMatrixWorld.call(this,g);var h=this.context.listener,i=this.up;this.matrixWorld.decompose(a,b,c),d.set(0,0,-1).applyQuaternion(b),e.subVectors(a,f),h.setPosition(a.x,a.y,a.z),h.setOrientation(d.x,d.y,d.z,i.x,i.y,i.z),h.setVelocity(e.x,e.y,e.z),f.copy(a)}}(),THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(a){return THREE.warn("THREE.Curve: Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(a){var b=this.getUtoTmapping(a);return this.getPoint(b)},THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;a>=b;b++)c.push(this.getPoint(b/a));return c},THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;a>=b;b++)c.push(this.getPointAt(b/a));return c},THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]},THREE.Curve.prototype.getLengths=function(a){if(a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b,c,d=[],e=this.getPoint(0),f=0;for(d.push(0),c=1;a>=c;c++)b=this.getPoint(c/a),f+=b.distanceTo(e),d.push(f),e=b;return this.cacheArcLengths=d,d},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(a,b){var c,d=this.getLengths(),e=0,f=d.length;c=b?b:a*d[f-1];for(var g,h=0,i=f-1;i>=h;)if(e=Math.floor(h+(i-h)/2),g=d[e]-c,0>g)h=e+1;else{if(!(g>0)){i=e;break}i=e-1}if(e=i,d[e]==c){var j=e/(f-1);return j}var k=d[e],l=d[e+1],m=l-k,n=(c-k)/m,j=(e+n)/(f-1);return j},THREE.Curve.prototype.getTangent=function(a){var b=1e-4,c=a-b,d=a+b;0>c&&(c=0),d>1&&(d=1);var e=this.getPoint(c),f=this.getPoint(d),g=f.clone().sub(e);return g.normalize()},THREE.Curve.prototype.getTangentAt=function(a){var b=this.getUtoTmapping(a);return this.getTangent(b)},THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a,b,c,d,e){var f=6*a*a-6*a,g=3*a*a-4*a+1,h=-6*a*a+6*a,i=3*a*a-2*a;return f+g+h+i},interpolate:function(a,b,c,d,e){var f=.5*(c-a),g=.5*(d-b),h=e*e,i=e*h;return(2*b-2*c+f+g)*i+(-3*b+3*c-2*f-g)*h+f*e+b}},THREE.Curve.create=function(a,b){return a.prototype=Object.create(THREE.Curve.prototype),a.prototype.constructor=a,a.prototype.getPoint=b,a},THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.constructor=THREE.CurvePath,THREE.CurvePath.prototype.add=function(a){this.curves.push(a)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))},THREE.CurvePath.prototype.getPoint=function(a){for(var b,c,d=a*this.getLength(),e=this.getCurveLengths(),f=0;f<e.length;){if(e[f]>=d){b=e[f]-d,c=this.curves[f];var g=1-b/c.getLength();return c.getPointAt(g)}f++}return null},THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a,b=[],c=0,d=this.curves.length;for(a=0;d>a;a++)c+=this.curves[a].getLength(),b.push(c);return this.cacheLengths=b,b},THREE.CurvePath.prototype.getBoundingBox=function(){var a,b,c,d,e,f,g=this.getPoints();a=b=Number.NEGATIVE_INFINITY,d=e=Number.POSITIVE_INFINITY;var h,i,j,k,l=g[0]instanceof THREE.Vector3;for(k=l?new THREE.Vector3:new THREE.Vector2,i=0,j=g.length;j>i;i++)h=g[i],h.x>a?a=h.x:h.x<d&&(d=h.x),h.y>b?b=h.y:h.y<e&&(e=h.y),l&&(h.z>c?c=h.z:h.z<f&&(f=h.z)),k.add(h);var m={minX:d,minY:e,maxX:a,maxY:b};return l&&(m.maxZ=c,m.minZ=f),m},THREE.CurvePath.prototype.createPointsGeometry=function(a){var b=this.getPoints(a,!0);return this.createGeometry(b)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){var b=this.getSpacedPoints(a,!0);return this.createGeometry(b)},THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b},THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)},THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c,d,e=this.getPoints(a);for(b||(b=this.bends),c=0,d=b.length;d>c;c++)e=this.getWrapPoints(e,b[c]);return e},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c,d,e=this.getSpacedPoints(a);for(b||(b=this.bends),c=0,d=b.length;d>c;c++)e=this.getWrapPoints(e,b[c]);return e},THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c,d,e,f,g,h,i=this.getBoundingBox();for(c=0,d=a.length;d>c;c++){e=a[c],f=e.x,g=e.y,h=f/i.maxX,h=b.getUtoTmapping(h,f);var j=b.getPoint(h),k=b.getTangent(h);k.set(-k.y,k.x).multiplyScalar(g),e.x=j.x+k.x,e.y=j.y+k.y}return a},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.constructor=THREE.Gyroscope,THREE.Gyroscope.prototype.updateMatrixWorld=function(){var a=new THREE.Vector3,b=new THREE.Quaternion,c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Quaternion,f=new THREE.Vector3;return function(g){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||g)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(d,e,f),this.matrix.decompose(a,b,c),this.matrixWorld.compose(d,b,f)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,g=!0);for(var h=0,i=this.children.length;i>h;h++)this.children[h].updateMatrixWorld(g)}}(),THREE.Path=function(a){THREE.CurvePath.call(this),this.actions=[],a&&this.fromPoints(a)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.Path.prototype.constructor=THREE.Path,THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;c>b;b++)this.lineTo(a[b].x,a[b].y)},THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})},THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,e=d[d.length-2],f=d[d.length-1],g=new THREE.LineCurve(new THREE.Vector2(e,f),new THREE.Vector2(a,b));this.curves.push(g),this.actions.push({action:THREE.PathActions.LINE_TO,args:c})},THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,g=f[f.length-2],h=f[f.length-1],i=new THREE.QuadraticBezierCurve(new THREE.Vector2(g,h),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(i),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})},THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args,i=h[h.length-2],j=h[h.length-1],k=new THREE.CubicBezierCurve(new THREE.Vector2(i,j),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));this.curves.push(k),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:g})},THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,d=c[c.length-2],e=c[c.length-1],f=[new THREE.Vector2(d,e)];Array.prototype.push.apply(f,a);var g=new THREE.SplineCurve(f);this.curves.push(g),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})},THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this.actions[this.actions.length-1].args,h=g[g.length-2],i=g[g.length-1];this.absarc(a+h,b+i,c,d,e,f)},THREE.Path.prototype.absarc=function(a,b,c,d,e,f){this.absellipse(a,b,c,c,d,e,f)},THREE.Path.prototype.ellipse=function(a,b,c,d,e,f,g){var h=this.actions[this.actions.length-1].args,i=h[h.length-2],j=h[h.length-1];this.absellipse(a+i,b+j,c,d,e,f,g)},THREE.Path.prototype.absellipse=function(a,b,c,d,e,f,g){var h=Array.prototype.slice.call(arguments),i=new THREE.EllipseCurve(a,b,c,d,e,f,g);this.curves.push(i);var j=i.getPoint(1);h.push(j.x),h.push(j.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:h})},THREE.Path.prototype.getSpacedPoints=function(a,b){a||(a=40);for(var c=[],d=0;a>d;d++)c.push(this.getPoint(d/a));return c},THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);a=a||12;var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=[];for(c=0,d=this.actions.length;d>c;c++)switch(e=this.actions[c],f=e.action,g=e.args,f){case THREE.PathActions.MOVE_TO:u.push(new THREE.Vector2(g[0],g[1]));break;case THREE.PathActions.LINE_TO:u.push(new THREE.Vector2(g[0],g[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(h=g[2],i=g[3],l=g[0],m=g[1],u.length>0?(p=u[u.length-1],n=p.x,o=p.y):(p=this.actions[c-1].args,n=p[p.length-2],o=p[p.length-1]),q=1;a>=q;q++)r=q/a,s=THREE.Shape.Utils.b2(r,n,l,h),t=THREE.Shape.Utils.b2(r,o,m,i),u.push(new THREE.Vector2(s,t));break;case THREE.PathActions.BEZIER_CURVE_TO:for(h=g[4],i=g[5],l=g[0],m=g[1],j=g[2],k=g[3],u.length>0?(p=u[u.length-1],n=p.x,o=p.y):(p=this.actions[c-1].args,n=p[p.length-2],o=p[p.length-1]),q=1;a>=q;q++)r=q/a,s=THREE.Shape.Utils.b3(r,n,l,j,h),t=THREE.Shape.Utils.b3(r,o,m,k,i),u.push(new THREE.Vector2(s,t));break;case THREE.PathActions.CSPLINE_THRU:p=this.actions[c-1].args;var v=new THREE.Vector2(p[p.length-2],p[p.length-1]),w=[v],x=a*g[0].length;w=w.concat(g[0]);var y=new THREE.SplineCurve(w);for(q=1;x>=q;q++)u.push(y.getPointAt(q/x));break;case THREE.PathActions.ARC:var z,A=g[0],B=g[1],C=g[2],D=g[3],E=g[4],F=!!g[5],G=E-D,H=2*a;for(q=1;H>=q;q++)r=q/H,F||(r=1-r),z=D+r*G,s=A+C*Math.cos(z),t=B+C*Math.sin(z),u.push(new THREE.Vector2(s,t));break;case THREE.PathActions.ELLIPSE:var z,A=g[0],B=g[1],I=g[2],J=g[3],D=g[4],E=g[5],F=!!g[6],G=E-D,H=2*a;for(q=1;H>=q;q++)r=q/H,F||(r=1-r),z=D+r*G,s=A+I*Math.cos(z),t=B+J*Math.sin(z),u.push(new THREE.Vector2(s,t))}var K=u[u.length-1],L=1e-10;return Math.abs(K.x-u[0].x)<L&&Math.abs(K.y-u[0].y)<L&&u.splice(u.length-1,1),b&&u.push(u[0]),u},THREE.Path.prototype.toShapes=function(a,b){function c(a){var b,c,d,e,f,g=[],h=new THREE.Path;for(b=0,c=a.length;c>b;b++)d=a[b],f=d.args,e=d.action,e==THREE.PathActions.MOVE_TO&&0!=h.actions.length&&(g.push(h),h=new THREE.Path),h[e].apply(h,f);return 0!=h.actions.length&&g.push(h),g}function d(a){for(var b=[],c=0,d=a.length;d>c;c++){var e=a[c],f=new THREE.Shape;f.actions=e.actions,f.curves=e.curves,b.push(f)}return b}function e(a,b){for(var c=1e-10,d=b.length,e=!1,f=d-1,g=0;d>g;f=g++){var h=b[f],i=b[g],j=i.x-h.x,k=i.y-h.y;if(Math.abs(k)>c){if(0>k&&(h=b[g],j=-j,i=b[f],k=-k),a.y<h.y||a.y>i.y)continue;if(a.y==h.y){if(a.x==h.x)return!0}else{var l=k*(a.x-h.x)-j*(a.y-h.y);if(0==l)return!0;if(0>l)continue;e=!e}}else{if(a.y!=h.y)continue;if(i.x<=a.x&&a.x<=h.x||h.x<=a.x&&a.x<=i.x)return!0}}return e}var f=c(this.actions);if(0==f.length)return[];if(b===!0)return d(f);var g,h,i,j=[];if(1==f.length)return h=f[0],i=new THREE.Shape,i.actions=h.actions,i.curves=h.curves,j.push(i),j;var k=!THREE.Shape.Utils.isClockWise(f[0].getPoints());k=a?!k:k;var l,m=[],n=[],o=[],p=0;n[p]=void 0,o[p]=[];var q,r;for(q=0,r=f.length;r>q;q++)h=f[q],l=h.getPoints(),g=THREE.Shape.Utils.isClockWise(l),g=a?!g:g,g?(!k&&n[p]&&p++,n[p]={s:new THREE.Shape,p:l},n[p].s.actions=h.actions,n[p].s.curves=h.curves,k&&p++,o[p]=[]):o[p].push({h:h,p:l[0]});if(!n[0])return d(f);if(n.length>1){for(var s=!1,t=[],u=0,v=n.length;v>u;u++)m[u]=[];for(var u=0,v=n.length;v>u;u++)for(var w=o[u],x=0;x<w.length;x++){for(var y=w[x],z=!0,A=0;A<n.length;A++)e(y.p,n[A].p)&&(u!=A&&t.push({froms:u,tos:A,hole:x}),z?(z=!1,m[A].push(y)):s=!0);z&&m[u].push(y)}t.length>0&&(s||(o=m))}var B,C,D;for(q=0,r=n.length;r>q;q++)for(i=n[q].s,j.push(i),B=o[q],C=0,D=B.length;D>C;C++)i.holes.push(B[C].h);return j},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.constructor=THREE.Shape,THREE.Shape.prototype.extrude=function(a){var b=new THREE.ExtrudeGeometry(this,a);return b},THREE.Shape.prototype.makeGeometry=function(a){var b=new THREE.ShapeGeometry(this,a);return b},THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;c>b;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d},THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;c>b;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d},THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}},THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)},THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}},THREE.Shape.Utils={triangulateShape:function(a,b){function c(a,b,c){return a.x!=b.x?a.x<b.x?a.x<=c.x&&c.x<=b.x:b.x<=c.x&&c.x<=a.x:a.y<b.y?a.y<=c.y&&c.y<=b.y:b.y<=c.y&&c.y<=a.y}function d(a,b,d,e,f){var g=1e-10,h=b.x-a.x,i=b.y-a.y,j=e.x-d.x,k=e.y-d.y,l=a.x-d.x,m=a.y-d.y,n=i*j-h*k,o=i*l-h*m;if(Math.abs(n)>g){var p;if(n>0){if(0>o||o>n)return[];if(p=k*l-j*m,0>p||p>n)return[]}else{if(o>0||n>o)return[];if(p=k*l-j*m,p>0||n>p)return[]}if(0==p)return!f||0!=o&&o!=n?[a]:[];if(p==n)return!f||0!=o&&o!=n?[b]:[];if(0==o)return[d];if(o==n)return[e];var q=p/n;return[{x:a.x+q*h,y:a.y+q*i}]}if(0!=o||k*l!=j*m)return[];var r=0==h&&0==i,s=0==j&&0==k;if(r&&s)return a.x!=d.x||a.y!=d.y?[]:[a];if(r)return c(d,e,a)?[a]:[];if(s)return c(a,b,d)?[d]:[];var t,u,v,w,x,y,z,A;return 0!=h?(a.x<b.x?(t=a,v=a.x,
u=b,w=b.x):(t=b,v=b.x,u=a,w=a.x),d.x<e.x?(x=d,z=d.x,y=e,A=e.x):(x=e,z=e.x,y=d,A=d.x)):(a.y<b.y?(t=a,v=a.y,u=b,w=b.y):(t=b,v=b.y,u=a,w=a.y),d.y<e.y?(x=d,z=d.y,y=e,A=e.y):(x=e,z=e.y,y=d,A=d.y)),z>=v?z>w?[]:w==z?f?[]:[x]:A>=w?[x,u]:[x,y]:v>A?[]:v==A?f?[]:[t]:A>=w?[t,u]:[t,y]}function e(a,b,c,d){var e=1e-10,f=b.x-a.x,g=b.y-a.y,h=c.x-a.x,i=c.y-a.y,j=d.x-a.x,k=d.y-a.y,l=f*i-g*h,m=f*k-g*j;if(Math.abs(l)>e){var n=j*i-k*h;return l>0?m>=0&&n>=0:m>=0||n>=0}return m>0}function f(a,b){function c(a,b){var c=s.length-1,d=a-1;0>d&&(d=c);var f=a+1;f>c&&(f=0);var g=e(s[a],s[d],s[f],h[b]);if(!g)return!1;var i=h.length-1,j=b-1;0>j&&(j=i);var k=b+1;return k>i&&(k=0),g=e(h[b],h[j],h[k],s[a]),g?!0:!1}function f(a,b){var c,e,f;for(c=0;c<s.length;c++)if(e=c+1,e%=s.length,f=d(a,b,s[c],s[e],!0),f.length>0)return!0;return!1}function g(a,c){var e,f,g,h,i;for(e=0;e<t.length;e++)for(f=b[t[e]],g=0;g<f.length;g++)if(h=g+1,h%=f.length,i=d(a,c,f[g],f[h],!0),i.length>0)return!0;return!1}for(var h,i,j,k,l,m,n,o,p,q,r,s=a.concat(),t=[],u=[],v=0,w=b.length;w>v;v++)t.push(v);for(var x=0,y=2*t.length;t.length>0;){if(y--,0>y){console.log("Infinite Loop! Holes left:"+t.length+", Probably Hole outside Shape!");break}for(j=x;j<s.length;j++){k=s[j],i=-1;for(var v=0;v<t.length;v++)if(m=t[v],n=k.x+":"+k.y+":"+m,void 0===u[n]){h=b[m];for(var z=0;z<h.length;z++)if(l=h[z],c(j,z)&&!f(k,l)&&!g(k,l)){i=z,t.splice(v,1),o=s.slice(0,j+1),p=s.slice(j),q=h.slice(i),r=h.slice(0,i+1),s=o.concat(q).concat(r).concat(p),x=j;break}if(i>=0)break;u[n]=!0}if(i>=0)break}}return s}for(var g,h,i,j,k,l,m={},n=a.concat(),o=0,p=b.length;p>o;o++)Array.prototype.push.apply(n,b[o]);for(g=0,h=n.length;h>g;g++)k=n[g].x+":"+n[g].y,void 0!==m[k]&&THREE.warn("THREE.Shape: Duplicate point",k),m[k]=g;var q=f(a,b),r=THREE.FontUtils.Triangulate(q,!1);for(g=0,h=r.length;h>g;g++)for(j=r[g],i=0;3>i;i++)k=j[i].x+":"+j[i].y,l=m[k],void 0!==l&&(j[i]=l);return r.concat()},isClockWise:function(a){return THREE.FontUtils.Triangulate.area(a)<0},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){var c=1-a;return 3*c*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+this.b3p3(a,e)}},THREE.LineCurve=function(a,b){this.v1=a,this.v2=b},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.constructor=THREE.LineCurve,THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);return b.multiplyScalar(a).add(this.v1),b},THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)},THREE.LineCurve.prototype.getTangent=function(a){var b=this.v2.clone().sub(this.v1);return b.normalize()},THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a,this.v1=b,this.v2=c},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve,THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b=new THREE.Vector2;return b.x=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x),b.y=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y),b},THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b=new THREE.Vector2;return b.x=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x),b.y=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y),b.normalize()},THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a,this.v1=b,this.v2=c,this.v3=d},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve,THREE.CubicBezierCurve.prototype.getPoint=function(a){var b,c;return b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(b,c)},THREE.CubicBezierCurve.prototype.getTangent=function(a){var b,c;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),c=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var d=new THREE.Vector2(b,c);return d.normalize(),d},THREE.SplineCurve=function(a){this.points=void 0==a?[]:a},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.constructor=THREE.SplineCurve,THREE.SplineCurve.prototype.getPoint=function(a){var b=this.points,c=(b.length-1)*a,d=Math.floor(c),e=c-d,f=b[0==d?d:d-1],g=b[d],h=b[d>b.length-2?b.length-1:d+1],i=b[d>b.length-3?b.length-1:d+2],j=new THREE.Vector2;return j.x=THREE.Curve.Utils.interpolate(f.x,g.x,h.x,i.x,e),j.y=THREE.Curve.Utils.interpolate(f.y,g.y,h.y,i.y,e),j},THREE.EllipseCurve=function(a,b,c,d,e,f,g){this.aX=a,this.aY=b,this.xRadius=c,this.yRadius=d,this.aStartAngle=e,this.aEndAngle=f,this.aClockwise=g},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve,THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;0>b&&(b+=2*Math.PI),b>2*Math.PI&&(b-=2*Math.PI);var c;c=this.aClockwise===!0?this.aEndAngle+(1-a)*(2*Math.PI-b):this.aStartAngle+a*b;var d=new THREE.Vector2;return d.x=this.aX+this.xRadius*Math.cos(c),d.y=this.aY+this.yRadius*Math.sin(c),d},THREE.ArcCurve=function(a,b,c,d,e,f){THREE.EllipseCurve.call(this,a,b,c,c,d,e,f)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.ArcCurve.prototype.constructor=THREE.ArcCurve,THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a,this.v2=b},function(a){var b=new THREE.Vector3;return b.subVectors(this.v2,this.v1),b.multiplyScalar(a),b.add(this.v1),b}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a,this.v1=b,this.v2=c},function(a){var b=new THREE.Vector3;return b.x=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x),b.y=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y),b.z=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z),b}),THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a,this.v1=b,this.v2=c,this.v3=d},function(a){var b=new THREE.Vector3;return b.x=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x),b.y=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y),b.z=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z),b}),THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=this.points,c=(b.length-1)*a,d=Math.floor(c),e=c-d,f=b[0==d?d:d-1],g=b[d],h=b[d>b.length-2?b.length-1:d+1],i=b[d>b.length-3?b.length-1:d+2],j=new THREE.Vector3;return j.x=THREE.Curve.Utils.interpolate(f.x,g.x,h.x,i.x,e),j.y=THREE.Curve.Utils.interpolate(f.y,g.y,h.y,i.y,e),j.z=THREE.Curve.Utils.interpolate(f.z,g.z,h.z,i.z,e),j}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=this.points,c=(b.length-0)*a,d=Math.floor(c),e=c-d;d+=d>0?0:(Math.floor(Math.abs(d)/b.length)+1)*b.length;var f=b[(d-1)%b.length],g=b[d%b.length],h=b[(d+1)%b.length],i=b[(d+2)%b.length],j=new THREE.Vector3;return j.x=THREE.Curve.Utils.interpolate(f.x,g.x,h.x,i.x,e),j.y=THREE.Curve.Utils.interpolate(f.y,g.y,h.y,i.y,e),j.z=THREE.Curve.Utils.interpolate(f.z,g.z,h.z,i.z,e),j}),THREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){THREE.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){THREE.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){THREE.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(a){if(a.initialized===!0)return a;for(var b=0;b<a.hierarchy.length;b++){for(var c=0;c<a.hierarchy[b].keys.length;c++)if(a.hierarchy[b].keys[c].time<0&&(a.hierarchy[b].keys[c].time=0),void 0!==a.hierarchy[b].keys[c].rot&&!(a.hierarchy[b].keys[c].rot instanceof THREE.Quaternion)){var d=a.hierarchy[b].keys[c].rot;a.hierarchy[b].keys[c].rot=(new THREE.Quaternion).fromArray(d)}if(a.hierarchy[b].keys.length&&void 0!==a.hierarchy[b].keys[0].morphTargets){for(var e={},c=0;c<a.hierarchy[b].keys.length;c++)for(var f=0;f<a.hierarchy[b].keys[c].morphTargets.length;f++){var g=a.hierarchy[b].keys[c].morphTargets[f];e[g]=-1}a.hierarchy[b].usedMorphTargets=e;for(var c=0;c<a.hierarchy[b].keys.length;c++){var h={};for(var g in e){for(var f=0;f<a.hierarchy[b].keys[c].morphTargets.length;f++)if(a.hierarchy[b].keys[c].morphTargets[f]===g){h[g]=a.hierarchy[b].keys[c].morphTargetsInfluences[f];break}f===a.hierarchy[b].keys[c].morphTargets.length&&(h[g]=0)}a.hierarchy[b].keys[c].morphTargetsInfluences=h}}for(var c=1;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].time===a.hierarchy[b].keys[c-1].time&&(a.hierarchy[b].keys.splice(c,1),c--);for(var c=0;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].index=c}return a.initialized=!0,a},parse:function(a){var b=function(a,c){c.push(a);for(var d=0;d<a.children.length;d++)b(a.children[d],c)},c=[];if(a instanceof THREE.SkinnedMesh)for(var d=0;d<a.skeleton.bones.length;d++)c.push(a.skeleton.bones[d]);else b(a,c);return c},play:function(a){-1===this.animations.indexOf(a)&&this.animations.push(a)},stop:function(a){var b=this.animations.indexOf(a);-1!==b&&this.animations.splice(b,1)},update:function(a){for(var b=0;b<this.animations.length;b++)this.animations[b].resetBlendWeights();for(var b=0;b<this.animations.length;b++)this.animations[b].update(a)}},THREE.Animation=function(a,b){this.root=a,this.data=THREE.AnimationHandler.init(b),this.hierarchy=THREE.AnimationHandler.parse(a),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.loop=!0,this.weight=0,this.interpolationType=THREE.AnimationHandler.LINEAR},THREE.Animation.prototype={constructor:THREE.Animation,keyTypes:["pos","rot","scl"],play:function(a,b){this.currentTime=void 0!==a?a:0,this.weight=void 0!==b?b:1,this.isPlaying=!0,this.reset(),THREE.AnimationHandler.play(this)},stop:function(){this.isPlaying=!1,THREE.AnimationHandler.stop(this)},reset:function(){for(var a=0,b=this.hierarchy.length;b>a;a++){var c=this.hierarchy[a];void 0===c.animationCache&&(c.animationCache={animations:{},blending:{positionWeight:0,quaternionWeight:0,scaleWeight:0}});var d=this.data.name,e=c.animationCache.animations,f=e[d];void 0===f&&(f={prevKey:{pos:0,rot:0,scl:0},nextKey:{pos:0,rot:0,scl:0},originalMatrix:c.matrix},e[d]=f);for(var g=0;3>g;g++){for(var h=this.keyTypes[g],i=this.data.hierarchy[a].keys[0],j=this.getNextKeyWith(h,a,1);j.time<this.currentTime&&j.index>i.index;)i=j,j=this.getNextKeyWith(h,a,j.index+1);f.prevKey[h]=i,f.nextKey[h]=j}}},resetBlendWeights:function(){for(var a=0,b=this.hierarchy.length;b>a;a++){var c=this.hierarchy[a],d=c.animationCache;if(void 0!==d){var e=d.blending;e.positionWeight=0,e.quaternionWeight=0,e.scaleWeight=0}}},update:function(){var a=[],b=new THREE.Vector3,c=new THREE.Vector3,d=new THREE.Quaternion,e=function(a,b){var c,d,e,g,h,i,j,k,l,m=[],n=[];return c=(a.length-1)*b,d=Math.floor(c),e=c-d,m[0]=0===d?d:d-1,m[1]=d,m[2]=d>a.length-2?d:d+1,m[3]=d>a.length-3?d:d+2,i=a[m[0]],j=a[m[1]],k=a[m[2]],l=a[m[3]],g=e*e,h=e*g,n[0]=f(i[0],j[0],k[0],l[0],e,g,h),n[1]=f(i[1],j[1],k[1],l[1],e,g,h),n[2]=f(i[2],j[2],k[2],l[2],e,g,h),n},f=function(a,b,c,d,e,f,g){var h=.5*(c-a),i=.5*(d-b);return(2*(b-c)+h+i)*g+(-3*(b-c)-2*h-i)*f+h*e+b};return function(f){if(this.isPlaying!==!1&&(this.currentTime+=f*this.timeScale,0!==this.weight)){var g=this.data.length;(this.currentTime>g||this.currentTime<0)&&(this.loop?(this.currentTime%=g,this.currentTime<0&&(this.currentTime+=g),this.reset()):this.stop());for(var h=0,i=this.hierarchy.length;i>h;h++)for(var j=this.hierarchy[h],k=j.animationCache.animations[this.data.name],l=j.animationCache.blending,m=0;3>m;m++){var n=this.keyTypes[m],o=k.prevKey[n],p=k.nextKey[n];if(this.timeScale>0&&p.time<=this.currentTime||this.timeScale<0&&o.time>=this.currentTime){for(o=this.data.hierarchy[h].keys[0],p=this.getNextKeyWith(n,h,1);p.time<this.currentTime&&p.index>o.index;)o=p,p=this.getNextKeyWith(n,h,p.index+1);k.prevKey[n]=o,k.nextKey[n]=p}var q=(this.currentTime-o.time)/(p.time-o.time),r=o[n],s=p[n];if(0>q&&(q=0),q>1&&(q=1),"pos"===n){if(this.interpolationType===THREE.AnimationHandler.LINEAR){c.x=r[0]+(s[0]-r[0])*q,c.y=r[1]+(s[1]-r[1])*q,c.z=r[2]+(s[2]-r[2])*q;var t=this.weight/(this.weight+l.positionWeight);j.position.lerp(c,t),l.positionWeight+=this.weight}else if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){a[0]=this.getPrevKeyWith("pos",h,o.index-1).pos,a[1]=r,a[2]=s,a[3]=this.getNextKeyWith("pos",h,p.index+1).pos,q=.33*q+.33;var u=e(a,q),t=this.weight/(this.weight+l.positionWeight);l.positionWeight+=this.weight;var v=j.position;if(v.x=v.x+(u[0]-v.x)*t,v.y=v.y+(u[1]-v.y)*t,v.z=v.z+(u[2]-v.z)*t,this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){var w=e(a,1.01*q);b.set(w[0],w[1],w[2]),b.sub(v),b.y=0,b.normalize();var x=Math.atan2(b.x,b.z);j.rotation.set(0,x,0)}}}else if("rot"===n)if(THREE.Quaternion.slerp(r,s,d,q),0===l.quaternionWeight)j.quaternion.copy(d),l.quaternionWeight=this.weight;else{var t=this.weight/(this.weight+l.quaternionWeight);THREE.Quaternion.slerp(j.quaternion,d,j.quaternion,t),l.quaternionWeight+=this.weight}else if("scl"===n){c.x=r[0]+(s[0]-r[0])*q,c.y=r[1]+(s[1]-r[1])*q,c.z=r[2]+(s[2]-r[2])*q;var t=this.weight/(this.weight+l.scaleWeight);j.scale.lerp(c,t),l.scaleWeight+=this.weight}}return!0}}}(),getNextKeyWith:function(a,b,c){var d=this.data.hierarchy[b].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c=c<d.length-1?c:d.length-1:c%=d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]},getPrevKeyWith:function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c>0?c:0:c>=0?c:c+d.length;c>=0;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]}},THREE.KeyFrameAnimation=function(a){this.root=a.node,this.data=THREE.AnimationHandler.init(a),this.hierarchy=THREE.AnimationHandler.parse(this.root),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0;for(var b=0,c=this.hierarchy.length;c>b;b++){var d=this.data.hierarchy[b].keys,e=this.data.hierarchy[b].sids,f=this.hierarchy[b];if(d.length&&e){for(var g=0;g<e.length;g++){var h=e[g],i=this.getNextKeyWith(h,b,0);i&&i.apply(h)}f.matrixAutoUpdate=!1,this.data.hierarchy[b].node.updateMatrix(),f.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype={constructor:THREE.KeyFrameAnimation,play:function(a){if(this.currentTime=void 0!==a?a:0,this.isPlaying===!1){this.isPlaying=!0;var b,c,d,e=this.hierarchy.length;for(b=0;e>b;b++){c=this.hierarchy[b],d=this.data.hierarchy[b],void 0===d.animationCache&&(d.animationCache={},d.animationCache.prevKey=null,d.animationCache.nextKey=null,d.animationCache.originalMatrix=c.matrix);var f=this.data.hierarchy[b].keys;f.length&&(d.animationCache.prevKey=f[0],d.animationCache.nextKey=f[1],this.startTime=Math.min(f[0].time,this.startTime),this.endTime=Math.max(f[f.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.play(this)},stop:function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.stop(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;d.copy(b.matrix),b.matrix=d,delete c.animationCache}}},update:function(a){if(this.isPlaying!==!1){this.currentTime+=a*this.timeScale;var b=this.data.length;this.loop===!0&&this.currentTime>b&&(this.currentTime%=b),this.currentTime=Math.min(this.currentTime,b);for(var c=0,d=this.hierarchy.length;d>c;c++){var e=this.hierarchy[c],f=this.data.hierarchy[c],g=f.keys,h=f.animationCache;if(g.length){var i=h.prevKey,j=h.nextKey;if(j.time<=this.currentTime){for(;j.time<this.currentTime&&j.index>i.index;)i=j,j=g[i.index+1];h.prevKey=i,h.nextKey=j}j.time>=this.currentTime?i.interpolate(j,this.currentTime):i.interpolate(j,j.time),this.data.hierarchy[c].node.updateMatrix(),e.matrixWorldNeedsUpdate=!0}}}},getNextKeyWith:function(a,b,c){var d=this.data.hierarchy[b].keys;for(c%=d.length;c<d.length;c++)if(d[c].hasTarget(a))return d[c];return d[0]},getPrevKeyWith:function(a,b,c){var d=this.data.hierarchy[b].keys;for(c=c>=0?c:c+d.length;c>=0;c--)if(d[c].hasTarget(a))return d[c];return d[d.length-1]}},THREE.MorphAnimation=function(a){this.mesh=a,this.frames=a.morphTargetInfluences.length,this.currentTime=0,this.duration=1e3,this.loop=!0,this.lastFrame=0,this.currentFrame=0,this.isPlaying=!1},THREE.MorphAnimation.prototype={constructor:THREE.MorphAnimation,play:function(){this.isPlaying=!0},pause:function(){this.isPlaying=!1},update:function(a){if(this.isPlaying!==!1){this.currentTime+=a,this.loop===!0&&this.currentTime>this.duration&&(this.currentTime%=this.duration),this.currentTime=Math.min(this.currentTime,this.duration);var b=this.duration/this.frames,c=Math.floor(this.currentTime/b),d=this.mesh.morphTargetInfluences;c!=this.currentFrame&&(d[this.lastFrame]=0,d[this.currentFrame]=1,d[c]=0,this.lastFrame=this.currentFrame,this.currentFrame=c),d[c]=this.currentTime%b/b,d[this.lastFrame]=1-d[c]}}},THREE.BoxGeometry=function(a,b,c,d,e,f){function g(a,b,c,d,e,f,g,i){var j,k,l,m=h.widthSegments,n=h.heightSegments,o=e/2,p=f/2,q=h.vertices.length;"x"===a&&"y"===b||"y"===a&&"x"===b?j="z":"x"===a&&"z"===b||"z"===a&&"x"===b?(j="y",n=h.depthSegments):("z"===a&&"y"===b||"y"===a&&"z"===b)&&(j="x",m=h.depthSegments);var r=m+1,s=n+1,t=e/m,u=f/n,v=new THREE.Vector3;for(v[j]=g>0?1:-1,l=0;s>l;l++)for(k=0;r>k;k++){var w=new THREE.Vector3;w[a]=(k*t-o)*c,w[b]=(l*u-p)*d,w[j]=g,h.vertices.push(w)}for(l=0;n>l;l++)for(k=0;m>k;k++){var x=k+r*l,y=k+r*(l+1),z=k+1+r*(l+1),A=k+1+r*l,B=new THREE.Vector2(k/m,1-l/n),C=new THREE.Vector2(k/m,1-(l+1)/n),D=new THREE.Vector2((k+1)/m,1-(l+1)/n),E=new THREE.Vector2((k+1)/m,1-l/n),F=new THREE.Face3(x+q,y+q,A+q);F.normal.copy(v),F.vertexNormals.push(v.clone(),v.clone(),v.clone()),F.materialIndex=i,h.faces.push(F),h.faceVertexUvs[0].push([B,C,E]),F=new THREE.Face3(y+q,z+q,A+q),F.normal.copy(v),F.vertexNormals.push(v.clone(),v.clone(),v.clone()),F.materialIndex=i,h.faces.push(F),h.faceVertexUvs[0].push([C.clone(),D,E.clone()])}}THREE.Geometry.call(this),this.type="BoxGeometry",this.parameters={width:a,height:b,depth:c,widthSegments:d,heightSegments:e,depthSegments:f},this.widthSegments=d||1,this.heightSegments=e||1,this.depthSegments=f||1;var h=this,i=a/2,j=b/2,k=c/2;g("z","y",-1,-1,c,b,i,0),g("z","y",1,-1,c,b,-i,1),g("x","z",1,1,a,c,j,2),g("x","z",1,-1,a,c,-j,3),g("x","y",1,-1,a,b,k,4),g("x","y",-1,-1,a,b,-k,5),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry,THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this),this.type="CircleGeometry",this.parameters={radius:a,segments:b,thetaStart:c,thetaLength:d},a=a||50,b=void 0!==b?Math.max(3,b):8,c=void 0!==c?c:0,d=void 0!==d?d:2*Math.PI;var e,f=[],g=new THREE.Vector3,h=new THREE.Vector2(.5,.5);for(this.vertices.push(g),f.push(h),e=0;b>=e;e++){var i=new THREE.Vector3,j=c+e/b*d;i.x=a*Math.cos(j),i.y=a*Math.sin(j),this.vertices.push(i),f.push(new THREE.Vector2((i.x/a+1)/2,(i.y/a+1)/2))}var k=new THREE.Vector3(0,0,1);for(e=1;b>=e;e++)this.faces.push(new THREE.Face3(e,e+1,0,[k.clone(),k.clone(),k.clone()])),this.faceVertexUvs[0].push([f[e].clone(),f[e+1].clone(),h.clone()]);this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry,THREE.CubeGeometry=function(a,b,c,d,e,f){return THREE.warn("THREE.CubeGeometry has been renamed to THREE.BoxGeometry."),new THREE.BoxGeometry(a,b,c,d,e,f)},THREE.CylinderGeometry=function(a,b,c,d,e,f,g,h){THREE.Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:a,radiusBottom:b,height:c,radialSegments:d,heightSegments:e,openEnded:f,thetaStart:g,thetaLength:h},a=void 0!==a?a:20,b=void 0!==b?b:20,c=void 0!==c?c:100,d=d||8,e=e||1,f=void 0!==f?f:!1,g=void 0!==g?g:0,h=void 0!==h?h:2*Math.PI;var i,j,k=c/2,l=[],m=[];for(j=0;e>=j;j++){var n=[],o=[],p=j/e,q=p*(b-a)+a;for(i=0;d>=i;i++){var r=i/d,s=new THREE.Vector3;s.x=q*Math.sin(r*h+g),s.y=-p*c+k,s.z=q*Math.cos(r*h+g),this.vertices.push(s),n.push(this.vertices.length-1),o.push(new THREE.Vector2(r,1-p))}l.push(n),m.push(o)}var t,u,v=(b-a)/c;for(i=0;d>i;i++)for(0!==a?(t=this.vertices[l[0][i]].clone(),u=this.vertices[l[0][i+1]].clone()):(t=this.vertices[l[1][i]].clone(),u=this.vertices[l[1][i+1]].clone()),t.setY(Math.sqrt(t.x*t.x+t.z*t.z)*v).normalize(),u.setY(Math.sqrt(u.x*u.x+u.z*u.z)*v).normalize(),j=0;e>j;j++){var w=l[j][i],x=l[j+1][i],y=l[j+1][i+1],z=l[j][i+1],A=t.clone(),B=t.clone(),C=u.clone(),D=u.clone(),E=m[j][i].clone(),F=m[j+1][i].clone(),G=m[j+1][i+1].clone(),H=m[j][i+1].clone();this.faces.push(new THREE.Face3(w,x,z,[A,B,D])),this.faceVertexUvs[0].push([E,F,H]),this.faces.push(new THREE.Face3(x,y,z,[B.clone(),C,D.clone()])),this.faceVertexUvs[0].push([F.clone(),G,H.clone()])}if(f===!1&&a>0)for(this.vertices.push(new THREE.Vector3(0,k,0)),i=0;d>i;i++){var w=l[0][i],x=l[0][i+1],y=this.vertices.length-1,A=new THREE.Vector3(0,1,0),B=new THREE.Vector3(0,1,0),C=new THREE.Vector3(0,1,0),E=m[0][i].clone(),F=m[0][i+1].clone(),G=new THREE.Vector2(F.x,0);this.faces.push(new THREE.Face3(w,x,y,[A,B,C])),this.faceVertexUvs[0].push([E,F,G])}if(f===!1&&b>0)for(this.vertices.push(new THREE.Vector3(0,-k,0)),i=0;d>i;i++){var w=l[e][i+1],x=l[e][i],y=this.vertices.length-1,A=new THREE.Vector3(0,-1,0),B=new THREE.Vector3(0,-1,0),C=new THREE.Vector3(0,-1,0),E=m[e][i+1].clone(),F=m[e][i].clone(),G=new THREE.Vector2(F.x,1);this.faces.push(new THREE.Face3(w,x,y,[A,B,C])),this.faceVertexUvs[0].push([E,F,G])}this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry,THREE.ExtrudeGeometry=function(a,b){return"undefined"==typeof a?void(a=[]):(THREE.Geometry.call(this),this.type="ExtrudeGeometry",a=a instanceof Array?a:[a],this.addShapeList(a,b),void this.computeFaceNormals())},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry,THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;c>d;d++){var e=a[d];this.addShape(e,b)}},THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){return b||THREE.error("THREE.ExtrudeGeometry: vec does not exist"),b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d,e,f=1e-10,g=1,h=a.x-b.x,i=a.y-b.y,j=c.x-a.x,k=c.y-a.y,l=h*h+i*i,m=h*k-i*j;if(Math.abs(m)>f){var n=Math.sqrt(l),o=Math.sqrt(j*j+k*k),p=b.x-i/n,q=b.y+h/n,r=c.x-k/o,s=c.y+j/o,t=((r-p)*k-(s-q)*j)/(h*k-i*j);d=p+h*t-a.x,e=q+i*t-a.y;var u=d*d+e*e;if(2>=u)return new THREE.Vector2(d,e);g=Math.sqrt(u/2)}else{var v=!1;h>f?j>f&&(v=!0):-f>h?-f>j&&(v=!0):Math.sign(i)==Math.sign(k)&&(v=!0),v?(d=-i,e=h,g=Math.sqrt(l)):(d=h,e=i,g=Math.sqrt(l/2))}return new THREE.Vector2(d/g,e/g)}function e(){if(t){var a=0,b=S*a;for(V=0;T>V;V++)R=K[V],i(R[2]+b,R[1]+b,R[0]+b);for(a=v+2*s,b=S*a,V=0;T>V;V++)R=K[V],i(R[0]+b,R[1]+b,R[2]+b)}else{for(V=0;T>V;V++)R=K[V],i(R[2],R[1],R[0]);for(V=0;T>V;V++)R=K[V],i(R[0]+S*v,R[1]+S*v,R[2]+S*v)}}function f(){var a=0;for(g(L,a),a+=L.length,C=0,D=I.length;D>C;C++)B=I[C],g(B,a),a+=B.length}function g(a,b){var c,d;for(V=a.length;--V>=0;){c=V,d=V-1,0>d&&(d=a.length-1);var e=0,f=v+2*s;for(e=0;f>e;e++){var g=S*e,h=S*(e+1),i=b+c+g,k=b+d+g,l=b+d+h,m=b+c+h;j(i,k,l,m,a,e,f,c,d)}}}function h(a,b,c){E.vertices.push(new THREE.Vector3(a,b,c))}function i(a,b,c){a+=F,b+=F,c+=F,E.faces.push(new THREE.Face3(a,b,c,null,null,y));var d=A.generateTopUV(E,a,b,c);E.faceVertexUvs[0].push(d)}function j(a,b,c,d,e,f,g,h,i){a+=F,b+=F,c+=F,d+=F,E.faces.push(new THREE.Face3(a,b,d,null,null,z)),E.faces.push(new THREE.Face3(b,c,d,null,null,z));var j=A.generateSideWallUV(E,a,b,c,d);E.faceVertexUvs[0].push([j[0],j[1],j[3]]),E.faceVertexUvs[0].push([j[1],j[2],j[3]])}var k,l,m,n,o,p=void 0!==b.amount?b.amount:100,q=void 0!==b.bevelThickness?b.bevelThickness:6,r=void 0!==b.bevelSize?b.bevelSize:q-2,s=void 0!==b.bevelSegments?b.bevelSegments:3,t=void 0!==b.bevelEnabled?b.bevelEnabled:!0,u=void 0!==b.curveSegments?b.curveSegments:12,v=void 0!==b.steps?b.steps:1,w=b.extrudePath,x=!1,y=b.material,z=b.extrudeMaterial,A=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;w&&(k=w.getSpacedPoints(v),x=!0,t=!1,l=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(w,v,!1),m=new THREE.Vector3,n=new THREE.Vector3,o=new THREE.Vector3),t||(s=0,q=0,r=0);var B,C,D,E=this,F=this.vertices.length,G=a.extractPoints(u),H=G.shape,I=G.holes,J=!THREE.Shape.Utils.isClockWise(H);if(J){for(H=H.reverse(),C=0,D=I.length;D>C;C++)B=I[C],THREE.Shape.Utils.isClockWise(B)&&(I[C]=B.reverse());J=!1}var K=THREE.Shape.Utils.triangulateShape(H,I),L=H;for(C=0,D=I.length;D>C;C++)B=I[C],H=H.concat(B);for(var M,N,O,P,Q,R,S=H.length,T=K.length,U=[],V=0,W=L.length,X=W-1,Y=V+1;W>V;V++,X++,Y++)X===W&&(X=0),Y===W&&(Y=0),U[V]=d(L[V],L[X],L[Y]);var Z,$=[],_=U.concat();for(C=0,D=I.length;D>C;C++){for(B=I[C],Z=[],V=0,W=B.length,X=W-1,Y=V+1;W>V;V++,X++,Y++)X===W&&(X=0),Y===W&&(Y=0),Z[V]=d(B[V],B[X],B[Y]);$.push(Z),_=_.concat(Z)}for(M=0;s>M;M++){for(O=M/s,P=q*(1-O),N=r*Math.sin(O*Math.PI/2),V=0,W=L.length;W>V;V++)Q=c(L[V],U[V],N),h(Q.x,Q.y,-P);for(C=0,D=I.length;D>C;C++)for(B=I[C],Z=$[C],V=0,W=B.length;W>V;V++)Q=c(B[V],Z[V],N),h(Q.x,Q.y,-P)}for(N=r,V=0;S>V;V++)Q=t?c(H[V],_[V],N):H[V],x?(n.copy(l.normals[0]).multiplyScalar(Q.x),m.copy(l.binormals[0]).multiplyScalar(Q.y),o.copy(k[0]).add(n).add(m),h(o.x,o.y,o.z)):h(Q.x,Q.y,0);var aa;for(aa=1;v>=aa;aa++)for(V=0;S>V;V++)Q=t?c(H[V],_[V],N):H[V],x?(n.copy(l.normals[aa]).multiplyScalar(Q.x),m.copy(l.binormals[aa]).multiplyScalar(Q.y),o.copy(k[aa]).add(n).add(m),h(o.x,o.y,o.z)):h(Q.x,Q.y,p/v*aa);for(M=s-1;M>=0;M--){for(O=M/s,P=q*(1-O),N=r*Math.sin(O*Math.PI/2),V=0,W=L.length;W>V;V++)Q=c(L[V],U[V],N),h(Q.x,Q.y,p+P);for(C=0,D=I.length;D>C;C++)for(B=I[C],Z=$[C],V=0,W=B.length;W>V;V++)Q=c(B[V],Z[V],N),x?h(Q.x,Q.y+k[v-1].y,k[v-1].x+P):h(Q.x,Q.y,p+P)}e(),f()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d){var e=a.vertices,f=e[b],g=e[c],h=e[d];return[new THREE.Vector2(f.x,f.y),new THREE.Vector2(g.x,g.y),new THREE.Vector2(h.x,h.y)]},generateSideWallUV:function(a,b,c,d,e){var f=a.vertices,g=f[b],h=f[c],i=f[d],j=f[e];return Math.abs(g.y-h.y)<.01?[new THREE.Vector2(g.x,1-g.z),new THREE.Vector2(h.x,1-h.z),new THREE.Vector2(i.x,1-i.z),new THREE.Vector2(j.x,1-j.z)]:[new THREE.Vector2(g.y,1-g.z),new THREE.Vector2(h.y,1-h.z),new THREE.Vector2(i.y,1-i.z),new THREE.Vector2(j.y,1-j.z)]}},THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this),this.type="ShapeGeometry",a instanceof Array==!1&&(a=[a]),this.addShapeList(a,b),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry,THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;d>c;c++)this.addShape(a[c],b);return this},THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c,d,e,f=void 0!==b.curveSegments?b.curveSegments:12,g=b.material,h=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,i=this.vertices.length,j=a.extractPoints(f),k=j.shape,l=j.holes,m=!THREE.Shape.Utils.isClockWise(k);if(m){for(k=k.reverse(),c=0,d=l.length;d>c;c++)e=l[c],THREE.Shape.Utils.isClockWise(e)&&(l[c]=e.reverse());m=!1}var n=THREE.Shape.Utils.triangulateShape(k,l);for(c=0,d=l.length;d>c;c++)e=l[c],k=k.concat(e);var o,p,q=k.length,r=n.length;for(c=0;q>c;c++)o=k[c],this.vertices.push(new THREE.Vector3(o.x,o.y,0));for(c=0;r>c;c++){p=n[c];var s=p[0]+i,t=p[1]+i,u=p[2]+i;this.faces.push(new THREE.Face3(s,t,u,null,null,g)),this.faceVertexUvs[0].push(h.generateTopUV(this,s,t,u))}},THREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this),this.type="LatheGeometry",this.parameters={points:a,segments:b,phiStart:c,phiLength:d},b=b||12,c=c||0,d=d||2*Math.PI;for(var e=1/(a.length-1),f=1/b,g=0,h=b;h>=g;g++)for(var i=c+g*f*d,j=Math.cos(i),k=Math.sin(i),l=0,m=a.length;m>l;l++){var n=a[l],o=new THREE.Vector3;o.x=j*n.x-k*n.y,o.y=k*n.x+j*n.y,o.z=n.z,this.vertices.push(o)}for(var p=a.length,g=0,h=b;h>g;g++)for(var l=0,m=a.length-1;m>l;l++){var q=l+p*g,r=q,s=q+p,j=q+1+p,t=q+1,u=g*f,v=l*e,w=u+f,x=v+e;this.faces.push(new THREE.Face3(r,s,t)),this.faceVertexUvs[0].push([new THREE.Vector2(u,v),new THREE.Vector2(w,v),new THREE.Vector2(u,x)]),this.faces.push(new THREE.Face3(s,j,t)),this.faceVertexUvs[0].push([new THREE.Vector2(w,v),new THREE.Vector2(w,x),new THREE.Vector2(u,x)])}this.mergeVertices(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry,THREE.PlaneGeometry=function(a,b,c,d){console.info("THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint."),THREE.Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:a,height:b,widthSegments:c,heightSegments:d},this.fromBufferGeometry(new THREE.PlaneBufferGeometry(a,b,c,d))},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry,THREE.PlaneBufferGeometry=function(a,b,c,d){THREE.BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:a,height:b,widthSegments:c,heightSegments:d};for(var e=a/2,f=b/2,g=c||1,h=d||1,i=g+1,j=h+1,k=a/g,l=b/h,m=new Float32Array(i*j*3),n=new Float32Array(i*j*3),o=new Float32Array(i*j*2),p=0,q=0,r=0;j>r;r++)for(var s=r*l-f,t=0;i>t;t++){var u=t*k-e;m[p]=u,m[p+1]=-s,n[p+2]=1,o[q]=t/g,o[q+1]=1-r/h,p+=3,q+=2}p=0;for(var v=new(m.length/3>65535?Uint32Array:Uint16Array)(g*h*6),r=0;h>r;r++)for(var t=0;g>t;t++){var w=t+i*r,x=t+i*(r+1),y=t+1+i*(r+1),z=t+1+i*r;v[p]=w,v[p+1]=x,v[p+2]=z,v[p+3]=x,v[p+4]=y,v[p+5]=z,p+=6}this.addAttribute("index",new THREE.BufferAttribute(v,1)),this.addAttribute("position",new THREE.BufferAttribute(m,3)),this.addAttribute("normal",new THREE.BufferAttribute(n,3)),this.addAttribute("uv",new THREE.BufferAttribute(o,2))},THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry,THREE.RingGeometry=function(a,b,c,d,e,f){THREE.Geometry.call(this),this.type="RingGeometry",this.parameters={innerRadius:a,outerRadius:b,thetaSegments:c,phiSegments:d,thetaStart:e,thetaLength:f},a=a||0,b=b||50,e=void 0!==e?e:0,f=void 0!==f?f:2*Math.PI,c=void 0!==c?Math.max(3,c):8,d=void 0!==d?Math.max(1,d):8;var g,h,i=[],j=a,k=(b-a)/d;for(g=0;d+1>g;g++){for(h=0;c+1>h;h++){var l=new THREE.Vector3,m=e+h/c*f;l.x=j*Math.cos(m),l.y=j*Math.sin(m),this.vertices.push(l),i.push(new THREE.Vector2((l.x/b+1)/2,(l.y/b+1)/2))}j+=k}var n=new THREE.Vector3(0,0,1);for(g=0;d>g;g++){var o=g*(c+1);for(h=0;c>h;h++){var m=h+o,p=m,q=m+c+1,r=m+c+2;this.faces.push(new THREE.Face3(p,q,r,[n.clone(),n.clone(),n.clone()])),this.faceVertexUvs[0].push([i[p].clone(),i[q].clone(),i[r].clone()]),p=m,q=m+c+2,r=m+1,this.faces.push(new THREE.Face3(p,q,r,[n.clone(),n.clone(),n.clone()])),this.faceVertexUvs[0].push([i[p].clone(),i[q].clone(),i[r].clone()])}}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,j)},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),
THREE.RingGeometry.prototype.constructor=THREE.RingGeometry,THREE.SphereGeometry=function(a,b,c,d,e,f,g){THREE.Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:a,widthSegments:b,heightSegments:c,phiStart:d,phiLength:e,thetaStart:f,thetaLength:g},a=a||50,b=Math.max(3,Math.floor(b)||8),c=Math.max(2,Math.floor(c)||6),d=void 0!==d?d:0,e=void 0!==e?e:2*Math.PI,f=void 0!==f?f:0,g=void 0!==g?g:Math.PI;var h,i,j=[],k=[];for(i=0;c>=i;i++){var l=[],m=[];for(h=0;b>=h;h++){var n=h/b,o=i/c,p=new THREE.Vector3;p.x=-a*Math.cos(d+n*e)*Math.sin(f+o*g),p.y=a*Math.cos(f+o*g),p.z=a*Math.sin(d+n*e)*Math.sin(f+o*g),this.vertices.push(p),l.push(this.vertices.length-1),m.push(new THREE.Vector2(n,1-o))}j.push(l),k.push(m)}for(i=0;c>i;i++)for(h=0;b>h;h++){var q=j[i][h+1],r=j[i][h],s=j[i+1][h],t=j[i+1][h+1],u=this.vertices[q].clone().normalize(),v=this.vertices[r].clone().normalize(),w=this.vertices[s].clone().normalize(),x=this.vertices[t].clone().normalize(),y=k[i][h+1].clone(),z=k[i][h].clone(),A=k[i+1][h].clone(),B=k[i+1][h+1].clone();Math.abs(this.vertices[q].y)===a?(y.x=(y.x+z.x)/2,this.faces.push(new THREE.Face3(q,s,t,[u,w,x])),this.faceVertexUvs[0].push([y,A,B])):Math.abs(this.vertices[s].y)===a?(A.x=(A.x+B.x)/2,this.faces.push(new THREE.Face3(q,r,s,[u,v,w])),this.faceVertexUvs[0].push([y,z,A])):(this.faces.push(new THREE.Face3(q,r,t,[u,v,x])),this.faceVertexUvs[0].push([y,z,B]),this.faces.push(new THREE.Face3(r,s,t,[v.clone(),w,x.clone()])),this.faceVertexUvs[0].push([z.clone(),A,B.clone()]))}this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry,THREE.TextGeometry=function(a,b){b=b||{};var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50,void 0===b.bevelThickness&&(b.bevelThickness=10),void 0===b.bevelSize&&(b.bevelSize=8),void 0===b.bevelEnabled&&(b.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,c,b),this.type="TextGeometry"},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TextGeometry.prototype.constructor=THREE.TextGeometry,THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this),this.type="TorusGeometry",this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,arc:e},a=a||100,b=b||40,c=c||8,d=d||6,e=e||2*Math.PI;for(var f=new THREE.Vector3,g=[],h=[],i=0;c>=i;i++)for(var j=0;d>=j;j++){var k=j/d*e,l=i/c*Math.PI*2;f.x=a*Math.cos(k),f.y=a*Math.sin(k);var m=new THREE.Vector3;m.x=(a+b*Math.cos(l))*Math.cos(k),m.y=(a+b*Math.cos(l))*Math.sin(k),m.z=b*Math.sin(l),this.vertices.push(m),g.push(new THREE.Vector2(j/d,i/c)),h.push(m.clone().sub(f).normalize())}for(var i=1;c>=i;i++)for(var j=1;d>=j;j++){var n=(d+1)*i+j-1,o=(d+1)*(i-1)+j-1,p=(d+1)*(i-1)+j,q=(d+1)*i+j,r=new THREE.Face3(n,o,q,[h[n].clone(),h[o].clone(),h[q].clone()]);this.faces.push(r),this.faceVertexUvs[0].push([g[n].clone(),g[o].clone(),g[q].clone()]),r=new THREE.Face3(o,p,q,[h[o].clone(),h[p].clone(),h[q].clone()]),this.faces.push(r),this.faceVertexUvs[0].push([g[o].clone(),g[p].clone(),g[q].clone()])}this.computeFaceNormals()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry,THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function h(a,b,c,d,e){var f=Math.cos(a),g=Math.sin(a),h=b/c*a,i=Math.cos(h),j=d*(2+i)*.5*f,k=d*(2+i)*g*.5,l=e*d*Math.sin(h)*.5;return new THREE.Vector3(j,k,l)}THREE.Geometry.call(this),this.type="TorusKnotGeometry",this.parameters={radius:a,tube:b,radialSegments:c,tubularSegments:d,p:e,q:f,heightScale:g},a=a||100,b=b||40,c=c||64,d=d||8,e=e||2,f=f||3,g=g||1;for(var i=new Array(c),j=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,m=0;c>m;++m){i[m]=new Array(d);var n=m/c*2*e*Math.PI,o=h(n,f,e,a,g),p=h(n+.01,f,e,a,g);j.subVectors(p,o),k.addVectors(p,o),l.crossVectors(j,k),k.crossVectors(l,j),l.normalize(),k.normalize();for(var q=0;d>q;++q){var r=q/d*2*Math.PI,s=-b*Math.cos(r),t=b*Math.sin(r),u=new THREE.Vector3;u.x=o.x+s*k.x+t*l.x,u.y=o.y+s*k.y+t*l.y,u.z=o.z+s*k.z+t*l.z,i[m][q]=this.vertices.push(u)-1}}for(var m=0;c>m;++m)for(var q=0;d>q;++q){var v=(m+1)%c,w=(q+1)%d,x=i[m][q],y=i[v][q],z=i[v][w],A=i[m][w],B=new THREE.Vector2(m/c,q/d),C=new THREE.Vector2((m+1)/c,q/d),D=new THREE.Vector2((m+1)/c,(q+1)/d),E=new THREE.Vector2(m/c,(q+1)/d);this.faces.push(new THREE.Face3(x,y,A)),this.faceVertexUvs[0].push([B,C,E]),this.faces.push(new THREE.Face3(y,z,A)),this.faceVertexUvs[0].push([C.clone(),D,E.clone()])}this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry,THREE.TubeGeometry=function(a,b,c,d,e,f){function g(a,b,c){return D.vertices.push(new THREE.Vector3(a,b,c))-1}THREE.Geometry.call(this),this.type="TubeGeometry",this.parameters={path:a,segments:b,radius:c,radialSegments:d,closed:e},b=b||64,c=c||1,d=d||8,e=e||!1,f=f||THREE.TubeGeometry.NoTaper;var h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C=[],D=this,E=b+1,F=new THREE.Vector3,G=new THREE.TubeGeometry.FrenetFrames(a,b,e),H=G.tangents,I=G.normals,J=G.binormals;for(this.tangents=H,this.normals=I,this.binormals=J,q=0;E>q;q++)for(C[q]=[],k=q/(E-1),p=a.getPointAt(k),h=H[q],i=I[q],j=J[q],m=c*f(k),r=0;d>r;r++)l=r/d*2*Math.PI,n=-m*Math.cos(l),o=m*Math.sin(l),F.copy(p),F.x+=n*i.x+o*j.x,F.y+=n*i.y+o*j.y,F.z+=n*i.z+o*j.z,C[q][r]=g(F.x,F.y,F.z);for(q=0;b>q;q++)for(r=0;d>r;r++)s=e?(q+1)%b:q+1,t=(r+1)%d,u=C[q][r],v=C[s][r],w=C[s][t],x=C[q][t],y=new THREE.Vector2(q/b,r/d),z=new THREE.Vector2((q+1)/b,r/d),A=new THREE.Vector2((q+1)/b,(r+1)/d),B=new THREE.Vector2(q/b,(r+1)/d),this.faces.push(new THREE.Face3(u,v,x)),this.faceVertexUvs[0].push([y,z,B]),this.faces.push(new THREE.Face3(v,w,x)),this.faceVertexUvs[0].push([z.clone(),A,B.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry,THREE.TubeGeometry.NoTaper=function(a){return 1},THREE.TubeGeometry.SinusoidalTaper=function(a){return Math.sin(Math.PI*a)},THREE.TubeGeometry.FrenetFrames=function(a,b,c){function d(){n[0]=new THREE.Vector3,o[0]=new THREE.Vector3,f=Number.MAX_VALUE,g=Math.abs(m[0].x),h=Math.abs(m[0].y),i=Math.abs(m[0].z),f>=g&&(f=g,l.set(1,0,0)),f>=h&&(f=h,l.set(0,1,0)),f>=i&&l.set(0,0,1),p.crossVectors(m[0],l).normalize(),n[0].crossVectors(m[0],p),o[0].crossVectors(m[0],n[0])}var e,f,g,h,i,j,k,l=new THREE.Vector3,m=[],n=[],o=[],p=new THREE.Vector3,q=new THREE.Matrix4,r=b+1,s=1e-4;for(this.tangents=m,this.normals=n,this.binormals=o,j=0;r>j;j++)k=j/(r-1),m[j]=a.getTangentAt(k),m[j].normalize();for(d(),j=1;r>j;j++)n[j]=n[j-1].clone(),o[j]=o[j-1].clone(),p.crossVectors(m[j-1],m[j]),p.length()>s&&(p.normalize(),e=Math.acos(THREE.Math.clamp(m[j-1].dot(m[j]),-1,1)),n[j].applyMatrix4(q.makeRotationAxis(p,e))),o[j].crossVectors(m[j],n[j]);if(c)for(e=Math.acos(THREE.Math.clamp(n[0].dot(n[r-1]),-1,1)),e/=r-1,m[0].dot(p.crossVectors(n[0],n[r-1]))>0&&(e=-e),j=1;r>j;j++)n[j].applyMatrix4(q.makeRotationAxis(m[j],e*j)),o[j].crossVectors(m[j],n[j])},THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=k.vertices.push(b)-1;var c=h(a)/2/Math.PI+.5,d=i(a)/Math.PI+.5;return b.uv=new THREE.Vector2(c,1-d),b}function f(a,b,c){var d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);k.faces.push(d),t.copy(a).add(b).add(c).divideScalar(3);var e=h(t);k.faceVertexUvs[0].push([j(a.uv,a,e),j(b.uv,b,e),j(c.uv,c,e)])}function g(a,b){for(var c=Math.pow(2,b),d=e(k.vertices[a.a]),g=e(k.vertices[a.b]),h=e(k.vertices[a.c]),i=[],j=0;c>=j;j++){i[j]=[];for(var l=e(d.clone().lerp(h,j/c)),m=e(g.clone().lerp(h,j/c)),n=c-j,o=0;n>=o;o++)0==o&&j==c?i[j][o]=l:i[j][o]=e(l.clone().lerp(m,o/n))}for(var j=0;c>j;j++)for(var o=0;2*(c-j)-1>o;o++){var p=Math.floor(o/2);o%2==0?f(i[j][p+1],i[j+1][p],i[j][p]):f(i[j][p+1],i[j+1][p+1],i[j+1][p])}}function h(a){return Math.atan2(a.z,-a.x)}function i(a){return Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))}function j(a,b,c){return 0>c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y)),0===b.x&&0===b.z&&(a=new THREE.Vector2(c/2/Math.PI+.5,a.y)),a.clone()}THREE.Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:a,indices:b,radius:c,detail:d},c=c||1,d=d||0;for(var k=this,l=0,m=a.length;m>l;l+=3)e(new THREE.Vector3(a[l],a[l+1],a[l+2]));for(var n=this.vertices,o=[],l=0,p=0,m=b.length;m>l;l+=3,p++){var q=n[b[l]],r=n[b[l+1]],s=n[b[l+2]];o[p]=new THREE.Face3(q.index,r.index,s.index,[q.clone(),r.clone(),s.clone()])}for(var t=new THREE.Vector3,l=0,m=o.length;m>l;l++)g(o[l],d);for(var l=0,m=this.faceVertexUvs[0].length;m>l;l++){var u=this.faceVertexUvs[0][l],v=u[0].x,w=u[1].x,x=u[2].x,y=Math.max(v,Math.max(w,x)),z=Math.min(v,Math.min(w,x));y>.9&&.1>z&&(.2>v&&(u[0].x+=1),.2>w&&(u[1].x+=1),.2>x&&(u[2].x+=1))}for(var l=0,m=this.vertices.length;m>l;l++)this.vertices[l].multiplyScalar(c);this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry,THREE.DodecahedronGeometry=function(a,b){this.parameters={radius:a,detail:b};var c=(1+Math.sqrt(5))/2,d=1/c,e=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-d,-c,0,-d,c,0,d,-c,0,d,c,-d,-c,0,-d,c,0,d,-c,0,d,c,0,-c,0,-d,c,0,-d,-c,0,d,c,0,d],f=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];THREE.PolyhedronGeometry.call(this,e,f,a,b)},THREE.DodecahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry,THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2,d=[-1,c,0,1,c,0,-1,-c,0,1,-c,0,0,-1,c,0,1,c,0,-1,-c,0,1,-c,c,0,-1,c,0,1,-c,0,-1,-c,0,1],e=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];THREE.PolyhedronGeometry.call(this,d,e,a,b),this.type="IcosahedronGeometry",this.parameters={radius:a,detail:b}},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry,THREE.OctahedronGeometry=function(a,b){this.parameters={radius:a,detail:b};var c=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],d=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];THREE.PolyhedronGeometry.call(this,c,d,a,b),this.type="OctahedronGeometry",this.parameters={radius:a,detail:b}},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry,THREE.TetrahedronGeometry=function(a,b){var c=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],d=[2,1,0,0,3,2,1,3,0,2,3,1];THREE.PolyhedronGeometry.call(this,c,d,a,b),this.type="TetrahedronGeometry",this.parameters={radius:a,detail:b}},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry,THREE.ParametricGeometry=function(a,b,c){THREE.Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:a,slices:b,stacks:c};var d,e,f,g,h,i=this.vertices,j=this.faces,k=this.faceVertexUvs[0],l=b+1;for(d=0;c>=d;d++)for(h=d/c,e=0;b>=e;e++)g=e/b,f=a(g,h),i.push(f);var m,n,o,p,q,r,s,t;for(d=0;c>d;d++)for(e=0;b>e;e++)m=d*l+e,n=d*l+e+1,o=(d+1)*l+e+1,p=(d+1)*l+e,q=new THREE.Vector2(e/b,d/c),r=new THREE.Vector2((e+1)/b,d/c),s=new THREE.Vector2((e+1)/b,(d+1)/c),t=new THREE.Vector2(e/b,(d+1)/c),j.push(new THREE.Face3(m,n,p)),k.push([q,r,t]),j.push(new THREE.Face3(n,o,p)),k.push([r.clone(),s,t.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry,THREE.AxisHelper=function(a){a=a||1;var b=new Float32Array([0,0,0,a,0,0,0,0,0,0,a,0,0,0,0,0,0,a]),c=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]),d=new THREE.BufferGeometry;d.addAttribute("position",new THREE.BufferAttribute(b,3)),d.addAttribute("color",new THREE.BufferAttribute(c,3));var e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,d,e,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.AxisHelper.prototype.constructor=THREE.AxisHelper,THREE.ArrowHelper=function(){var a=new THREE.Geometry;a.vertices.push(new THREE.Vector3(0,0,0),new THREE.Vector3(0,1,0));var b=new THREE.CylinderGeometry(0,.5,1,5,1);return b.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),function(c,d,e,f,g,h){THREE.Object3D.call(this),void 0===f&&(f=16776960),void 0===e&&(e=1),void 0===g&&(g=.2*e),void 0===h&&(h=.2*g),this.position.copy(d),this.line=new THREE.Line(a,new THREE.LineBasicMaterial({color:f})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:f})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(c),this.setLength(e,g,h)}}(),THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper,THREE.ArrowHelper.prototype.setDirection=function(){var a,b=new THREE.Vector3;return function(c){c.y>.99999?this.quaternion.set(0,0,0,1):c.y<-.99999?this.quaternion.set(1,0,0,0):(b.set(c.z,0,-c.x).normalize(),a=Math.acos(c.y),this.quaternion.setFromAxisAngle(b,a))}}(),THREE.ArrowHelper.prototype.setLength=function(a,b,c){void 0===b&&(b=.2*a),void 0===c&&(c=.2*b),this.line.scale.set(1,a-b,1),this.line.updateMatrix(),this.cone.scale.set(c,b,c),this.cone.position.y=a,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.set(a),this.cone.material.color.set(a)},THREE.BoxHelper=function(a){var b=new THREE.BufferGeometry;b.addAttribute("position",new THREE.BufferAttribute(new Float32Array(72),3)),THREE.Line.call(this,b,new THREE.LineBasicMaterial({color:16776960}),THREE.LinePieces),void 0!==a&&this.update(a)},THREE.BoxHelper.prototype=Object.create(THREE.Line.prototype),THREE.BoxHelper.prototype.constructor=THREE.BoxHelper,THREE.BoxHelper.prototype.update=function(a){var b=a.geometry;null===b.boundingBox&&b.computeBoundingBox();var c=b.boundingBox.min,d=b.boundingBox.max,e=this.geometry.attributes.position.array;e[0]=d.x,e[1]=d.y,e[2]=d.z,e[3]=c.x,e[4]=d.y,e[5]=d.z,e[6]=c.x,e[7]=d.y,e[8]=d.z,e[9]=c.x,e[10]=c.y,e[11]=d.z,e[12]=c.x,e[13]=c.y,e[14]=d.z,e[15]=d.x,e[16]=c.y,e[17]=d.z,e[18]=d.x,e[19]=c.y,e[20]=d.z,e[21]=d.x,e[22]=d.y,e[23]=d.z,e[24]=d.x,e[25]=d.y,e[26]=c.z,e[27]=c.x,e[28]=d.y,e[29]=c.z,e[30]=c.x,e[31]=d.y,e[32]=c.z,e[33]=c.x,e[34]=c.y,e[35]=c.z,e[36]=c.x,e[37]=c.y,e[38]=c.z,e[39]=d.x,e[40]=c.y,e[41]=c.z,e[42]=d.x,e[43]=c.y,e[44]=c.z,e[45]=d.x,e[46]=d.y,e[47]=c.z,e[48]=d.x,e[49]=d.y,e[50]=d.z,e[51]=d.x,e[52]=d.y,e[53]=c.z,e[54]=c.x,e[55]=d.y,e[56]=d.z,e[57]=c.x,e[58]=d.y,e[59]=c.z,e[60]=c.x,e[61]=c.y,e[62]=d.z,e[63]=c.x,e[64]=c.y,e[65]=c.z,e[66]=d.x,e[67]=c.y,e[68]=d.z,e[69]=d.x,e[70]=c.y,e[71]=c.z,this.geometry.attributes.position.needsUpdate=!0,this.geometry.computeBoundingSphere(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1},THREE.BoundingBoxHelper=function(a,b){var c=void 0!==b?b:8947848;this.object=a,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:c,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper,THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(a){function b(a,b,d){c(a,d),c(b,d)}function c(a,b){d.vertices.push(new THREE.Vector3),d.colors.push(new THREE.Color(b)),void 0===f[a]&&(f[a]=[]),f[a].push(d.vertices.length-1)}var d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),f={},g=16755200,h=16711680,i=43775,j=16777215,k=3355443;b("n1","n2",g),b("n2","n4",g),b("n4","n3",g),b("n3","n1",g),b("f1","f2",g),b("f2","f4",g),b("f4","f3",g),b("f3","f1",g),b("n1","f1",g),b("n2","f2",g),b("n3","f3",g),b("n4","f4",g),b("p","n1",h),b("p","n2",h),b("p","n3",h),b("p","n4",h),b("u1","u2",i),b("u2","u3",i),b("u3","u1",i),b("c","t",j),b("p","c",k),b("cn1","cn2",k),b("cn3","cn4",k),b("cf1","cf2",k),b("cf3","cf4",k),THREE.Line.call(this,d,e,THREE.LinePieces),this.camera=a,this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=f,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.constructor=THREE.CameraHelper,THREE.CameraHelper.prototype.update=function(){var a,b,c=new THREE.Vector3,d=new THREE.Camera,e=function(e,f,g,h){c.set(f,g,h).unproject(d);var i=b[e];if(void 0!==i)for(var j=0,k=i.length;k>j;j++)a.vertices[i[j]].copy(c)};return function(){a=this.geometry,b=this.pointMap;var c=1,f=1;d.projectionMatrix.copy(this.camera.projectionMatrix),e("c",0,0,-1),e("t",0,0,1),e("n1",-c,-f,-1),e("n2",c,-f,-1),e("n3",-c,f,-1),e("n4",c,f,-1),e("f1",-c,-f,1),e("f2",c,-f,1),e("f3",-c,f,1),e("f4",c,f,1),e("u1",.7*c,1.1*f,-1),e("u2",.7*-c,1.1*f,-1),e("u3",0,2*f,-1),e("cf1",-c,0,1),e("cf2",c,0,1),e("cf3",0,-f,1),e("cf4",0,f,1),e("cn1",-c,0,-1),e("cn2",c,0,-1),e("cn3",0,-f,-1),e("cn4",0,f,-1),a.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this),this.light=a,this.light.updateMatrixWorld(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,b=b||1;var c=new THREE.Geometry;c.vertices.push(new THREE.Vector3(-b,b,0),new THREE.Vector3(b,b,0),new THREE.Vector3(b,-b,0),new THREE.Vector3(-b,-b,0),new THREE.Vector3(-b,b,0));var d=new THREE.LineBasicMaterial({fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new THREE.Line(c,d),this.add(this.lightPlane),c=new THREE.Geometry,c.vertices.push(new THREE.Vector3,new THREE.Vector3),d=new THREE.LineBasicMaterial({fog:!1}),d.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new THREE.Line(c,d),this.add(this.targetLine),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper,THREE.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3,c=new THREE.Vector3;return function(){a.setFromMatrixPosition(this.light.matrixWorld),b.setFromMatrixPosition(this.light.target.matrixWorld),c.subVectors(b,a),this.lightPlane.lookAt(c),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(c),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),THREE.EdgesHelper=function(a,b,c){var d=void 0!==b?b:16777215;c=void 0!==c?c:1;var e,f=Math.cos(THREE.Math.degToRad(c)),g=[0,0],h={},i=function(a,b){return a-b},j=["a","b","c"],k=new THREE.BufferGeometry;a.geometry instanceof THREE.BufferGeometry?(e=new THREE.Geometry,e.fromBufferGeometry(a.geometry)):e=a.geometry.clone(),e.mergeVertices(),e.computeFaceNormals();for(var l=e.vertices,m=e.faces,n=0,o=0,p=m.length;p>o;o++)for(var q=m[o],r=0;3>r;r++){g[0]=q[j[r]],g[1]=q[j[(r+1)%3]],g.sort(i);var s=g.toString();void 0===h[s]?(h[s]={vert1:g[0],vert2:g[1],face1:o,face2:void 0},n++):h[s].face2=o}var t=new Float32Array(2*n*3),u=0;for(var s in h){var v=h[s];if(void 0===v.face2||m[v.face1].normal.dot(m[v.face2].normal)<=f){var w=l[v.vert1];t[u++]=w.x,t[u++]=w.y,t[u++]=w.z,w=l[v.vert2],t[u++]=w.x,t[u++]=w.y,t[u++]=w.z}}k.addAttribute("position",new THREE.BufferAttribute(t,3)),THREE.Line.call(this,k,new THREE.LineBasicMaterial({color:d}),THREE.LinePieces),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1},THREE.EdgesHelper.prototype=Object.create(THREE.Line.prototype),THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper,THREE.FaceNormalsHelper=function(a,b,c,d){this.object=a,this.size=void 0!==b?b:1;for(var e=void 0!==c?c:16776960,f=void 0!==d?d:1,g=new THREE.Geometry,h=this.object.geometry.faces,i=0,j=h.length;j>i;i++)g.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,g,new THREE.LineBasicMaterial({color:e,linewidth:f}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper,THREE.FaceNormalsHelper.prototype.update=function(){var a=this.geometry.vertices,b=this.object,c=b.geometry.vertices,d=b.geometry.faces,e=b.matrixWorld;b.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(e);for(var f=0,g=0,h=d.length;h>f;f++,g+=2){var i=d[f];a[g].copy(c[i.a]).add(c[i.b]).add(c[i.c]).divideScalar(3).applyMatrix4(e),a[g+1].copy(i.normal).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size).add(a[g])}return this.geometry.verticesNeedUpdate=!0,this},THREE.GridHelper=function(a,b){var c=new THREE.Geometry,d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});this.color1=new THREE.Color(4473924),this.color2=new THREE.Color(8947848);for(var e=-a;a>=e;e+=b){c.vertices.push(new THREE.Vector3(-a,0,e),new THREE.Vector3(a,0,e),new THREE.Vector3(e,0,-a),new THREE.Vector3(e,0,a));var f=0===e?this.color1:this.color2;c.colors.push(f,f,f,f)}THREE.Line.call(this,c,d,THREE.LinePieces)},THREE.GridHelper.prototype=Object.create(THREE.Line.prototype),THREE.GridHelper.prototype.constructor=THREE.GridHelper,THREE.GridHelper.prototype.setColors=function(a,b){this.color1.set(a),this.color2.set(b),this.geometry.colorsNeedUpdate=!0},THREE.HemisphereLightHelper=function(a,b){THREE.Object3D.call(this),this.light=a,this.light.updateMatrixWorld(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var c=new THREE.SphereGeometry(b,4,2);c.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));for(var d=0,e=8;e>d;d++)c.faces[d].color=this.colors[4>d?0:1];var f=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(c,f),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper,THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var a=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(a.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(a,b){this.light=a,this.light.updateMatrixWorld();var c=new THREE.SphereGeometry(b,4,2),d=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});d.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,c,d),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper,THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SkeletonHelper=function(a){this.bones=this.getBoneList(a);for(var b=new THREE.Geometry,c=0;c<this.bones.length;c++){var d=this.bones[c];d.parent instanceof THREE.Bone&&(b.vertices.push(new THREE.Vector3),b.vertices.push(new THREE.Vector3),b.colors.push(new THREE.Color(0,0,1)),b.colors.push(new THREE.Color(0,1,0)))}var e=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.Line.call(this,b,e,THREE.LinePieces),this.root=a,this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1,this.update()},THREE.SkeletonHelper.prototype=Object.create(THREE.Line.prototype),THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper,THREE.SkeletonHelper.prototype.getBoneList=function(a){var b=[];a instanceof THREE.Bone&&b.push(a);for(var c=0;c<a.children.length;c++)b.push.apply(b,this.getBoneList(a.children[c]));return b},THREE.SkeletonHelper.prototype.update=function(){for(var a=this.geometry,b=(new THREE.Matrix4).getInverse(this.root.matrixWorld),c=new THREE.Matrix4,d=0,e=0;e<this.bones.length;e++){var f=this.bones[e];f.parent instanceof THREE.Bone&&(c.multiplyMatrices(b,f.matrixWorld),a.vertices[d].setFromMatrixPosition(c),c.multiplyMatrices(b,f.parent.matrixWorld),a.vertices[d+1].setFromMatrixPosition(c),d+=2)}a.verticesNeedUpdate=!0,a.computeBoundingSphere()},THREE.SpotLightHelper=function(a){THREE.Object3D.call(this),this.light=a,this.light.updateMatrixWorld(),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1;var b=new THREE.CylinderGeometry(0,1,1,8,1,!0);b.applyMatrix((new THREE.Matrix4).makeTranslation(0,-.5,0)),b.applyMatrix((new THREE.Matrix4).makeRotationX(-Math.PI/2));var c=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new THREE.Mesh(b,c),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper,THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var a=new THREE.Vector3,b=new THREE.Vector3;return function(){var c=this.light.distance?this.light.distance:1e4,d=c*Math.tan(this.light.angle);this.cone.scale.set(d,d,c),a.setFromMatrixPosition(this.light.matrixWorld),b.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(b.sub(a)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(a,b,c,d){this.object=a,this.size=void 0!==b?b:1;for(var e=void 0!==c?c:16711680,f=void 0!==d?d:1,g=new THREE.Geometry,h=a.geometry.faces,i=0,j=h.length;j>i;i++)for(var k=h[i],l=0,m=k.vertexNormals.length;m>l;l++)g.vertices.push(new THREE.Vector3,new THREE.Vector3);THREE.Line.call(this,g,new THREE.LineBasicMaterial({color:e,linewidth:f}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.normalMatrix=new THREE.Matrix3,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper,THREE.VertexNormalsHelper.prototype.update=function(a){var b=new THREE.Vector3;return function(a){var c=["a","b","c","d"];this.object.updateMatrixWorld(!0),this.normalMatrix.getNormalMatrix(this.object.matrixWorld);for(var d=this.geometry.vertices,e=this.object.geometry.vertices,f=this.object.geometry.faces,g=this.object.matrixWorld,h=0,i=0,j=f.length;j>i;i++)for(var k=f[i],l=0,m=k.vertexNormals.length;m>l;l++){var n=k[c[l]],o=e[n],p=k.vertexNormals[l];d[h].copy(o).applyMatrix4(g),b.copy(p).applyMatrix3(this.normalMatrix).normalize().multiplyScalar(this.size),b.add(d[h]),h+=1,d[h].copy(b),h+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.VertexTangentsHelper=function(a,b,c,d){this.object=a,this.size=void 0!==b?b:1;for(var e=void 0!==c?c:255,f=void 0!==d?d:1,g=new THREE.Geometry,h=a.geometry.faces,i=0,j=h.length;j>i;i++)for(var k=h[i],l=0,m=k.vertexTangents.length;m>l;l++)g.vertices.push(new THREE.Vector3),g.vertices.push(new THREE.Vector3);THREE.Line.call(this,g,new THREE.LineBasicMaterial({color:e,linewidth:f}),THREE.LinePieces),this.matrixAutoUpdate=!1,this.update()},THREE.VertexTangentsHelper.prototype=Object.create(THREE.Line.prototype),THREE.VertexTangentsHelper.prototype.constructor=THREE.VertexTangentsHelper,THREE.VertexTangentsHelper.prototype.update=function(a){var b=new THREE.Vector3;return function(a){var c=["a","b","c","d"];this.object.updateMatrixWorld(!0);for(var d=this.geometry.vertices,e=this.object.geometry.vertices,f=this.object.geometry.faces,g=this.object.matrixWorld,h=0,i=0,j=f.length;j>i;i++)for(var k=f[i],l=0,m=k.vertexTangents.length;m>l;l++){var n=k[c[l]],o=e[n],p=k.vertexTangents[l];d[h].copy(o).applyMatrix4(g),b.copy(p).transformDirection(g).multiplyScalar(this.size),b.add(d[h]),h+=1,d[h].copy(b),h+=1}return this.geometry.verticesNeedUpdate=!0,this}}(),THREE.WireframeHelper=function(a,b){var c=void 0!==b?b:16777215,d=[0,0],e={},f=function(a,b){return a-b},g=["a","b","c"],h=new THREE.BufferGeometry;if(a.geometry instanceof THREE.Geometry){for(var i=a.geometry.vertices,j=a.geometry.faces,k=0,l=new Uint32Array(6*j.length),m=0,n=j.length;n>m;m++)for(var o=j[m],p=0;3>p;p++){d[0]=o[g[p]],d[1]=o[g[(p+1)%3]],d.sort(f);var q=d.toString();void 0===e[q]&&(l[2*k]=d[0],l[2*k+1]=d[1],e[q]=!0,k++)}for(var r=new Float32Array(2*k*3),m=0,n=k;n>m;m++)for(var p=0;2>p;p++){var s=i[l[2*m+p]],t=6*m+3*p;r[t+0]=s.x,r[t+1]=s.y,r[t+2]=s.z}h.addAttribute("position",new THREE.BufferAttribute(r,3))}else if(a.geometry instanceof THREE.BufferGeometry)if(void 0!==a.geometry.attributes.index){var i=a.geometry.attributes.position.array,u=a.geometry.attributes.index.array,v=a.geometry.drawcalls,k=0;0===v.length&&(v=[{count:u.length,index:0,start:0}]);for(var l=new Uint32Array(2*u.length),w=0,x=v.length;x>w;++w)for(var y=v[w].start,z=v[w].count,t=v[w].index,m=y,A=y+z;A>m;m+=3)for(var p=0;3>p;p++){d[0]=t+u[m+p],d[1]=t+u[m+(p+1)%3],d.sort(f);var q=d.toString();void 0===e[q]&&(l[2*k]=d[0],l[2*k+1]=d[1],e[q]=!0,k++)}for(var r=new Float32Array(2*k*3),m=0,n=k;n>m;m++)for(var p=0;2>p;p++){var t=6*m+3*p,B=3*l[2*m+p];r[t+0]=i[B],r[t+1]=i[B+1],r[t+2]=i[B+2]}h.addAttribute("position",new THREE.BufferAttribute(r,3))}else{for(var i=a.geometry.attributes.position.array,k=i.length/3,C=k/3,r=new Float32Array(2*k*3),m=0,n=C;n>m;m++)for(var p=0;3>p;p++){var t=18*m+6*p,D=9*m+3*p;r[t+0]=i[D],r[t+1]=i[D+1],r[t+2]=i[D+2];var B=9*m+3*((p+1)%3);r[t+3]=i[B],r[t+4]=i[B+1],r[t+5]=i[B+2]}h.addAttribute("position",new THREE.BufferAttribute(r,3))}THREE.Line.call(this,h,new THREE.LineBasicMaterial({color:c}),THREE.LinePieces),this.matrix=a.matrixWorld,this.matrixAutoUpdate=!1},THREE.WireframeHelper.prototype=Object.create(THREE.Line.prototype),THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper,THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(a){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject,THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b),this.animationsMap={},this.animationsList=[];var c=this.geometry.morphTargets.length,d="__default",e=0,f=c-1,g=c/1;this.createAnimation(d,e,f,g),this.setAnimationWeight(d,1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh,THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){var e={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=e,this.animationsList.push(e)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){
for(var b,c=/([a-z]+)_?(\d+)/,d={},e=this.geometry,f=0,g=e.morphTargets.length;g>f;f++){var h=e.morphTargets[f],i=h.name.match(c);if(i&&i.length>1){var j=i[1];d[j]||(d[j]={start:1/0,end:-(1/0)});var k=d[j];f<k.start&&(k.start=f),f>k.end&&(k.end=f),b||(b=j)}}for(var j in d){var k=d[j];this.createAnimation(j,k.start,k.end,a)}this.firstAnimation=b},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){var b=this.animationsMap[a];b&&(b.direction=1,b.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){var b=this.animationsMap[a];b&&(b.direction=-1,b.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0,c=this.animationsMap[a];return c&&(b=c.time),b},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1,c=this.animationsMap[a];return c&&(b=c.duration),b},THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):THREE.warn("THREE.MorphBlendMesh: animation["+a+"] undefined in .playAnimation()")},THREE.MorphBlendMesh.prototype.stopAnimation=function(a){var b=this.animationsMap[a];b&&(b.active=!1)},THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;c>b;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a,d.mirroredLoop?(d.time>d.duration||d.time<0)&&(d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),d.time<0&&(d.time=0,d.directionBackwards=!1)):(d.time=d.time%d.duration,d.time<0&&(d.time+=d.duration));var f=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),g=d.weight;f!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*g,this.morphTargetInfluences[f]=0,d.lastFrame=d.currentFrame,d.currentFrame=f);var h=d.time%e/e;d.directionBackwards&&(h=1-h),this.morphTargetInfluences[d.currentFrame]=h*g,this.morphTargetInfluences[d.lastFrame]=(1-h)*g}}},THREE.SpriteCanvasMaterial=function(a){THREE.Material.call(this),this.type="SpriteCanvasMaterial",this.color=new THREE.Color(16777215),this.program=function(a,b){},this.setValues(a)},THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteCanvasMaterial.prototype.constructor=THREE.SpriteCanvasMaterial,THREE.SpriteCanvasMaterial.prototype.clone=function(){var a=new THREE.SpriteCanvasMaterial;return THREE.Material.prototype.clone.call(this,a),a.color.copy(this.color),a.program=this.program,a},THREE.CanvasRenderer=function(a){function b(){ta.setRGB(0,0,0),ua.setRGB(0,0,0),va.setRGB(0,0,0);for(var a=0,b=y.length;b>a;a++){var c=y[a],d=c.color;c instanceof THREE.AmbientLight?ta.add(d):c instanceof THREE.DirectionalLight?ua.add(d):c instanceof THREE.PointLight&&va.add(d)}}function c(a,b,c){for(var d=0,e=y.length;e>d;d++){var f=y[d];if(oa.copy(f.color),f instanceof THREE.DirectionalLight){var g=wa.setFromMatrixPosition(f.matrixWorld).normalize(),h=b.dot(g);if(0>=h)continue;h*=f.intensity,c.add(oa.multiplyScalar(h))}else if(f instanceof THREE.PointLight){var g=wa.setFromMatrixPosition(f.matrixWorld),h=b.dot(wa.subVectors(g,a).normalize());if(0>=h)continue;if(h*=0==f.distance?1:1-Math.min(a.distanceTo(g)/f.distance,1),0==h)continue;h*=f.intensity,c.add(oa.multiplyScalar(h))}}}function d(a,b,c){n(c.opacity),o(c.blending);var d=b.scale.x*V,e=b.scale.y*W,f=.5*Math.sqrt(d*d+e*e);if(sa.min.set(a.x-f,a.y-f),sa.max.set(a.x+f,a.y+f),c instanceof THREE.SpriteMaterial){var g=c.map;if(null!==g&&void 0!==g.image){g.hasEventListener("update",j)===!1&&(g.image.width>0&&k(g),g.addEventListener("update",j));var h=pa[g.id];t(void 0!==h?h:"rgba( 0, 0, 0, 1 )");var i=g.image,l=i.width*g.offset.x,m=i.height*g.offset.y,p=i.width*g.repeat.x,q=i.height*g.repeat.y,r=d/p,u=e/q;aa.save(),aa.translate(a.x,a.y),0!==c.rotation&&aa.rotate(c.rotation),aa.translate(-d/2,-e/2),aa.scale(r,u),aa.translate(-l,-m),aa.fillRect(l,m,p,q),aa.restore()}else t(c.color.getStyle()),aa.save(),aa.translate(a.x,a.y),0!==c.rotation&&aa.rotate(c.rotation),aa.scale(d,-e),aa.fillRect(-.5,-.5,1,1),aa.restore()}else c instanceof THREE.SpriteCanvasMaterial&&(s(c.color.getStyle()),t(c.color.getStyle()),aa.save(),aa.translate(a.x,a.y),0!==c.rotation&&aa.rotate(c.rotation),aa.scale(d,e),c.program(aa),aa.restore())}function e(a,b,c,d){if(n(d.opacity),o(d.blending),aa.beginPath(),aa.moveTo(a.positionScreen.x,a.positionScreen.y),aa.lineTo(b.positionScreen.x,b.positionScreen.y),d instanceof THREE.LineBasicMaterial){if(p(d.linewidth),q(d.linecap),r(d.linejoin),d.vertexColors!==THREE.VertexColors)s(d.color.getStyle());else{var e=c.vertexColors[0].getStyle(),f=c.vertexColors[1].getStyle();if(e===f)s(e);else{try{var g=aa.createLinearGradient(a.positionScreen.x,a.positionScreen.y,b.positionScreen.x,b.positionScreen.y);g.addColorStop(0,e),g.addColorStop(1,f)}catch(h){g=e}s(g)}}aa.stroke(),sa.expandByScalar(2*d.linewidth)}else d instanceof THREE.LineDashedMaterial&&(p(d.linewidth),q(d.linecap),r(d.linejoin),s(d.color.getStyle()),u([d.dashSize,d.gapSize]),aa.stroke(),sa.expandByScalar(2*d.linewidth),u([]))}function f(a,b,d,e,f,j,k,m){if(Q.info.render.vertices+=3,Q.info.render.faces++,n(m.opacity),o(m.blending),D=a.positionScreen.x,E=a.positionScreen.y,F=b.positionScreen.x,G=b.positionScreen.y,H=d.positionScreen.x,I=d.positionScreen.y,g(D,E,F,G,H,I),(m instanceof THREE.MeshLambertMaterial||m instanceof THREE.MeshPhongMaterial)&&null===m.map)ma.copy(m.color),na.copy(m.emissive),m.vertexColors===THREE.FaceColors&&ma.multiply(k.color),la.copy(ta),xa.copy(a.positionWorld).add(b.positionWorld).add(d.positionWorld).divideScalar(3),c(xa,k.normalModel,la),la.multiply(ma).add(na),m.wireframe===!0?h(la,m.wireframeLinewidth,m.wireframeLinecap,m.wireframeLinejoin):i(la);else if(m instanceof THREE.MeshBasicMaterial||m instanceof THREE.MeshLambertMaterial||m instanceof THREE.MeshPhongMaterial)if(null!==m.map){var p=m.map.mapping;p===THREE.UVMapping&&(J=k.uvs,l(D,E,F,G,H,I,J[e].x,J[e].y,J[f].x,J[f].y,J[j].x,J[j].y,m.map))}else null!==m.envMap?m.envMap.mapping===THREE.SphericalReflectionMapping&&(ya.copy(k.vertexNormalsModel[e]).applyMatrix3(za),K=.5*ya.x+.5,L=.5*ya.y+.5,ya.copy(k.vertexNormalsModel[f]).applyMatrix3(za),M=.5*ya.x+.5,N=.5*ya.y+.5,ya.copy(k.vertexNormalsModel[j]).applyMatrix3(za),O=.5*ya.x+.5,P=.5*ya.y+.5,l(D,E,F,G,H,I,K,L,M,N,O,P,m.envMap)):(la.copy(m.color),m.vertexColors===THREE.FaceColors&&la.multiply(k.color),m.wireframe===!0?h(la,m.wireframeLinewidth,m.wireframeLinecap,m.wireframeLinejoin):i(la));else m instanceof THREE.MeshDepthMaterial?(la.r=la.g=la.b=1-v(a.positionScreen.z*a.positionScreen.w,z.near,z.far),m.wireframe===!0?h(la,m.wireframeLinewidth,m.wireframeLinecap,m.wireframeLinejoin):i(la)):m instanceof THREE.MeshNormalMaterial?(ya.copy(k.normalModel).applyMatrix3(za),la.setRGB(ya.x,ya.y,ya.z).multiplyScalar(.5).addScalar(.5),m.wireframe===!0?h(la,m.wireframeLinewidth,m.wireframeLinecap,m.wireframeLinejoin):i(la)):(la.setRGB(1,1,1),m.wireframe===!0?h(la,m.wireframeLinewidth,m.wireframeLinecap,m.wireframeLinejoin):i(la))}function g(a,b,c,d,e,f){aa.beginPath(),aa.moveTo(a,b),aa.lineTo(c,d),aa.lineTo(e,f),aa.closePath()}function h(a,b,c,d){p(b),q(c),r(d),s(a.getStyle()),aa.stroke(),sa.expandByScalar(2*b)}function i(a){t(a.getStyle()),aa.fill()}function j(a){k(a.target)}function k(a){if(!(a instanceof THREE.CompressedTexture)){var b=a.wrapS===THREE.RepeatWrapping,c=a.wrapT===THREE.RepeatWrapping,d=a.image,e=document.createElement("canvas");e.width=d.width,e.height=d.height;var f=e.getContext("2d");f.setTransform(1,0,0,-1,0,d.height),f.drawImage(d,0,0),pa[a.id]=aa.createPattern(e,b===!0&&c===!0?"repeat":b===!0&&c===!1?"repeat-x":b===!1&&c===!0?"repeat-y":"no-repeat")}}function l(a,b,c,d,e,f,g,h,i,l,m,n,o){if(!(o instanceof THREE.DataTexture)){o.hasEventListener("update",j)===!1&&(void 0!==o.image&&o.image.width>0&&k(o),o.addEventListener("update",j));var p=pa[o.id];if(void 0===p)return t("rgba(0,0,0,1)"),void aa.fill();t(p);var q,r,s,u,v,w,x,y,z=o.offset.x/o.repeat.x,A=o.offset.y/o.repeat.y,B=o.image.width*o.repeat.x,C=o.image.height*o.repeat.y;g=(g+z)*B,h=(h+A)*C,i=(i+z)*B,l=(l+A)*C,m=(m+z)*B,n=(n+A)*C,c-=a,d-=b,e-=a,f-=b,i-=g,l-=h,m-=g,n-=h,x=i*n-m*l,0!==x&&(y=1/x,q=(n*c-l*e)*y,r=(n*d-l*f)*y,s=(i*e-m*c)*y,u=(i*f-m*d)*y,v=a-q*g-s*h,w=b-r*g-u*h,aa.save(),aa.transform(q,r,s,u,v,w),aa.fill(),aa.restore())}}function m(a,b,c){var d,e=b.x-a.x,f=b.y-a.y,g=e*e+f*f;0!==g&&(d=c/Math.sqrt(g),e*=d,f*=d,b.x+=e,b.y+=f,a.x-=e,a.y-=f)}function n(a){da!==a&&(aa.globalAlpha=a,da=a)}function o(a){ea!==a&&(a===THREE.NormalBlending?aa.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?aa.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(aa.globalCompositeOperation="darker"),ea=a)}function p(a){ha!==a&&(aa.lineWidth=a,ha=a)}function q(a){ia!==a&&(aa.lineCap=a,ia=a)}function r(a){ja!==a&&(aa.lineJoin=a,ja=a)}function s(a){fa!==a&&(aa.strokeStyle=a,fa=a)}function t(a){ga!==a&&(aa.fillStyle=a,ga=a)}function u(a){ka.length!==a.length&&(aa.setLineDash(a),ka=a)}console.log("THREE.CanvasRenderer",THREE.REVISION);var v=THREE.Math.smoothstep;a=a||{};var w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q=this,R=new THREE.Projector,S=void 0!==a.canvas?a.canvas:document.createElement("canvas"),T=S.width,U=S.height,V=Math.floor(T/2),W=Math.floor(U/2),X=0,Y=0,Z=T,$=U,_=1,aa=S.getContext("2d",{alpha:a.alpha===!0}),ba=new THREE.Color(0),ca=a.alpha===!0?0:1,da=1,ea=0,fa=null,ga=null,ha=null,ia=null,ja=null,ka=[],la=(new THREE.RenderableVertex,new THREE.RenderableVertex,new THREE.Color),ma=(new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color,new THREE.Color),na=new THREE.Color,oa=new THREE.Color,pa={},qa=new THREE.Box2,ra=new THREE.Box2,sa=new THREE.Box2,ta=new THREE.Color,ua=new THREE.Color,va=new THREE.Color,wa=new THREE.Vector3,xa=new THREE.Vector3,ya=new THREE.Vector3,za=new THREE.Matrix3;void 0===aa.setLineDash&&(aa.setLineDash=function(){}),this.domElement=S,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.getPixelRatio=function(){return _},this.setPixelRatio=function(a){_=a},this.setSize=function(a,b,c){T=a*_,U=b*_,S.width=T,S.height=U,V=Math.floor(T/2),W=Math.floor(U/2),c!==!1&&(S.style.width=a+"px",S.style.height=b+"px"),qa.min.set(-V,-W),qa.max.set(V,W),ra.min.set(-V,-W),ra.max.set(V,W),da=1,ea=0,fa=null,ga=null,ha=null,ia=null,ja=null,this.setViewport(0,0,a,b)},this.setViewport=function(a,b,c,d){X=a*_,Y=b*_,Z=c*_,$=d*_},this.setScissor=function(){},this.enableScissorTest=function(){},this.setClearColor=function(a,b){ba.set(a),ca=void 0!==b?b:1,ra.min.set(-V,-W),ra.max.set(V,W)},this.setClearColorHex=function(a,b){console.warn("THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead."),this.setClearColor(a,b)},this.getClearColor=function(){return ba},this.getClearAlpha=function(){return ca},this.getMaxAnisotropy=function(){return 0},this.clear=function(){ra.empty()===!1&&(ra.intersect(qa),ra.expandByScalar(2),ra.min.x=ra.min.x+V,ra.min.y=-ra.min.y+W,ra.max.x=ra.max.x+V,ra.max.y=-ra.max.y+W,1>ca&&aa.clearRect(0|ra.min.x,0|ra.max.y,ra.max.x-ra.min.x|0,ra.min.y-ra.max.y|0),ca>0&&(o(THREE.NormalBlending),n(1),t("rgba("+Math.floor(255*ba.r)+","+Math.floor(255*ba.g)+","+Math.floor(255*ba.b)+","+ca+")"),aa.fillRect(0|ra.min.x,0|ra.max.y,ra.max.x-ra.min.x|0,ra.min.y-ra.max.y|0)),ra.makeEmpty())},this.clearColor=function(){},this.clearDepth=function(){},this.clearStencil=function(){},this.render=function(a,c){if(c instanceof THREE.Camera==!1)return void console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");this.autoClear===!0&&this.clear(),Q.info.render.vertices=0,Q.info.render.faces=0,aa.setTransform(Z/T,0,0,-$/U,X,U-Y),aa.translate(V,W),w=R.projectScene(a,c,this.sortObjects,this.sortElements),x=w.elements,y=w.lights,z=c,za.getNormalMatrix(c.matrixWorldInverse),b();for(var g=0,h=x.length;h>g;g++){var i=x[g],j=i.material;if(void 0!==j&&0!==j.opacity){if(sa.makeEmpty(),i instanceof THREE.RenderableSprite)A=i,A.x*=V,A.y*=W,d(A,i,j);else if(i instanceof THREE.RenderableLine)A=i.v1,B=i.v2,A.positionScreen.x*=V,A.positionScreen.y*=W,B.positionScreen.x*=V,B.positionScreen.y*=W,sa.setFromPoints([A.positionScreen,B.positionScreen]),qa.isIntersectionBox(sa)===!0&&e(A,B,i,j);else if(i instanceof THREE.RenderableFace){if(A=i.v1,B=i.v2,C=i.v3,A.positionScreen.z<-1||A.positionScreen.z>1)continue;if(B.positionScreen.z<-1||B.positionScreen.z>1)continue;if(C.positionScreen.z<-1||C.positionScreen.z>1)continue;A.positionScreen.x*=V,A.positionScreen.y*=W,B.positionScreen.x*=V,B.positionScreen.y*=W,C.positionScreen.x*=V,C.positionScreen.y*=W,j.overdraw>0&&(m(A.positionScreen,B.positionScreen,j.overdraw),m(B.positionScreen,C.positionScreen,j.overdraw),m(C.positionScreen,A.positionScreen,j.overdraw)),sa.setFromPoints([A.positionScreen,B.positionScreen,C.positionScreen]),qa.isIntersectionBox(sa)===!0&&f(A,B,C,0,1,2,i,j)}ra.union(sa)}}aa.setTransform(1,0,0,1,0,0)}};var Detector={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{var a=document.createElement("canvas");return!(!window.WebGLRenderingContext||!a.getContext("webgl")&&!a.getContext("experimental-webgl"))}catch(b){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var a=document.createElement("div");return a.id="webgl-error-message",a.style.fontFamily="monospace",a.style.fontSize="13px",a.style.fontWeight="normal",a.style.textAlign="center",a.style.background="#fff",a.style.color="#000",a.style.padding="1.5em",a.style.width="400px",a.style.margin="5em auto 0",this.webgl||(a.innerHTML=window.WebGLRenderingContext?['Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />','Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n"):['Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>','Find out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.'].join("\n")),a},addGetWebGLMessage:function(a){var b,c,d;a=a||{},b=void 0!==a.parent?a.parent:document.body,c=void 0!==a.id?a.id:"oldie",d=Detector.getWebGLErrorMessage(),d.id=c,b.appendChild(d)}};"object"==typeof module&&(module.exports=Detector),THREE.OrbitControls=function(a,b){function c(){return 2*Math.PI/60/60*o.autoRotateSpeed}function d(){return Math.pow(.95,o.zoomSpeed)}function e(a){if(o.enabled!==!1){if(a.preventDefault(),a.button===o.mouseButtons.ORBIT){if(o.noRotate===!0)return;I=H.ROTATE,q.set(a.clientX,a.clientY)}else if(a.button===o.mouseButtons.ZOOM){if(o.noZoom===!0)return;I=H.DOLLY,y.set(a.clientX,a.clientY)}else if(a.button===o.mouseButtons.PAN){if(o.noPan===!0)return;I=H.PAN,t.set(a.clientX,a.clientY)}I!==H.NONE&&(document.addEventListener("mousemove",f,!1),document.addEventListener("mouseup",g,!1),o.dispatchEvent(M))}}function f(a){if(o.enabled!==!1){a.preventDefault();var b=o.domElement===document?o.domElement.body:o.domElement;if(I===H.ROTATE){if(o.noRotate===!0)return;r.set(a.clientX,a.clientY),s.subVectors(r,q),o.rotateLeft(2*Math.PI*s.x/b.clientWidth*o.rotateSpeed),o.rotateUp(2*Math.PI*s.y/b.clientHeight*o.rotateSpeed),q.copy(r)}else if(I===H.DOLLY){if(o.noZoom===!0)return;z.set(a.clientX,a.clientY),A.subVectors(z,y),A.y>0?o.dollyIn():A.y<0&&o.dollyOut(),y.copy(z)}else if(I===H.PAN){if(o.noPan===!0)return;u.set(a.clientX,a.clientY),v.subVectors(u,t),o.pan(v.x,v.y),t.copy(u)}I!==H.NONE&&o.update()}}function g(){o.enabled!==!1&&(document.removeEventListener("mousemove",f,!1),document.removeEventListener("mouseup",g,!1),o.dispatchEvent(N),I=H.NONE)}function h(a){if(o.enabled!==!1&&o.noZoom!==!0&&I===H.NONE){a.preventDefault(),a.stopPropagation();var b=0;void 0!==a.wheelDelta?b=a.wheelDelta:void 0!==a.detail&&(b=-a.detail),b>0?o.dollyOut():0>b&&o.dollyIn(),o.update(),o.dispatchEvent(M),o.dispatchEvent(N)}}function i(a){if(o.enabled!==!1&&o.noKeys!==!0&&o.noPan!==!0)switch(a.keyCode){case o.keys.UP:o.pan(0,o.keyPanSpeed),o.update();break;case o.keys.BOTTOM:o.pan(0,-o.keyPanSpeed),o.update();break;case o.keys.LEFT:o.pan(o.keyPanSpeed,0),o.update();break;case o.keys.RIGHT:o.pan(-o.keyPanSpeed,0),o.update()}}function j(a){if(o.enabled!==!1){switch(a.touches.length){case 1:if(o.noRotate===!0)return;I=H.TOUCH_ROTATE,q.set(a.touches[0].pageX,a.touches[0].pageY);break;case 2:if(o.noZoom===!0)return;I=H.TOUCH_DOLLY;var b=a.touches[0].pageX-a.touches[1].pageX,c=a.touches[0].pageY-a.touches[1].pageY,d=Math.sqrt(b*b+c*c);y.set(0,d);break;case 3:if(o.noPan===!0)return;I=H.TOUCH_PAN,t.set(a.touches[0].pageX,a.touches[0].pageY);break;default:I=H.NONE}I!==H.NONE&&o.dispatchEvent(M)}}function k(a){if(o.enabled!==!1){a.preventDefault(),a.stopPropagation();var b=o.domElement===document?o.domElement.body:o.domElement;switch(a.touches.length){case 1:if(o.noRotate===!0)return;if(I!==H.TOUCH_ROTATE)return;r.set(a.touches[0].pageX,a.touches[0].pageY),s.subVectors(r,q),o.rotateLeft(2*Math.PI*s.x/b.clientWidth*o.rotateSpeed),o.rotateUp(2*Math.PI*s.y/b.clientHeight*o.rotateSpeed),q.copy(r),o.update();break;case 2:if(o.noZoom===!0)return;if(I!==H.TOUCH_DOLLY)return;var c=a.touches[0].pageX-a.touches[1].pageX,d=a.touches[0].pageY-a.touches[1].pageY,e=Math.sqrt(c*c+d*d);z.set(0,e),A.subVectors(z,y),A.y>0?o.dollyOut():A.y<0&&o.dollyIn(),y.copy(z),o.update();break;case 3:if(o.noPan===!0)return;if(I!==H.TOUCH_PAN)return;u.set(a.touches[0].pageX,a.touches[0].pageY),v.subVectors(u,t),o.pan(v.x,v.y),t.copy(u),o.update();break;default:I=H.NONE}}}function l(){o.enabled!==!1&&(o.dispatchEvent(N),I=H.NONE)}this.object=a,this.domElement=void 0!==b?b:document,this.enabled=!0,this.target=new THREE.Vector3,this.center=this.target,this.noZoom=!1,this.zoomSpeed=1,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.noRotate=!1,this.rotateSpeed=1,this.noPan=!1,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-(1/0),this.maxAzimuthAngle=1/0,this.noKeys=!1,this.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},this.mouseButtons={ORBIT:THREE.MOUSE.LEFT,ZOOM:THREE.MOUSE.MIDDLE,PAN:THREE.MOUSE.RIGHT};var m,n,o=this,p=1e-6,q=new THREE.Vector2,r=new THREE.Vector2,s=new THREE.Vector2,t=new THREE.Vector2,u=new THREE.Vector2,v=new THREE.Vector2,w=new THREE.Vector3,x=new THREE.Vector3,y=new THREE.Vector2,z=new THREE.Vector2,A=new THREE.Vector2,B=0,C=0,D=1,E=new THREE.Vector3,F=new THREE.Vector3,G=new THREE.Quaternion,H={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},I=H.NONE;this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom;var J=(new THREE.Quaternion).setFromUnitVectors(a.up,new THREE.Vector3(0,1,0)),K=J.clone().inverse(),L={type:"change"},M={type:"start"},N={type:"end"};this.rotateLeft=function(a){void 0===a&&(a=c()),C-=a},this.rotateUp=function(a){void 0===a&&(a=c()),B-=a},this.panLeft=function(a){var b=this.object.matrix.elements;w.set(b[0],b[1],b[2]),w.multiplyScalar(-a),E.add(w)},this.panUp=function(a){var b=this.object.matrix.elements;w.set(b[4],b[5],b[6]),w.multiplyScalar(a),E.add(w)},this.pan=function(a,b){var c=o.domElement===document?o.domElement.body:o.domElement;if(o.object instanceof THREE.PerspectiveCamera){var d=o.object.position,e=d.clone().sub(o.target),f=e.length();f*=Math.tan(o.object.fov/2*Math.PI/180),o.panLeft(2*a*f/c.clientHeight),o.panUp(2*b*f/c.clientHeight)}else o.object instanceof THREE.OrthographicCamera?(o.panLeft(a*(o.object.right-o.object.left)/c.clientWidth),o.panUp(b*(o.object.top-o.object.bottom)/c.clientHeight)):console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.")},this.dollyIn=function(a){void 0===a&&(a=d()),o.object instanceof THREE.PerspectiveCamera?D/=a:o.object instanceof THREE.OrthographicCamera?(o.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom*a)),o.object.updateProjectionMatrix(),o.dispatchEvent(L)):console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.")},this.dollyOut=function(a){void 0===a&&(a=d()),o.object instanceof THREE.PerspectiveCamera?D*=a:o.object instanceof THREE.OrthographicCamera?(o.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/a)),o.object.updateProjectionMatrix(),o.dispatchEvent(L)):console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.")},this.update=function(){var a=this.object.position;x.copy(a).sub(this.target),x.applyQuaternion(J),m=Math.atan2(x.x,x.z),n=Math.atan2(Math.sqrt(x.x*x.x+x.z*x.z),x.y),this.autoRotate&&I===H.NONE&&this.rotateLeft(c()),m+=C,n+=B,m=Math.max(this.minAzimuthAngle,Math.min(this.maxAzimuthAngle,m)),n=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,n)),n=Math.max(p,Math.min(Math.PI-p,n));var b=x.length()*D;b=Math.max(this.minDistance,Math.min(this.maxDistance,b)),this.target.add(E),x.x=b*Math.sin(n)*Math.sin(m),x.y=b*Math.cos(n),x.z=b*Math.sin(n)*Math.cos(m),x.applyQuaternion(K),a.copy(this.target).add(x),this.object.lookAt(this.target),C=0,B=0,D=1,E.set(0,0,0),(F.distanceToSquared(this.object.position)>p||8*(1-G.dot(this.object.quaternion))>p)&&(this.dispatchEvent(L),F.copy(this.object.position),G.copy(this.object.quaternion))},this.reset=function(){I=H.NONE,this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(L),this.update()},this.getPolarAngle=function(){return n},this.getAzimuthalAngle=function(){return m},this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1),this.domElement.addEventListener("mousedown",e,!1),this.domElement.addEventListener("mousewheel",h,!1),this.domElement.addEventListener("DOMMouseScroll",h,!1),this.domElement.addEventListener("touchstart",j,!1),this.domElement.addEventListener("touchend",l,!1),this.domElement.addEventListener("touchmove",k,!1),window.addEventListener("keydown",i,!1),this.update()},THREE.OrbitControls.prototype=Object.create(THREE.EventDispatcher.prototype),THREE.OrbitControls.prototype.constructor=THREE.OrbitControls,THREE.RenderableObject=function(){this.id=0,this.object=null,this.z=0},THREE.RenderableFace=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.normalModel=new THREE.Vector3,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsLength=0,this.color=new THREE.Color,this.material=null,this.uvs=[new THREE.Vector2,new THREE.Vector2,new THREE.Vector2],this.z=0},THREE.RenderableVertex=function(){this.position=new THREE.Vector3,this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld),this.positionScreen.copy(a.positionScreen)},THREE.RenderableLine=function(){this.id=0,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.vertexColors=[new THREE.Color,new THREE.Color],this.material=null,this.z=0},THREE.RenderableSprite=function(){this.id=0,this.object=null,this.x=0,this.y=0,this.z=0,this.rotation=0,this.scale=new THREE.Vector2,this.material=null},THREE.Projector=function(){function a(){if(i===t){var a=new THREE.RenderableObject;return s.push(a),t++,i++,a}return s[i++]}function b(){if(k===v){var a=new THREE.RenderableVertex;return u.push(a),v++,k++,a}return u[k++]}function c(){if(m===x){var a=new THREE.RenderableFace;return w.push(a),x++,m++,a}return w[m++]}function d(){if(o===z){var a=new THREE.RenderableLine;return y.push(a),z++,o++,a}return y[o++]}function e(){if(q===B){var a=new THREE.RenderableSprite;return A.push(a),B++,q++,a}return A[q++]}function f(a,b){return a.z!==b.z?b.z-a.z:a.id!==b.id?a.id-b.id:0}function g(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;return e>=0&&f>=0&&g>=0&&h>=0?!0:0>e&&0>f||0>g&&0>h?!1:(0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f))),0>g?c=Math.max(c,g/(g-h)):0>h&&(d=Math.min(d,g/(g-h))),c>d?!1:(a.lerp(b,c),b.lerp(a,1-d),!0))}var h,i,j,k,l,m,n,o,p,q,r,s=[],t=0,u=[],v=0,w=[],x=0,y=[],z=0,A=[],B=0,C={objects:[],lights:[],elements:[]},D=new THREE.Vector3,E=new THREE.Vector4,F=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),G=new THREE.Box3,H=new Array(3),I=(new Array(4),new THREE.Matrix4),J=new THREE.Matrix4,K=new THREE.Matrix4,L=new THREE.Matrix3,M=new THREE.Frustum,N=new THREE.Vector4,O=new THREE.Vector4;this.projectVector=function(a,b){console.warn("THREE.Projector: .projectVector() is now vector.project()."),a.project(b)},this.unprojectVector=function(a,b){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),a.unproject(b)},this.pickingRay=function(a,b){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")};var P=function(){var a=[],e=[],f=null,g=null,h=new THREE.Matrix3,i=function(b){f=b,g=f.material,h.getNormalMatrix(f.matrixWorld),a.length=0,e.length=0},k=function(a){var b=a.position,c=a.positionWorld,d=a.positionScreen;c.copy(b).applyMatrix4(r),d.copy(c).applyMatrix4(J);var e=1/d.w;d.x*=e,d.y*=e,d.z*=e,a.visible=d.x>=-1&&d.x<=1&&d.y>=-1&&d.y<=1&&d.z>=-1&&d.z<=1},m=function(a,c,d){j=b(),j.position.set(a,c,d),k(j)},o=function(b,c,d){a.push(b,c,d)},p=function(a,b){e.push(a,b)},q=function(a,b,c){return a.visible===!0||b.visible===!0||c.visible===!0?!0:(H[0]=a.positionScreen,H[1]=b.positionScreen,H[2]=c.positionScreen,F.isIntersectionBox(G.setFromPoints(H)))},s=function(a,b,c){return(c.positionScreen.x-a.positionScreen.x)*(b.positionScreen.y-a.positionScreen.y)-(c.positionScreen.y-a.positionScreen.y)*(b.positionScreen.x-a.positionScreen.x)<0},t=function(a,b){var c=u[a],e=u[b];n=d(),n.id=f.id,n.v1.copy(c),n.v2.copy(e),n.z=(c.positionScreen.z+e.positionScreen.z)/2,n.material=f.material,C.elements.push(n)},v=function(b,d,i){var j=u[b],k=u[d],m=u[i];if(q(j,k,m)!==!1&&(g.side===THREE.DoubleSide||s(j,k,m)===!0)){l=c(),l.id=f.id,l.v1.copy(j),l.v2.copy(k),l.v3.copy(m),l.z=(j.positionScreen.z+k.positionScreen.z+m.positionScreen.z)/3;for(var n=0;3>n;n++){var o=3*arguments[n],p=l.vertexNormalsModel[n];p.set(a[o],a[o+1],a[o+2]),p.applyMatrix3(h).normalize();var r=2*arguments[n],t=l.uvs[n];t.set(e[r],e[r+1])}l.vertexNormalsLength=3,l.material=f.material,C.elements.push(l)}};return{setObject:i,projectVertex:k,checkTriangleVisibility:q,checkBackfaceCulling:s,pushVertex:m,pushNormal:o,pushUv:p,pushLine:t,pushTriangle:v}},Q=new P;this.projectScene=function(j,s,t,v){m=0,o=0,q=0,C.elements.length=0,j.autoUpdate===!0&&j.updateMatrixWorld(),void 0===s.parent&&s.updateMatrixWorld(),I.copy(s.matrixWorldInverse.getInverse(s.matrixWorld)),J.multiplyMatrices(s.projectionMatrix,I),M.setFromMatrix(J),i=0,C.objects.length=0,C.lights.length=0,j.traverseVisible(function(b){if(b instanceof THREE.Light)C.lights.push(b);else if(b instanceof THREE.Mesh||b instanceof THREE.Line||b instanceof THREE.Sprite){if(b.material.visible===!1)return;(b.frustumCulled===!1||M.intersectsObject(b)===!0)&&(h=a(),h.id=b.id,h.object=b,D.setFromMatrixPosition(b.matrixWorld),D.applyProjection(J),h.z=D.z,C.objects.push(h))}}),t===!0&&C.objects.sort(f);for(var w=0,x=C.objects.length;x>w;w++){var y=C.objects[w].object,z=y.geometry;if(Q.setObject(y),r=y.matrixWorld,k=0,y instanceof THREE.Mesh){if(z instanceof THREE.BufferGeometry){var A=z.attributes,B=z.offsets;if(void 0===A.position)continue;for(var F=A.position.array,G=0,H=F.length;H>G;G+=3)Q.pushVertex(F[G],F[G+1],F[G+2]);if(void 0!==A.normal)for(var P=A.normal.array,G=0,H=P.length;H>G;G+=3)Q.pushNormal(P[G],P[G+1],P[G+2]);if(void 0!==A.uv)for(var R=A.uv.array,G=0,H=R.length;H>G;G+=2)Q.pushUv(R[G],R[G+1]);if(void 0!==A.index){var S=A.index.array;if(B.length>0)for(var w=0;w<B.length;w++)for(var T=B[w],U=T.index,G=T.start,H=T.start+T.count;H>G;G+=3)Q.pushTriangle(S[G]+U,S[G+1]+U,S[G+2]+U);else for(var G=0,H=S.length;H>G;G+=3)Q.pushTriangle(S[G],S[G+1],S[G+2])}else for(var G=0,H=F.length/3;H>G;G+=3)Q.pushTriangle(G,G+1,G+2)}else if(z instanceof THREE.Geometry){var V=z.vertices,W=z.faces,X=z.faceVertexUvs[0];L.getNormalMatrix(r);for(var Y=y.material,Z=Y instanceof THREE.MeshFaceMaterial,$=Z===!0?y.material:null,_=0,aa=V.length;aa>_;_++){var ba=V[_];if(D.copy(ba),Y.morphTargets===!0)for(var ca=z.morphTargets,da=y.morphTargetInfluences,ea=0,fa=ca.length;fa>ea;ea++){var ga=da[ea];if(0!==ga){var ha=ca[ea],ia=ha.vertices[_];D.x+=(ia.x-ba.x)*ga,D.y+=(ia.y-ba.y)*ga,D.z+=(ia.z-ba.z)*ga}}Q.pushVertex(D.x,D.y,D.z)}for(var ja=0,ka=W.length;ka>ja;ja++){var la=W[ja],Y=Z===!0?$.materials[la.materialIndex]:y.material;if(void 0!==Y){var ma=Y.side,na=u[la.a],oa=u[la.b],pa=u[la.c];if(Q.checkTriangleVisibility(na,oa,pa)!==!1){var qa=Q.checkBackfaceCulling(na,oa,pa);if(ma!==THREE.DoubleSide){if(ma===THREE.FrontSide&&qa===!1)continue;if(ma===THREE.BackSide&&qa===!0)continue}l=c(),l.id=y.id,l.v1.copy(na),l.v2.copy(oa),l.v3.copy(pa),l.normalModel.copy(la.normal),qa!==!1||ma!==THREE.BackSide&&ma!==THREE.DoubleSide||l.normalModel.negate(),l.normalModel.applyMatrix3(L).normalize();for(var ra=la.vertexNormals,sa=0,ta=Math.min(ra.length,3);ta>sa;sa++){var ua=l.vertexNormalsModel[sa];ua.copy(ra[sa]),qa!==!1||ma!==THREE.BackSide&&ma!==THREE.DoubleSide||ua.negate(),ua.applyMatrix3(L).normalize()}l.vertexNormalsLength=ra.length;var va=X[ja];if(void 0!==va)for(var wa=0;3>wa;wa++)l.uvs[wa].copy(va[wa]);l.color=la.color,l.material=Y,l.z=(na.positionScreen.z+oa.positionScreen.z+pa.positionScreen.z)/3,C.elements.push(l)}}}}}else if(y instanceof THREE.Line){if(z instanceof THREE.BufferGeometry){var A=z.attributes;if(void 0!==A.position){for(var F=A.position.array,G=0,H=F.length;H>G;G+=3)Q.pushVertex(F[G],F[G+1],F[G+2]);if(void 0!==A.index)for(var S=A.index.array,G=0,H=S.length;H>G;G+=2)Q.pushLine(S[G],S[G+1]);else for(var xa=y.mode===THREE.LinePieces?2:1,G=0,H=F.length/3-1;H>G;G+=xa)Q.pushLine(G,G+1)}}else if(z instanceof THREE.Geometry){K.multiplyMatrices(J,r);var V=y.geometry.vertices;if(0===V.length)continue;na=b(),na.positionScreen.copy(V[0]).applyMatrix4(K);for(var xa=y.mode===THREE.LinePieces?2:1,_=1,aa=V.length;aa>_;_++)na=b(),na.positionScreen.copy(V[_]).applyMatrix4(K),(_+1)%xa>0||(oa=u[k-2],N.copy(na.positionScreen),O.copy(oa.positionScreen),g(N,O)===!0&&(N.multiplyScalar(1/N.w),O.multiplyScalar(1/O.w),n=d(),n.id=y.id,n.v1.positionScreen.copy(N),n.v2.positionScreen.copy(O),n.z=Math.max(N.z,O.z),n.material=y.material,y.material.vertexColors===THREE.VertexColors&&(n.vertexColors[0].copy(y.geometry.colors[_]),n.vertexColors[1].copy(y.geometry.colors[_-1])),C.elements.push(n)))}}else if(y instanceof THREE.Sprite){E.set(r.elements[12],r.elements[13],r.elements[14],1),E.applyMatrix4(J);var ya=1/E.w;E.z*=ya,E.z>=-1&&E.z<=1&&(p=e(),p.id=y.id,p.x=E.x*ya,p.y=E.y*ya,p.z=E.z,p.object=y,p.rotation=y.rotation,p.scale.x=y.scale.x*Math.abs(p.x-(E.x+s.projectionMatrix.elements[0])/(E.w+s.projectionMatrix.elements[12])),p.scale.y=y.scale.y*Math.abs(p.y-(E.y+s.projectionMatrix.elements[5])/(E.w+s.projectionMatrix.elements[13])),p.material=y.material,C.elements.push(p))}}return v===!0&&C.elements.sort(f),C}};var Stats=function(){var a=Date.now(),b=a,c=0,d=1/0,e=0,f=0,g=1/0,h=0,i=0,j=0,k=document.createElement("div");
k.id="stats",k.addEventListener("mousedown",function(a){a.preventDefault(),s(++j%2)},!1),k.style.cssText="width:80px;opacity:0.9;cursor:pointer";var l=document.createElement("div");l.id="fps",l.style.cssText="padding:0 0 3px 3px;text-align:left;background-color:#002",k.appendChild(l);var m=document.createElement("div");m.id="fpsText",m.style.cssText="color:#0ff;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px",m.innerHTML="FPS",l.appendChild(m);var n=document.createElement("div");for(n.id="fpsGraph",n.style.cssText="position:relative;width:74px;height:30px;background-color:#0ff",l.appendChild(n);74>n.children.length;){var o=document.createElement("span");o.style.cssText="width:1px;height:30px;float:left;background-color:#113",n.appendChild(o)}var p=document.createElement("div");p.id="ms",p.style.cssText="padding:0 0 3px 3px;text-align:left;background-color:#020;display:none",k.appendChild(p);var q=document.createElement("div");q.id="msText",q.style.cssText="color:#0f0;font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px",q.innerHTML="MS",p.appendChild(q);var r=document.createElement("div");for(r.id="msGraph",r.style.cssText="position:relative;width:74px;height:30px;background-color:#0f0",p.appendChild(r);74>r.children.length;)o=document.createElement("span"),o.style.cssText="width:1px;height:30px;float:left;background-color:#131",r.appendChild(o);var s=function(a){switch(j=a){case 0:l.style.display="block",p.style.display="none";break;case 1:l.style.display="none",p.style.display="block"}};return{REVISION:12,domElement:k,setMode:s,begin:function(){a=Date.now()},end:function(){var j=Date.now();c=j-a,d=Math.min(d,c),e=Math.max(e,c),q.textContent=c+" MS ("+d+"-"+e+")";var k=Math.min(30,30-30*(c/200));return r.appendChild(r.firstChild).style.height=k+"px",i++,j>b+1e3&&(f=Math.round(1e3*i/(j-b)),g=Math.min(g,f),h=Math.max(h,f),m.textContent=f+" FPS ("+g+"-"+h+")",k=Math.min(30,30-30*(f/100)),n.appendChild(n.firstChild).style.height=k+"px",b=j,i=0),j},update:function(){a=this.end()}}};"object"==typeof module&&(module.exports=Stats),this.createjs=this.createjs||{},createjs.extend=function(a,b){"use strict";function c(){this.constructor=a}return c.prototype=b.prototype,a.prototype=new c},this.createjs=this.createjs||{},createjs.promote=function(a,b){"use strict";var c=a.prototype,d=Object.getPrototypeOf&&Object.getPrototypeOf(c)||c.__proto__;if(d){c[(b+="_")+"constructor"]=d.constructor;for(var e in d)c.hasOwnProperty(e)&&"function"==typeof d[e]&&(c[b+e]=d[e])}return a},this.createjs=this.createjs||{},function(){"use strict";function a(a,b,c){this.type=a,this.target=null,this.currentTarget=null,this.eventPhase=0,this.bubbles=!!b,this.cancelable=!!c,this.timeStamp=(new Date).getTime(),this.defaultPrevented=!1,this.propagationStopped=!1,this.immediatePropagationStopped=!1,this.removed=!1}var b=a.prototype;b.preventDefault=function(){this.defaultPrevented=this.cancelable&&!0},b.stopPropagation=function(){this.propagationStopped=!0},b.stopImmediatePropagation=function(){this.immediatePropagationStopped=this.propagationStopped=!0},b.remove=function(){this.removed=!0},b.clone=function(){return new a(this.type,this.bubbles,this.cancelable)},b.set=function(a){for(var b in a)this[b]=a[b];return this},b.toString=function(){return"[Event (type="+this.type+")]"},createjs.Event=a}(),this.createjs=this.createjs||{},function(){"use strict";function a(){this._listeners=null,this._captureListeners=null}var b=a.prototype;a.initialize=function(a){a.addEventListener=b.addEventListener,a.on=b.on,a.removeEventListener=a.off=b.removeEventListener,a.removeAllEventListeners=b.removeAllEventListeners,a.hasEventListener=b.hasEventListener,a.dispatchEvent=b.dispatchEvent,a._dispatchEvent=b._dispatchEvent,a.willTrigger=b.willTrigger},b.addEventListener=function(a,b,c){var d;d=c?this._captureListeners=this._captureListeners||{}:this._listeners=this._listeners||{};var e=d[a];return e&&this.removeEventListener(a,b,c),e=d[a],e?e.push(b):d[a]=[b],b},b.on=function(a,b,c,d,e,f){return b.handleEvent&&(c=c||b,b=b.handleEvent),c=c||this,this.addEventListener(a,function(a){b.call(c,a,e),d&&a.remove()},f)},b.removeEventListener=function(a,b,c){var d=c?this._captureListeners:this._listeners;if(d){var e=d[a];if(e)for(var f=0,g=e.length;g>f;f++)if(e[f]==b){1==g?delete d[a]:e.splice(f,1);break}}},b.off=b.removeEventListener,b.removeAllEventListeners=function(a){a?(this._listeners&&delete this._listeners[a],this._captureListeners&&delete this._captureListeners[a]):this._listeners=this._captureListeners=null},b.dispatchEvent=function(a){if("string"==typeof a){var b=this._listeners;if(!b||!b[a])return!1;a=new createjs.Event(a)}else a.target&&a.clone&&(a=a.clone());try{a.target=this}catch(c){}if(a.bubbles&&this.parent){for(var d=this,e=[d];d.parent;)e.push(d=d.parent);var f,g=e.length;for(f=g-1;f>=0&&!a.propagationStopped;f--)e[f]._dispatchEvent(a,1+(0==f));for(f=1;g>f&&!a.propagationStopped;f++)e[f]._dispatchEvent(a,3)}else this._dispatchEvent(a,2);return a.defaultPrevented},b.hasEventListener=function(a){var b=this._listeners,c=this._captureListeners;return!!(b&&b[a]||c&&c[a])},b.willTrigger=function(a){for(var b=this;b;){if(b.hasEventListener(a))return!0;b=b.parent}return!1},b.toString=function(){return"[EventDispatcher]"},b._dispatchEvent=function(a,b){var c,d=1==b?this._captureListeners:this._listeners;if(a&&d){var e=d[a.type];if(!e||!(c=e.length))return;try{a.currentTarget=this}catch(f){}try{a.eventPhase=b}catch(f){}a.removed=!1,e=e.slice();for(var g=0;c>g&&!a.immediatePropagationStopped;g++){var h=e[g];h.handleEvent?h.handleEvent(a):h(a),a.removed&&(this.off(a.type,h,1==b),a.removed=!1)}}},createjs.EventDispatcher=a}(),this.createjs=this.createjs||{},function(){"use strict";function a(){throw"Ticker cannot be instantiated."}a.RAF_SYNCHED="synched",a.RAF="raf",a.TIMEOUT="timeout",a.useRAF=!1,a.timingMode=null,a.maxDelta=0,a.paused=!1,a.removeEventListener=null,a.removeAllEventListeners=null,a.dispatchEvent=null,a.hasEventListener=null,a._listeners=null,createjs.EventDispatcher.initialize(a),a._addEventListener=a.addEventListener,a.addEventListener=function(){return!a._inited&&a.init(),a._addEventListener.apply(a,arguments)},a._inited=!1,a._startTime=0,a._pausedTime=0,a._ticks=0,a._pausedTicks=0,a._interval=50,a._lastTime=0,a._times=null,a._tickTimes=null,a._timerId=null,a._raf=!0,a.setInterval=function(b){a._interval=b,a._inited&&a._setupTick()},a.getInterval=function(){return a._interval},a.setFPS=function(b){a.setInterval(1e3/b)},a.getFPS=function(){return 1e3/a._interval};try{Object.defineProperties(a,{interval:{get:a.getInterval,set:a.setInterval},framerate:{get:a.getFPS,set:a.setFPS}})}catch(b){console.log(b)}a.init=function(){a._inited||(a._inited=!0,a._times=[],a._tickTimes=[],a._startTime=a._getTime(),a._times.push(a._lastTime=0),a.interval=a._interval)},a.reset=function(){if(a._raf){var b=window.cancelAnimationFrame||window.webkitCancelAnimationFrame||window.mozCancelAnimationFrame||window.oCancelAnimationFrame||window.msCancelAnimationFrame;b&&b(a._timerId)}else clearTimeout(a._timerId);a.removeAllEventListeners("tick"),a._timerId=a._times=a._tickTimes=null,a._startTime=a._lastTime=a._ticks=0,a._inited=!1},a.getMeasuredTickTime=function(b){var c=0,d=a._tickTimes;if(!d||d.length<1)return-1;b=Math.min(d.length,b||0|a.getFPS());for(var e=0;b>e;e++)c+=d[e];return c/b},a.getMeasuredFPS=function(b){var c=a._times;return!c||c.length<2?-1:(b=Math.min(c.length-1,b||0|a.getFPS()),1e3/((c[0]-c[b])/b))},a.setPaused=function(b){a.paused=b},a.getPaused=function(){return a.paused},a.getTime=function(b){return a._startTime?a._getTime()-(b?a._pausedTime:0):-1},a.getEventTime=function(b){return a._startTime?(a._lastTime||a._startTime)-(b?a._pausedTime:0):-1},a.getTicks=function(b){return a._ticks-(b?a._pausedTicks:0)},a._handleSynch=function(){a._timerId=null,a._setupTick(),a._getTime()-a._lastTime>=.97*(a._interval-1)&&a._tick()},a._handleRAF=function(){a._timerId=null,a._setupTick(),a._tick()},a._handleTimeout=function(){a._timerId=null,a._setupTick(),a._tick()},a._setupTick=function(){if(null==a._timerId){var b=a.timingMode||a.useRAF&&a.RAF_SYNCHED;if(b==a.RAF_SYNCHED||b==a.RAF){var c=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame;if(c)return a._timerId=c(b==a.RAF?a._handleRAF:a._handleSynch),void(a._raf=!0)}a._raf=!1,a._timerId=setTimeout(a._handleTimeout,a._interval)}},a._tick=function(){var b=a.paused,c=a._getTime(),d=c-a._lastTime;if(a._lastTime=c,a._ticks++,b&&(a._pausedTicks++,a._pausedTime+=d),a.hasEventListener("tick")){var e=new createjs.Event("tick"),f=a.maxDelta;e.delta=f&&d>f?f:d,e.paused=b,e.time=c,e.runTime=c-a._pausedTime,a.dispatchEvent(e)}for(a._tickTimes.unshift(a._getTime()-c);a._tickTimes.length>100;)a._tickTimes.pop();for(a._times.unshift(c);a._times.length>100;)a._times.pop()};var c=window.performance&&(performance.now||performance.mozNow||performance.msNow||performance.oNow||performance.webkitNow);a._getTime=function(){return(c&&c.call(performance)||(new Date).getTime())-a._startTime},createjs.Ticker=a}(),this.createjs=this.createjs||{},function(){"use strict";function a(b,c,d){this.ignoreGlobalPause=!1,this.loop=!1,this.duration=0,this.pluginData=d||{},this.target=b,this.position=null,this.passive=!1,this._paused=!1,this._curQueueProps={},this._initQueueProps={},this._steps=[],this._actions=[],this._prevPosition=0,this._stepPosition=0,this._prevPos=-1,this._target=b,this._useTicks=!1,this._inited=!1,c&&(this._useTicks=c.useTicks,this.ignoreGlobalPause=c.ignoreGlobalPause,this.loop=c.loop,c.onChange&&this.addEventListener("change",c.onChange),c.override&&a.removeTweens(b)),c&&c.paused?this._paused=!0:createjs.Tween._register(this,!0),c&&null!=c.position&&this.setPosition(c.position,a.NONE)}var b=createjs.extend(a,createjs.EventDispatcher);a.NONE=0,a.LOOP=1,a.REVERSE=2,a.IGNORE={},a._tweens=[],a._plugins={},a.get=function(b,c,d,e){return e&&a.removeTweens(b),new a(b,c,d)},a.tick=function(b,c){for(var d=a._tweens.slice(),e=d.length-1;e>=0;e--){var f=d[e];c&&!f.ignoreGlobalPause||f._paused||f.tick(f._useTicks?1:b)}},a.handleEvent=function(a){"tick"==a.type&&this.tick(a.delta,a.paused)},a.removeTweens=function(b){if(b.tweenjs_count){for(var c=a._tweens,d=c.length-1;d>=0;d--){var e=c[d];e._target==b&&(e._paused=!0,c.splice(d,1))}b.tweenjs_count=0}},a.removeAllTweens=function(){for(var b=a._tweens,c=0,d=b.length;d>c;c++){var e=b[c];e._paused=!0,e.target.tweenjs_count=0}b.length=0},a.hasActiveTweens=function(b){return b?b.tweenjs_count:a._tweens&&!!a._tweens.length},a.installPlugin=function(b,c){var d=b.priority;null==d&&(b.priority=d=0);for(var e=0,f=c.length,g=a._plugins;f>e;e++){var h=c[e];if(g[h]){for(var i=g[h],j=0,k=i.length;k>j&&!(d<i[j].priority);j++);g[h].splice(j,0,b)}else g[h]=[b]}},a._register=function(b,c){var d=b._target,e=a._tweens;if(c)d&&(d.tweenjs_count=d.tweenjs_count?d.tweenjs_count+1:1),e.push(b),!a._inited&&createjs.Ticker&&(createjs.Ticker.addEventListener("tick",a),a._inited=!0);else{d&&d.tweenjs_count--;for(var f=e.length;f--;)if(e[f]==b)return void e.splice(f,1)}},b.wait=function(a,b){if(null==a||0>=a)return this;var c=this._cloneProps(this._curQueueProps);return this._addStep({d:a,p0:c,e:this._linearEase,p1:c,v:b})},b.to=function(a,b,c){return(isNaN(b)||0>b)&&(b=0),this._addStep({d:b||0,p0:this._cloneProps(this._curQueueProps),e:c,p1:this._cloneProps(this._appendQueueProps(a))})},b.call=function(a,b,c){return this._addAction({f:a,p:b?b:[this],o:c?c:this._target})},b.set=function(a,b){return this._addAction({f:this._set,o:this,p:[a,b?b:this._target]})},b.play=function(a){return a||(a=this),this.call(a.setPaused,[!1],a)},b.pause=function(a){return a||(a=this),this.call(a.setPaused,[!0],a)},b.setPosition=function(a,b){0>a&&(a=0),null==b&&(b=1);var c=a,d=!1;if(c>=this.duration&&(this.loop?c%=this.duration:(c=this.duration,d=!0)),c==this._prevPos)return d;var e=this._prevPos;if(this.position=this._prevPos=c,this._prevPosition=a,this._target)if(d)this._updateTargetProps(null,1);else if(this._steps.length>0){for(var f=0,g=this._steps.length;g>f&&!(this._steps[f].t>c);f++);var h=this._steps[f-1];this._updateTargetProps(h,(this._stepPosition=c-h.t)/h.d)}return 0!=b&&this._actions.length>0&&(this._useTicks?this._runActions(c,c):1==b&&e>c?(e!=this.duration&&this._runActions(e,this.duration),this._runActions(0,c,!0)):this._runActions(e,c)),d&&this.setPaused(!0),this.dispatchEvent("change"),d},b.tick=function(a){this._paused||this.setPosition(this._prevPosition+a)},b.setPaused=function(b){return this._paused===!!b?this:(this._paused=!!b,a._register(this,!b),this)},b.w=b.wait,b.t=b.to,b.c=b.call,b.s=b.set,b.toString=function(){return"[Tween]"},b.clone=function(){throw"Tween can not be cloned."},b._updateTargetProps=function(b,c){var d,e,f,g,h,i;if(b||1!=c){if(this.passive=!!b.v,this.passive)return;b.e&&(c=b.e(c,0,1,1)),d=b.p0,e=b.p1}else this.passive=!1,d=e=this._curQueueProps;for(var j in this._initQueueProps){null==(g=d[j])&&(d[j]=g=this._initQueueProps[j]),null==(h=e[j])&&(e[j]=h=g),f=g==h||0==c||1==c||"number"!=typeof g?1==c?h:g:g+(h-g)*c;var k=!1;if(i=a._plugins[j])for(var l=0,m=i.length;m>l;l++){var n=i[l].tween(this,j,f,d,e,c,!!b&&d==e,!b);n==a.IGNORE?k=!0:f=n}k||(this._target[j]=f)}},b._runActions=function(a,b,c){var d=a,e=b,f=-1,g=this._actions.length,h=1;for(a>b&&(d=b,e=a,f=g,g=h=-1);(f+=h)!=g;){var i=this._actions[f],j=i.t;(j==e||j>d&&e>j||c&&j==a)&&i.f.apply(i.o,i.p)}},b._appendQueueProps=function(b){var c,d,e,f,g;for(var h in b)if(void 0===this._initQueueProps[h]){if(d=this._target[h],c=a._plugins[h])for(e=0,f=c.length;f>e;e++)d=c[e].init(this,h,d);this._initQueueProps[h]=this._curQueueProps[h]=void 0===d?null:d}else d=this._curQueueProps[h];for(var h in b){if(d=this._curQueueProps[h],c=a._plugins[h])for(g=g||{},e=0,f=c.length;f>e;e++)c[e].step&&c[e].step(this,h,d,b[h],g);this._curQueueProps[h]=b[h]}return g&&this._appendQueueProps(g),this._curQueueProps},b._cloneProps=function(a){var b={};for(var c in a)b[c]=a[c];return b},b._addStep=function(a){return a.d>0&&(this._steps.push(a),a.t=this.duration,this.duration+=a.d),this},b._addAction=function(a){return a.t=this.duration,this._actions.push(a),this},b._set=function(a,b){for(var c in a)b[c]=a[c]},createjs.Tween=createjs.promote(a,"EventDispatcher")}(),this.createjs=this.createjs||{},function(){"use strict";function a(a,b,c){this.EventDispatcher_constructor(),this.ignoreGlobalPause=!1,this.duration=0,this.loop=!1,this.position=null,this._paused=!1,this._tweens=[],this._labels=null,this._labelList=null,this._prevPosition=0,this._prevPos=-1,this._useTicks=!1,c&&(this._useTicks=c.useTicks,this.loop=c.loop,this.ignoreGlobalPause=c.ignoreGlobalPause,c.onChange&&this.addEventListener("change",c.onChange)),a&&this.addTween.apply(this,a),this.setLabels(b),c&&c.paused?this._paused=!0:createjs.Tween._register(this,!0),c&&null!=c.position&&this.setPosition(c.position,createjs.Tween.NONE)}var b=createjs.extend(a,createjs.EventDispatcher);b.addTween=function(a){var b=arguments.length;if(b>1){for(var c=0;b>c;c++)this.addTween(arguments[c]);return arguments[0]}return 0==b?null:(this.removeTween(a),this._tweens.push(a),a.setPaused(!0),a._paused=!1,a._useTicks=this._useTicks,a.duration>this.duration&&(this.duration=a.duration),this._prevPos>=0&&a.setPosition(this._prevPos,createjs.Tween.NONE),a)},b.removeTween=function(a){var b=arguments.length;if(b>1){for(var c=!0,d=0;b>d;d++)c=c&&this.removeTween(arguments[d]);return c}if(0==b)return!1;for(var e=this._tweens,d=e.length;d--;)if(e[d]==a)return e.splice(d,1),a.duration>=this.duration&&this.updateDuration(),!0;return!1},b.addLabel=function(a,b){this._labels[a]=b;var c=this._labelList;if(c){for(var d=0,e=c.length;e>d&&!(b<c[d].position);d++);c.splice(d,0,{label:a,position:b})}},b.setLabels=function(a){this._labels=a?a:{}},b.getLabels=function(){var a=this._labelList;if(!a){a=this._labelList=[];var b=this._labels;for(var c in b)a.push({label:c,position:b[c]});a.sort(function(a,b){return a.position-b.position})}return a},b.getCurrentLabel=function(){var a=this.getLabels(),b=this.position,c=a.length;if(c){for(var d=0;c>d&&!(b<a[d].position);d++);return 0==d?null:a[d-1].label}return null},b.gotoAndPlay=function(a){this.setPaused(!1),this._goto(a)},b.gotoAndStop=function(a){this.setPaused(!0),this._goto(a)},b.setPosition=function(a,b){0>a&&(a=0);var c=this.loop?a%this.duration:a,d=!this.loop&&a>=this.duration;if(c==this._prevPos)return d;this._prevPosition=a,this.position=this._prevPos=c;for(var e=0,f=this._tweens.length;f>e;e++)if(this._tweens[e].setPosition(c,b),c!=this._prevPos)return!1;return d&&this.setPaused(!0),this.dispatchEvent("change"),d},b.setPaused=function(a){this._paused=!!a,createjs.Tween._register(this,!a)},b.updateDuration=function(){this.duration=0;for(var a=0,b=this._tweens.length;b>a;a++){var c=this._tweens[a];c.duration>this.duration&&(this.duration=c.duration)}},b.tick=function(a){this.setPosition(this._prevPosition+a)},b.resolve=function(a){var b=Number(a);return isNaN(b)&&(b=this._labels[a]),b},b.toString=function(){return"[Timeline]"},b.clone=function(){throw"Timeline can not be cloned."},b._goto=function(a){var b=this.resolve(a);null!=b&&this.setPosition(b)},createjs.Timeline=createjs.promote(a,"EventDispatcher")}(),this.createjs=this.createjs||{},function(){"use strict";function a(){throw"Ease cannot be instantiated."}a.linear=function(a){return a},a.none=a.linear,a.get=function(a){return-1>a&&(a=-1),a>1&&(a=1),function(b){return 0==a?b:0>a?b*(b*-a+1+a):b*((2-b)*a+(1-a))}},a.getPowIn=function(a){return function(b){return Math.pow(b,a)}},a.getPowOut=function(a){return function(b){return 1-Math.pow(1-b,a)}},a.getPowInOut=function(a){return function(b){return(b*=2)<1?.5*Math.pow(b,a):1-.5*Math.abs(Math.pow(2-b,a))}},a.quadIn=a.getPowIn(2),a.quadOut=a.getPowOut(2),a.quadInOut=a.getPowInOut(2),a.cubicIn=a.getPowIn(3),a.cubicOut=a.getPowOut(3),a.cubicInOut=a.getPowInOut(3),a.quartIn=a.getPowIn(4),a.quartOut=a.getPowOut(4),a.quartInOut=a.getPowInOut(4),a.quintIn=a.getPowIn(5),a.quintOut=a.getPowOut(5),a.quintInOut=a.getPowInOut(5),a.sineIn=function(a){return 1-Math.cos(a*Math.PI/2)},a.sineOut=function(a){return Math.sin(a*Math.PI/2)},a.sineInOut=function(a){return-.5*(Math.cos(Math.PI*a)-1)},a.getBackIn=function(a){return function(b){return b*b*((a+1)*b-a)}},a.backIn=a.getBackIn(1.7),a.getBackOut=function(a){return function(b){return--b*b*((a+1)*b+a)+1}},a.backOut=a.getBackOut(1.7),a.getBackInOut=function(a){return a*=1.525,function(b){return(b*=2)<1?.5*b*b*((a+1)*b-a):.5*((b-=2)*b*((a+1)*b+a)+2)}},a.backInOut=a.getBackInOut(1.7),a.circIn=function(a){return-(Math.sqrt(1-a*a)-1)},a.circOut=function(a){return Math.sqrt(1- --a*a)},a.circInOut=function(a){return(a*=2)<1?-.5*(Math.sqrt(1-a*a)-1):.5*(Math.sqrt(1-(a-=2)*a)+1)},a.bounceIn=function(b){return 1-a.bounceOut(1-b)},a.bounceOut=function(a){return 1/2.75>a?7.5625*a*a:2/2.75>a?7.5625*(a-=1.5/2.75)*a+.75:2.5/2.75>a?7.5625*(a-=2.25/2.75)*a+.9375:7.5625*(a-=2.625/2.75)*a+.984375},a.bounceInOut=function(b){return.5>b?.5*a.bounceIn(2*b):.5*a.bounceOut(2*b-1)+.5},a.getElasticIn=function(a,b){var c=2*Math.PI;return function(d){if(0==d||1==d)return d;var e=b/c*Math.asin(1/a);return-(a*Math.pow(2,10*(d-=1))*Math.sin((d-e)*c/b))}},a.elasticIn=a.getElasticIn(1,.3),a.getElasticOut=function(a,b){var c=2*Math.PI;return function(d){if(0==d||1==d)return d;var e=b/c*Math.asin(1/a);return a*Math.pow(2,-10*d)*Math.sin((d-e)*c/b)+1}},a.elasticOut=a.getElasticOut(1,.3),a.getElasticInOut=function(a,b){var c=2*Math.PI;return function(d){var e=b/c*Math.asin(1/a);return(d*=2)<1?-.5*a*Math.pow(2,10*(d-=1))*Math.sin((d-e)*c/b):a*Math.pow(2,-10*(d-=1))*Math.sin((d-e)*c/b)*.5+1}},a.elasticInOut=a.getElasticInOut(1,.3*1.5),createjs.Ease=a}(),this.createjs=this.createjs||{},function(){"use strict";function a(){throw"MotionGuidePlugin cannot be instantiated."}a.priority=0,a._rotOffS,a._rotOffE,a._rotNormS,a._rotNormE,a.install=function(){return createjs.Tween.installPlugin(a,["guide","x","y","rotation"]),createjs.Tween.IGNORE},a.init=function(a,b,c){var d=a.target;return d.hasOwnProperty("x")||(d.x=0),d.hasOwnProperty("y")||(d.y=0),d.hasOwnProperty("rotation")||(d.rotation=0),"rotation"==b&&(a.__needsRot=!0),"guide"==b?null:c},a.step=function(b,c,d,e,f){if("rotation"==c&&(b.__rotGlobalS=d,b.__rotGlobalE=e,a.testRotData(b,f)),"guide"!=c)return e;var g,h=e;h.hasOwnProperty("path")||(h.path=[]);var i=h.path;if(h.hasOwnProperty("end")||(h.end=1),h.hasOwnProperty("start")||(h.start=d&&d.hasOwnProperty("end")&&d.path===i?d.end:0),h.hasOwnProperty("_segments")&&h._length)return e;var j=i.length,k=10;if(!(j>=6&&(j-2)%4==0))throw"invalid 'path' data, please see documentation for valid paths";h._segments=[],h._length=0;for(var l=2;j>l;l+=4){for(var m,n,o=i[l-2],p=i[l-1],q=i[l+0],r=i[l+1],s=i[l+2],t=i[l+3],u=o,v=p,w=0,x=[],y=1;k>=y;y++){var z=y/k,A=1-z;m=A*A*o+2*A*z*q+z*z*s,n=A*A*p+2*A*z*r+z*z*t,w+=x[x.push(Math.sqrt((g=m-u)*g+(g=n-v)*g))-1],u=m,v=n}h._segments.push(w),h._segments.push(x),h._length+=w}g=h.orient,h.orient=!0;var B={};return a.calc(h,h.start,B),b.__rotPathS=Number(B.rotation.toFixed(5)),a.calc(h,h.end,B),b.__rotPathE=Number(B.rotation.toFixed(5)),h.orient=!1,a.calc(h,h.end,f),h.orient=g,h.orient?(b.__guideData=h,a.testRotData(b,f),e):e},a.testRotData=function(a,b){if(void 0===a.__rotGlobalS||void 0===a.__rotGlobalE){if(a.__needsRot)return;a.__rotGlobalS=a.__rotGlobalE=void 0!==a._curQueueProps.rotation?a._curQueueProps.rotation:b.rotation=a.target.rotation||0}if(void 0!==a.__guideData){var c=a.__guideData,d=a.__rotGlobalE-a.__rotGlobalS,e=a.__rotPathE-a.__rotPathS,f=d-e;if("auto"==c.orient)f>180?f-=360:-180>f&&(f+=360);else if("cw"==c.orient){for(;0>f;)f+=360;0==f&&d>0&&180!=d&&(f+=360)}else if("ccw"==c.orient){for(f=d-(e>180?360-e:e);f>0;)f-=360;0==f&&0>d&&-180!=d&&(f-=360)}c.rotDelta=f,c.rotOffS=a.__rotGlobalS-a.__rotPathS,a.__rotGlobalS=a.__rotGlobalE=a.__guideData=a.__needsRot=void 0}},a.tween=function(b,c,d,e,f,g,h){var i=f.guide;if(void 0==i||i===e.guide)return d;if(i.lastRatio!=g){var j=(i.end-i.start)*(h?i.end:g)+i.start;switch(a.calc(i,j,b.target),i.orient){case"cw":case"ccw":case"auto":b.target.rotation+=i.rotOffS+i.rotDelta*g;break;case"fixed":default:b.target.rotation+=i.rotOffS}i.lastRatio=g}return"rotation"!=c||i.orient&&"false"!=i.orient?b.target[c]:d},a.calc=function(b,c,d){void 0==b._segments&&a.validate(b),void 0==d&&(d={x:0,y:0,rotation:0});for(var e=b._segments,f=b.path,g=b._length*c,h=e.length-2,i=0;g>e[i]&&h>i;)g-=e[i],i+=2;var j=e[i+1],k=0;for(h=j.length-1;g>j[k]&&h>k;)g-=j[k],k++;var l=k/++h+g/(h*j[k]);i=2*i+2;var m=1-l;return d.x=m*m*f[i-2]+2*m*l*f[i+0]+l*l*f[i+2],d.y=m*m*f[i-1]+2*m*l*f[i+1]+l*l*f[i+3],b.orient&&(d.rotation=57.2957795*Math.atan2((f[i+1]-f[i-1])*m+(f[i+3]-f[i+1])*l,(f[i+0]-f[i-2])*m+(f[i+2]-f[i+0])*l)),d},createjs.MotionGuidePlugin=a}(),this.createjs=this.createjs||{},function(){"use strict";var a=createjs.TweenJS=createjs.TweenJS||{};a.version="0.6.0",a.buildDate="Thu, 11 Dec 2014 23:32:09 GMT"}(),_typeface_js&&_typeface_js.loadFace&&_typeface_js.loadFace({glyphs:{"ǻ":{x_min:64,x_max:626,ha:737,o:"m 308 1166 q 338 1203 322 1182 q 370 1246 354 1224 q 401 1290 386 1268 q 426 1331 415 1311 l 575 1331 l 575 1320 q 542 1283 564 1305 q 495 1236 521 1261 q 441 1190 469 1212 q 389 1153 413 1167 l 308 1153 l 308 1166 m 536 0 l 511 102 l 505 102 q 461 50 483 72 q 412 13 439 28 q 353 -7 386 0 q 278 -14 321 -14 q 193 0 232 -14 q 125 40 153 12 q 80 109 96 67 q 64 208 64 151 q 142 379 64 320 q 379 445 220 439 l 503 450 l 503 496 q 494 572 503 541 q 465 620 484 602 q 419 647 447 639 q 357 655 392 655 q 253 639 301 655 q 160 599 204 623 l 117 692 q 228 739 167 720 q 357 758 290 758 q 477 744 427 758 q 560 700 527 730 q 609 623 593 669 q 626 509 626 576 l 626 0 l 536 0 m 310 88 q 386 101 351 88 q 447 140 422 114 q 488 205 473 166 q 502 298 502 245 l 502 365 l 405 360 q 303 346 345 357 q 237 316 262 336 q 202 270 213 297 q 191 208 191 243 q 224 117 191 146 q 310 88 257 88 m 522 959 q 510 897 522 924 q 477 850 498 869 q 428 821 456 831 q 366 812 400 812 q 305 821 332 812 q 257 850 277 831 q 226 896 237 869 q 215 958 215 923 q 226 1019 215 992 q 257 1065 237 1046 q 305 1094 277 1084 q 366 1104 332 1104 q 427 1094 399 1104 q 477 1065 456 1084 q 510 1020 498 1046 q 522 959 522 993 m 447 958 q 425 1014 447 994 q 368 1034 403 1034 q 311 1014 333 1034 q 289 958 289 994 q 309 901 289 921 q 368 881 329 881 q 425 901 403 881 q 447 958 447 921 "},"Á":{x_min:-.25,x_max:844.25,ha:844,o:"m 715 0 l 606 307 l 237 307 l 127 0 l 0 0 l 364 996 l 479 996 l 844 0 l 715 0 m 566 419 l 466 706 q 456 736 462 719 q 444 774 450 754 q 432 817 438 795 q 421 860 426 839 q 410 816 416 839 q 397 773 404 794 q 386 735 391 752 q 376 706 380 718 l 277 419 l 566 419 m 362 1089 q 392 1134 376 1108 q 424 1187 408 1160 q 455 1242 440 1215 q 480 1293 469 1269 l 629 1293 l 629 1278 q 596 1233 618 1260 q 549 1175 575 1205 q 495 1118 523 1146 q 444 1071 467 1089 l 362 1071 l 362 1089 "},"ĥ":{x_min:118,x_max:707,ha:818,o:"m 583 0 l 583 479 q 547 611 583 567 q 436 655 512 655 q 343 637 381 655 q 283 585 306 620 q 251 501 261 551 q 241 385 241 450 l 241 0 l 118 0 l 118 1055 l 241 1055 l 241 741 l 236 644 l 242 644 q 283 694 259 673 q 334 730 306 715 q 393 751 362 744 q 457 758 424 758 q 644 693 581 758 q 707 486 707 628 l 707 0 l 583 0 m 655 1109 l 573 1109 q 501 1164 538 1131 q 430 1234 465 1197 q 357 1164 393 1197 q 287 1109 321 1131 l 205 1109 l 205 1127 q 245 1172 222 1146 q 291 1225 268 1198 q 334 1280 314 1253 q 364 1331 354 1307 l 495 1331 q 525 1280 505 1307 q 568 1225 545 1253 q 614 1172 591 1198 q 655 1127 638 1146 l 655 1109 "},"Κ":{x_min:135,x_max:804.25,ha:804,o:"m 804 0 l 661 0 l 355 473 l 261 396 l 261 0 l 135 0 l 135 992 l 261 992 l 261 496 l 343 609 l 649 992 l 791 992 l 438 559 l 804 0 "},"»":{x_min:57,x_max:621.5,ha:676,o:"m 621 356 l 411 78 l 333 130 l 494 367 l 333 603 l 411 656 l 621 375 l 621 356 m 345 356 l 136 78 l 57 130 l 218 367 l 57 603 l 136 656 l 345 375 l 345 356 "},"∆":{x_min:28,x_max:761,ha:789,o:"m 28 76 l 330 992 l 457 992 l 761 75 l 761 0 l 28 0 l 28 76 m 456 625 q 419 748 434 691 q 393 856 403 805 q 367 748 381 805 q 333 629 353 691 l 161 111 l 627 111 l 456 625 "},"ў":{x_min:6.75,x_max:672.25,ha:679,o:"m 6 745 l 134 745 l 280 329 q 300 272 290 301 q 318 212 310 242 q 333 154 327 182 q 341 103 339 126 l 346 103 q 356 149 349 120 q 373 211 364 178 q 392 276 382 244 q 409 330 402 308 l 544 745 l 672 745 l 377 -96 q 336 -195 358 -152 q 285 -270 314 -239 q 217 -317 256 -300 q 123 -334 177 -334 q 62 -330 88 -334 q 18 -322 36 -326 l 18 -223 q 54 -229 32 -226 q 99 -231 75 -231 q 156 -223 132 -231 q 197 -201 179 -216 q 227 -164 215 -186 q 250 -115 240 -142 l 289 -6 l 6 745 m 607 1058 q 586 964 602 1005 q 538 897 569 924 q 458 855 506 869 q 342 842 410 842 q 225 855 273 842 q 148 895 177 868 q 104 963 118 922 q 87 1058 90 1003 l 202 1058 q 214 990 205 1016 q 241 949 224 964 q 283 929 258 934 q 345 923 309 923 q 400 930 375 923 q 443 952 425 937 q 473 993 461 968 q 488 1058 484 1019 l 607 1058 "},"ţ":{x_min:23,x_max:445,ha:471,o:"m 343 88 q 371 89 355 88 q 400 93 386 91 q 426 97 415 95 q 445 102 438 100 l 445 8 q 422 0 436 3 q 392 -7 409 -4 q 358 -12 376 -10 q 324 -14 341 -14 q 246 -3 282 -14 q 184 34 210 7 q 142 106 157 61 q 128 221 128 152 l 128 656 l 23 656 l 23 709 l 128 759 l 180 915 l 251 915 l 251 745 l 439 745 l 439 656 l 251 656 l 251 221 q 272 121 251 155 q 343 88 294 88 m 138 -288 q 154 -246 145 -271 q 171 -191 163 -220 q 185 -135 179 -163 q 194 -85 192 -107 l 317 -85 l 317 -98 q 302 -141 312 -115 q 276 -197 291 -167 q 242 -255 261 -226 q 204 -307 224 -284 l 138 -307 l 138 -288 "},"«":{x_min:55.5,x_max:620,ha:676,o:"m 55 375 l 264 656 l 344 603 l 183 367 l 344 130 l 264 78 l 55 356 l 55 375 m 331 375 l 541 656 l 620 603 l 459 367 l 620 130 l 541 78 l 331 356 l 331 375 "},"í":{x_min:118,x_max:392,ha:359,o:"m 241 0 l 118 0 l 118 745 l 241 745 l 241 0 m 125 860 q 155 905 139 879 q 187 958 171 931 q 218 1013 203 986 q 243 1064 232 1040 l 392 1064 l 392 1049 q 359 1004 381 1031 q 312 946 338 976 q 258 889 286 917 q 207 842 230 860 l 125 842 l 125 860 "},"ņ":{x_min:118,x_max:707,ha:818,o:"m 583 0 l 583 479 q 547 611 583 567 q 436 655 512 655 q 343 637 381 655 q 283 585 306 620 q 251 501 261 551 q 241 385 241 450 l 241 0 l 118 0 l 118 745 l 218 745 l 236 644 l 242 644 q 283 694 259 673 q 334 730 306 715 q 393 751 362 744 q 457 758 424 758 q 644 693 581 758 q 707 486 707 628 l 707 0 l 583 0 m 300 -288 q 316 -246 307 -271 q 333 -191 325 -220 q 347 -135 341 -163 q 356 -85 354 -107 l 479 -85 l 479 -98 q 464 -141 474 -115 q 438 -197 453 -167 q 404 -255 423 -226 q 366 -307 386 -284 l 300 -307 l 300 -288 "},"µ":{x_min:118,x_max:706,ha:825,o:"m 241 264 q 277 132 241 176 q 388 88 313 88 q 481 106 443 88 q 540 158 518 123 q 573 242 563 192 q 582 357 582 292 l 582 745 l 706 745 l 706 0 l 606 0 l 588 99 l 581 99 q 500 14 548 43 q 381 -14 451 -14 q 296 1 332 -14 q 237 45 261 17 q 239 -7 238 19 q 241 -59 240 -30 q 241 -117 241 -88 l 241 -334 l 118 -334 l 118 745 l 241 745 l 241 264 "},"ỳ":{x_min:6.75,x_max:672.25,ha:679,o:"m 6 745 l 134 745 l 280 329 q 300 272 290 301 q 318 212 310 242 q 333 154 327 182 q 341 103 339 126 l 346 103 q 356 149 349 120 q 373 211 364 178 q 392 276 382 244 q 409 330 402 308 l 544 745 l 672 745 l 377 -96 q 336 -195 358 -152 q 285 -270 314 -239 q 217 -317 256 -300 q 123 -334 177 -334 q 62 -330 88 -334 q 18 -322 36 -326 l 18 -223 q 54 -229 32 -226 q 99 -231 75 -231 q 156 -223 132 -231 q 197 -201 179 -216 q 227 -164 215 -186 q 250 -115 240 -142 l 289 -6 l 6 745 m 411 842 l 329 842 q 277 889 305 860 q 223 946 249 917 q 176 1004 197 976 q 144 1049 154 1031 l 144 1064 l 292 1064 q 318 1013 303 1040 q 348 958 332 986 q 380 905 364 931 q 411 860 396 879 l 411 842 "},"Ι":{x_min:55.34375,x_max:414.8125,ha:471,o:"m 414 0 l 55 0 l 55 69 l 172 96 l 172 895 l 55 922 l 55 992 l 414 992 l 414 922 l 298 895 l 298 96 l 414 69 l 414 0 "},"Ύ":{x_min:-18,x_max:924.25,ha:925,o:"m 557 490 l 788 992 l 924 992 l 621 386 l 621 0 l 495 0 l 495 379 l 192 992 l 330 992 l 557 490 m -18 789 q -4 835 -11 809 q 8 889 2 861 q 20 943 15 916 q 29 993 26 970 l 164 993 l 164 978 q 148 936 159 962 q 122 880 137 909 q 89 821 106 850 q 55 771 71 792 l -18 771 l -18 789 "},"ѕ":{x_min:61.15625,x_max:564,ha:627,o:"m 564 203 q 544 108 564 149 q 487 40 524 68 q 398 0 450 13 q 281 -14 346 -14 q 154 -2 207 -14 q 61 33 101 9 l 61 146 q 107 125 82 135 q 161 106 133 114 q 219 93 189 98 q 279 88 249 88 q 353 95 323 88 q 403 116 384 103 q 431 150 423 130 q 440 194 440 170 q 433 232 440 215 q 409 265 427 249 q 360 299 391 282 q 280 337 329 316 q 193 378 232 358 q 127 424 154 399 q 86 482 100 449 q 72 560 72 515 q 90 645 72 608 q 143 707 109 682 q 224 745 177 732 q 330 758 272 758 q 451 743 396 758 q 554 706 505 729 l 512 606 q 422 641 468 626 q 329 655 376 655 q 228 632 261 655 q 195 568 195 610 q 203 526 195 544 q 229 493 210 509 q 279 461 248 477 q 358 426 311 445 q 444 385 406 405 q 509 339 482 365 q 549 281 535 314 q 564 203 564 249 "},"Ш":{x_min:135,x_max:1250,ha:1385,o:"m 1250 0 l 135 0 l 135 992 l 261 992 l 261 111 l 629 111 l 629 992 l 755 992 l 755 111 l 1123 111 l 1123 992 l 1250 992 l 1250 0 "},M:{x_min:135,x_max:1074,ha:1209,o:"m 544 0 l 253 868 l 248 868 q 255 768 252 818 q 259 678 257 726 q 261 593 261 631 l 261 0 l 135 0 l 135 992 l 331 992 l 601 183 l 605 183 l 886 992 l 1074 992 l 1074 0 l 947 0 l 947 601 q 949 682 947 637 q 952 769 950 728 q 957 867 955 817 l 951 867 l 648 0 l 544 0 "},"Ψ":{x_min:71,x_max:994,ha:1065,o:"m 994 667 q 985 582 994 625 q 959 499 977 539 q 913 423 942 458 q 844 360 885 387 q 749 318 803 334 q 626 303 694 303 l 594 303 l 594 0 l 468 0 l 468 303 l 436 303 q 314 318 368 303 q 220 359 260 333 q 151 421 179 386 q 105 497 122 456 q 79 580 87 537 q 71 664 71 623 l 71 992 l 204 992 l 204 667 q 219 560 204 607 q 265 479 235 512 q 342 428 295 446 q 450 410 388 410 l 468 410 l 468 992 l 594 992 l 594 410 l 611 410 q 798 477 737 410 q 860 664 860 544 l 860 992 l 994 992 l 994 667 "
},"ũ":{x_min:111,x_max:700,ha:818,o:"m 600 0 l 582 99 l 575 99 q 534 48 558 70 q 483 13 511 27 q 424 -7 455 0 q 360 -14 393 -14 q 252 1 299 -14 q 174 50 205 17 q 126 135 142 83 q 111 258 111 186 l 111 745 l 234 745 l 234 264 q 270 132 234 176 q 381 88 306 88 q 474 106 436 88 q 534 158 511 123 q 566 242 556 192 q 576 357 576 292 l 576 745 l 700 745 l 700 0 l 600 0 m 510 843 q 456 854 483 843 q 404 881 430 866 q 354 907 378 895 q 309 919 330 919 q 262 901 278 919 q 236 841 246 883 l 166 841 q 180 915 169 882 q 209 972 191 948 q 252 1008 227 995 q 309 1021 277 1021 q 365 1009 337 1021 q 418 982 392 997 q 467 956 444 968 q 510 944 491 944 q 556 962 541 944 q 582 1022 572 980 l 654 1022 q 639 948 650 981 q 610 892 628 915 q 567 855 592 868 q 510 843 542 843 "},"ŭ":{x_min:111,x_max:700,ha:818,o:"m 600 0 l 582 99 l 575 99 q 534 48 558 70 q 483 13 511 27 q 424 -7 455 0 q 360 -14 393 -14 q 252 1 299 -14 q 174 50 205 17 q 126 135 142 83 q 111 258 111 186 l 111 745 l 234 745 l 234 264 q 270 132 234 176 q 381 88 306 88 q 474 106 436 88 q 534 158 511 123 q 566 242 556 192 q 576 357 576 292 l 576 745 l 700 745 l 700 0 l 600 0 m 612 1030 q 594 954 609 988 q 553 894 579 920 q 490 855 527 869 q 405 842 453 842 q 318 855 355 842 q 257 893 281 868 q 219 952 232 918 q 204 1030 206 987 l 278 1030 q 290 983 281 1000 q 316 957 300 965 q 355 946 332 948 q 408 943 378 943 q 454 946 432 943 q 494 959 476 949 q 523 985 511 968 q 537 1030 534 1002 l 612 1030 "},"―":{x_min:56,x_max:1333,ha:1389,o:"m 56 315 l 56 429 l 1333 429 l 1333 315 l 56 315 "},"{":{x_min:41,x_max:456,ha:492,o:"m 338 -10 q 346 -64 338 -43 q 369 -96 354 -84 q 407 -113 385 -108 q 456 -118 428 -117 l 456 -220 q 359 -208 404 -219 q 283 -172 315 -196 q 233 -110 251 -148 q 215 -19 215 -73 l 215 208 q 170 307 215 278 q 41 337 125 337 l 41 439 q 170 468 125 439 q 215 567 215 497 l 215 793 q 233 883 215 846 q 283 944 251 920 q 359 980 315 968 q 456 992 404 991 l 456 890 q 407 885 428 889 q 369 868 385 880 q 346 836 354 857 q 338 783 338 815 l 338 559 q 298 446 338 488 q 180 391 258 405 l 180 383 q 298 328 258 369 q 338 214 338 286 l 338 -10 "},"¼":{x_min:42,x_max:962.765625,ha:1023,o:"m 207 992 l 297 992 l 297 397 l 201 397 l 201 754 q 201 792 201 771 q 202 833 201 813 q 204 873 203 854 q 206 908 205 893 q 184 881 196 895 q 156 853 171 866 l 92 799 l 42 864 l 207 992 m 815 992 l 264 0 l 157 0 l 708 992 l 815 992 m 962 133 l 877 133 l 877 0 l 781 0 l 781 133 l 526 133 l 526 208 l 782 599 l 877 599 l 877 217 l 962 217 l 962 133 m 781 217 l 781 368 q 782 439 781 400 q 785 515 783 477 q 774 492 781 507 q 760 462 767 478 q 744 430 752 445 q 729 403 736 414 l 622 217 l 781 217 "},"Ḿ":{x_min:135,x_max:1074,ha:1209,o:"m 544 0 l 253 868 l 248 868 q 255 768 252 818 q 259 678 257 726 q 261 593 261 631 l 261 0 l 135 0 l 135 992 l 331 992 l 601 183 l 605 183 l 886 992 l 1074 992 l 1074 0 l 947 0 l 947 601 q 949 682 947 637 q 952 769 950 728 q 957 867 955 817 l 951 867 l 648 0 l 544 0 m 522 1091 q 552 1136 536 1110 q 584 1189 568 1162 q 615 1244 600 1217 q 640 1295 629 1271 l 789 1295 l 789 1280 q 756 1235 778 1262 q 709 1177 735 1207 q 655 1120 683 1148 q 604 1073 627 1091 l 522 1073 l 522 1091 "},"ι":{x_min:111,x_max:428,ha:454,o:"m 234 743 l 234 220 q 255 121 234 154 q 326 88 277 88 q 353 89 338 88 q 383 93 368 91 q 409 97 397 95 q 428 102 421 100 l 428 8 q 405 0 419 3 q 375 -7 391 -4 q 341 -12 358 -10 q 307 -14 323 -14 q 229 -3 265 -14 q 167 34 193 7 q 125 105 140 60 q 111 219 111 150 l 111 743 l 234 743 "},"Ĳ":{x_min:55.34375,x_max:722.15625,ha:847,o:"m 414 0 l 55 0 l 55 69 l 172 96 l 172 895 l 55 922 l 55 992 l 414 992 l 414 922 l 298 895 l 298 96 l 414 69 l 414 0 m 451 -264 q 390 -259 416 -264 q 346 -247 364 -255 l 346 -139 q 395 -149 369 -145 q 452 -152 422 -152 q 503 -146 477 -152 q 549 -122 528 -139 q 583 -76 570 -105 q 596 0 596 -46 l 596 992 l 722 992 l 722 13 q 702 -109 722 -57 q 646 -196 682 -162 q 561 -247 611 -230 q 451 -264 511 -264 "},"Ê":{x_min:135,x_max:650,ha:733,o:"m 650 0 l 135 0 l 135 992 l 650 992 l 650 880 l 261 880 l 261 574 l 624 574 l 624 462 l 261 462 l 261 111 l 650 111 l 650 0 m 616 1071 l 534 1071 q 462 1126 499 1093 q 391 1196 426 1159 q 318 1126 354 1159 q 248 1071 282 1093 l 166 1071 l 166 1089 q 206 1134 183 1108 q 252 1187 229 1160 q 295 1242 275 1215 q 325 1293 315 1269 l 456 1293 q 486 1242 466 1269 q 529 1187 506 1215 q 575 1134 552 1160 q 616 1089 599 1108 l 616 1071 "},"Ά":{x_min:-16,x_max:844.25,ha:844,o:"m 715 0 l 606 307 l 237 307 l 127 0 l 0 0 l 364 996 l 479 996 l 844 0 l 715 0 m 566 419 l 466 706 q 456 736 462 719 q 444 774 450 754 q 432 817 438 795 q 421 860 426 839 q 410 816 416 839 q 397 773 404 794 q 386 735 391 752 q 376 706 380 718 l 277 419 l 566 419 m -16 789 q -2 835 -9 809 q 10 889 4 861 q 22 943 17 916 q 31 993 28 970 l 166 993 l 166 978 q 150 936 161 962 q 124 880 139 909 q 91 821 108 850 q 57 771 73 792 l -16 771 l -16 789 "},")":{x_min:42,x_max:363,ha:418,o:"m 363 380 q 350 214 363 296 q 313 57 338 133 q 249 -89 287 -19 q 158 -220 211 -158 l 43 -220 q 126 -84 90 -156 q 186 64 162 -12 q 223 221 211 141 q 235 381 235 301 q 186 704 235 547 q 42 992 137 861 l 158 992 q 249 857 211 928 q 313 708 287 785 q 350 547 338 630 q 363 380 363 465 "},"ε":{x_min:61,x_max:583,ha:629,o:"m 453 439 l 453 336 l 366 336 q 229 305 273 336 q 184 210 184 274 q 198 152 184 176 q 235 114 212 129 q 291 94 259 100 q 360 88 323 88 q 426 93 395 88 q 484 106 457 98 q 535 125 511 114 q 580 146 559 135 l 580 37 q 486 0 540 14 q 359 -14 433 -14 q 226 2 282 -14 q 133 48 170 19 q 78 117 96 77 q 61 203 61 157 q 73 275 61 245 q 108 326 86 305 q 157 361 129 347 q 215 385 185 375 l 215 392 q 162 416 185 402 q 121 452 138 431 q 94 500 103 473 q 85 561 85 527 q 104 645 85 608 q 159 707 124 682 q 244 745 195 732 q 351 758 293 758 q 417 754 387 758 q 475 745 448 751 q 529 729 503 739 q 583 706 555 720 l 540 606 q 445 642 489 629 q 353 655 401 655 q 240 629 279 655 q 201 551 201 603 q 214 499 201 520 q 252 464 228 477 q 311 445 277 451 q 386 439 345 439 l 453 439 "},"э":{x_min:37,x_max:566,ha:642,o:"m 218 -14 q 115 -3 157 -14 q 37 26 73 6 l 37 135 q 118 106 73 118 q 219 93 163 93 q 308 107 269 93 q 376 149 348 121 q 420 223 404 178 q 439 331 437 268 l 114 331 l 114 434 l 438 434 q 379 598 429 547 q 234 650 329 650 q 197 647 217 650 q 156 638 176 644 q 116 627 135 633 q 82 614 97 621 l 45 718 q 83 733 62 726 q 130 746 105 741 q 180 754 154 751 q 233 758 207 758 q 363 736 302 758 q 468 669 424 715 q 539 548 513 623 q 566 367 566 474 q 538 196 566 268 q 463 78 511 125 q 352 8 415 31 q 218 -14 289 -14 "},"ш":{x_min:118,x_max:1089,ha:1207,o:"m 665 102 l 965 102 l 965 745 l 1089 745 l 1089 0 l 118 0 l 118 745 l 241 745 l 241 102 l 542 102 l 542 745 l 665 745 l 665 102 "},"Я":{x_min:16.75,x_max:685,ha:819,o:"m 391 410 l 165 0 l 16 0 l 275 444 q 204 479 237 458 q 145 533 170 500 q 104 612 119 566 q 90 721 90 658 q 175 923 90 855 q 431 992 261 992 l 685 992 l 685 0 l 558 0 l 558 410 l 391 410 m 558 884 l 432 884 q 343 874 382 884 q 277 843 304 864 q 237 789 251 822 q 223 710 223 756 q 236 630 223 666 q 276 569 249 595 q 342 531 302 544 q 437 517 382 517 l 558 517 l 558 884 "},a:{x_min:64,x_max:626,ha:737,o:"m 536 0 l 511 102 l 505 102 q 461 50 483 72 q 412 13 439 28 q 353 -7 386 0 q 278 -14 321 -14 q 193 0 232 -14 q 125 40 153 12 q 80 109 96 67 q 64 208 64 151 q 142 379 64 320 q 379 445 220 439 l 503 450 l 503 496 q 494 572 503 541 q 465 620 484 602 q 419 647 447 639 q 357 655 392 655 q 253 639 301 655 q 160 599 204 623 l 117 692 q 228 739 167 720 q 357 758 290 758 q 477 744 427 758 q 560 700 527 730 q 609 623 593 669 q 626 509 626 576 l 626 0 l 536 0 m 310 88 q 386 101 351 88 q 447 140 422 114 q 488 205 473 166 q 502 298 502 245 l 502 365 l 405 360 q 303 346 345 357 q 237 316 262 336 q 202 270 213 297 q 191 208 191 243 q 224 117 191 146 q 310 88 257 88 "},"Ę":{x_min:135,x_max:650,ha:733,o:"m 650 0 l 135 0 l 135 992 l 650 992 l 650 880 l 261 880 l 261 574 l 624 574 l 624 462 l 261 462 l 261 111 l 650 111 l 650 0 m 489 -161 q 507 -206 489 -191 q 549 -220 525 -220 q 582 -218 566 -220 q 608 -214 598 -217 l 608 -291 q 568 -299 590 -296 q 527 -302 547 -302 q 425 -266 459 -302 q 392 -170 392 -231 q 401 -116 392 -142 q 427 -69 411 -91 q 460 -30 442 -48 q 496 0 479 -12 l 583 0 q 489 -161 489 -90 "},Z:{x_min:56,x_max:693,ha:749,o:"m 693 0 l 56 0 l 56 97 l 537 880 l 70 880 l 70 992 l 679 992 l 679 894 l 197 111 l 693 111 l 693 0 "}," ":{x_min:0,x_max:0,ha:231},k:{x_min:118,x_max:684.25,ha:689,o:"m 233 384 l 324 500 l 522 745 l 665 745 l 394 422 l 684 0 l 542 0 l 315 341 l 241 286 l 241 0 l 118 0 l 118 1055 l 241 1055 l 241 571 l 230 384 l 233 384 "},"Ù":{x_min:125,x_max:845,ha:970,o:"m 845 993 l 845 349 q 822 205 845 272 q 755 90 800 139 q 641 13 709 41 q 481 -14 573 -14 q 327 12 394 -14 q 216 86 261 38 q 148 202 171 134 q 125 352 125 269 l 125 991 l 251 991 l 251 346 q 309 162 251 227 q 487 97 368 97 q 591 115 548 97 q 663 167 635 133 q 704 246 690 200 q 718 347 718 292 l 718 993 l 845 993 m 575 1071 l 493 1071 q 441 1118 469 1089 q 387 1175 413 1146 q 340 1233 361 1205 q 308 1278 318 1260 l 308 1293 l 456 1293 q 482 1242 467 1269 q 512 1187 496 1215 q 544 1134 528 1160 q 575 1089 560 1108 l 575 1071 "},"Ů":{x_min:125,x_max:845,ha:970,o:"m 845 993 l 845 349 q 822 205 845 272 q 755 90 800 139 q 641 13 709 41 q 481 -14 573 -14 q 327 12 394 -14 q 216 86 261 38 q 148 202 171 134 q 125 352 125 269 l 125 991 l 251 991 l 251 346 q 309 162 251 227 q 487 97 368 97 q 591 115 548 97 q 663 167 635 133 q 704 246 690 200 q 718 347 718 292 l 718 993 l 845 993 m 639 1218 q 627 1156 639 1183 q 594 1109 615 1128 q 545 1080 573 1090 q 483 1071 516 1071 q 421 1080 449 1071 q 373 1109 393 1090 q 342 1155 353 1128 q 332 1217 332 1182 q 342 1278 332 1251 q 373 1324 353 1305 q 421 1353 393 1343 q 483 1363 449 1363 q 544 1353 516 1363 q 594 1324 573 1343 q 627 1279 615 1305 q 639 1218 639 1252 m 564 1217 q 542 1273 564 1253 q 485 1293 520 1293 q 428 1273 450 1293 q 406 1217 406 1253 q 426 1160 406 1180 q 485 1140 446 1140 q 542 1160 520 1140 q 564 1217 564 1180 "},"¢":{x_min:128,x_max:647,ha:765,o:"m 634 162 q 574 133 605 143 q 498 121 542 123 l 498 -14 l 382 -14 l 382 126 q 276 160 323 134 q 196 230 229 185 q 145 343 163 275 q 128 503 128 410 q 145 668 128 599 q 196 783 163 737 q 276 854 229 829 q 382 889 323 880 l 382 1006 l 498 1006 l 498 894 q 580 880 540 892 q 647 853 620 869 l 611 747 q 576 761 595 754 q 537 772 557 767 q 496 780 516 777 q 459 783 476 783 q 304 715 353 783 q 255 504 255 647 q 304 296 255 362 q 454 231 353 231 q 553 243 509 231 q 634 272 598 256 l 634 162 "},"В":{x_min:135,x_max:786,ha:863,o:"m 135 992 l 405 992 q 558 978 492 992 q 668 936 624 965 q 735 858 713 906 q 758 740 758 810 q 744 662 758 698 q 707 597 731 625 q 645 551 682 569 q 563 526 609 532 l 563 519 q 650 496 609 511 q 720 454 690 480 q 768 386 751 427 q 786 287 786 345 q 763 166 786 219 q 700 76 741 113 q 598 19 658 39 q 463 0 539 0 l 135 0 l 135 992 m 261 572 l 427 572 q 523 582 485 572 q 586 612 562 592 q 621 662 610 632 q 631 732 631 692 q 579 848 631 813 q 413 884 526 884 l 261 884 l 261 572 m 261 464 l 261 107 l 441 107 q 541 121 500 107 q 606 159 581 134 q 641 217 630 183 q 652 292 652 251 q 641 362 652 330 q 604 416 630 393 q 537 451 579 439 q 433 464 495 464 l 261 464 "},"І":{x_min:55.34375,x_max:414.8125,ha:471,o:"m 414 0 l 55 0 l 55 69 l 172 96 l 172 895 l 55 922 l 55 992 l 414 992 l 414 922 l 298 895 l 298 96 l 414 69 l 414 0 "},"ē":{x_min:77,x_max:673,ha:743,o:"m 412 -14 q 276 11 337 -14 q 170 84 214 36 q 101 203 125 132 q 77 366 77 274 q 99 531 77 458 q 162 654 121 604 q 259 731 202 705 q 384 758 316 758 q 505 733 451 758 q 595 665 558 709 q 653 560 633 621 q 673 423 673 498 l 673 346 l 204 346 q 259 155 207 216 q 413 93 311 93 q 477 97 448 93 q 534 107 507 100 q 587 123 561 113 q 639 145 613 133 l 639 35 q 586 13 612 22 q 533 -2 560 3 q 476 -11 505 -8 q 412 -14 446 -14 m 384 655 q 260 602 306 655 q 207 449 214 549 l 545 449 q 536 533 545 495 q 507 598 526 571 q 457 640 487 625 q 384 655 427 655 m 192 943 l 582 943 l 582 842 l 192 842 l 192 943 "},"β":{x_min:118,x_max:774,ha:836,o:"m 427 1063 q 548 1046 493 1063 q 643 996 603 1029 q 706 913 683 963 q 729 796 729 863 q 677 637 729 695 q 528 563 625 578 l 528 559 q 711 476 648 544 q 774 281 774 407 q 752 152 774 207 q 690 60 731 97 q 591 4 649 23 q 458 -14 532 -14 q 337 -3 393 -14 q 241 28 282 7 l 241 -334 l 118 -334 l 118 743 q 141 887 118 826 q 205 986 164 947 q 303 1044 246 1025 q 427 1063 360 1063 m 427 960 q 355 950 389 960 q 296 913 321 939 q 256 845 271 888 q 241 737 241 802 l 241 142 q 289 120 263 130 q 344 102 316 110 q 399 92 371 95 q 452 88 427 88 q 544 101 506 88 q 605 141 581 115 q 640 205 629 167 q 650 291 650 243 q 632 385 650 345 q 581 451 614 425 q 504 490 549 477 q 405 502 459 502 l 336 502 l 336 605 l 388 605 q 483 618 443 605 q 550 656 523 632 q 589 715 576 681 q 601 791 601 750 q 588 865 601 834 q 552 918 575 897 q 497 950 529 939 q 427 960 465 960 "},"≠":{x_min:69,x_max:696,ha:765,o:"m 237 300 l 69 300 l 69 402 l 285 402 l 367 577 l 69 577 l 69 679 l 414 679 l 504 870 l 598 830 l 526 679 l 696 679 l 696 577 l 479 577 l 396 402 l 696 402 l 696 300 l 349 300 l 260 111 l 167 150 l 237 300 "},"‼":{x_min:100,x_max:587.265625,ha:688,o:"m 543 280 l 461 280 l 427 992 l 577 992 l 543 280 m 415 74 q 421 118 415 100 q 440 147 428 136 q 467 163 451 158 q 501 169 482 169 q 534 163 518 169 q 562 147 550 158 q 580 118 573 136 q 587 74 587 100 q 580 31 587 49 q 562 2 573 13 q 534 -14 550 -9 q 501 -20 518 -20 q 467 -14 482 -20 q 440 2 451 -9 q 421 31 428 13 q 415 74 415 49 m 228 280 l 146 280 l 112 992 l 262 992 l 228 280 m 100 74 q 106 118 100 100 q 125 147 113 136 q 152 163 136 158 q 186 169 167 169 q 219 163 203 169 q 247 147 235 158 q 265 118 258 136 q 272 74 272 100 q 265 31 272 49 q 247 2 258 13 q 219 -14 235 -9 q 186 -20 203 -20 q 152 -14 167 -20 q 125 2 136 -9 q 106 31 113 13 q 100 74 100 49 "},"¥":{x_min:20,x_max:751,ha:765,o:"m 384 490 l 621 992 l 751 992 l 490 471 l 652 471 l 652 363 l 448 363 l 448 271 l 652 271 l 652 163 l 448 163 l 448 0 l 322 0 l 322 163 l 118 163 l 118 271 l 322 271 l 322 363 l 118 363 l 118 471 l 276 471 l 20 992 l 150 992 l 384 490 "},"Ĥ":{x_min:135,x_max:839,ha:974,o:"m 839 0 l 712 0 l 712 462 l 261 462 l 261 0 l 135 0 l 135 992 l 261 992 l 261 574 l 712 574 l 712 992 l 839 992 l 839 0 m 712 1071 l 630 1071 q 558 1126 595 1093 q 487 1196 522 1159 q 414 1126 450 1159 q 344 1071 378 1093 l 262 1071 l 262 1089 q 302 1134 279 1108 q 348 1187 325 1160 q 391 1242 371 1215 q 421 1293 411 1269 l 552 1293 q 582 1242 562 1269 q 625 1187 602 1215 q 671 1134 648 1160 q 712 1089 695 1108 l 712 1071 "},U:{x_min:125,x_max:845,ha:970,o:"m 845 993 l 845 349 q 822 205 845 272 q 755 90 800 139 q 641 13 709 41 q 481 -14 573 -14 q 327 12 394 -14 q 216 86 261 38 q 148 202 171 134 q 125 352 125 269 l 125 991 l 251 991 l 251 346 q 309 162 251 227 q 487 97 368 97 q 591 115 548 97 q 663 167 635 133 q 704 246 690 200 q 718 347 718 292 l 718 993 l 845 993 "},"Ñ":{x_min:135,x_max:878,ha:1013,o:"m 878 0 l 724 0 l 253 821 l 248 821 q 255 717 252 768 q 259 624 257 673 q 261 538 261 576 l 261 0 l 135 0 l 135 992 l 288 992 l 757 174 l 762 174 q 757 276 759 226 q 755 321 756 298 q 753 366 754 343 q 752 410 752 389 q 751 449 751 431 l 751 992 l 878 992 l 878 0 m 614 1072 q 560 1083 587 1072 q 508 1110 534 1095 q 458 1136 482 1124 q 413 1148 434 1148 q 366 1130 382 1148 q 340 1070 350 1112 l 270 1070 q 284 1144 273 1111 q 313 1201 295 1177 q 356 1237 331 1224 q 413 1250 381 1250 q 469 1238 441 1250 q 522 1211 496 1226 q 571 1185 548 1197 q 614 1173 595 1173 q 660 1191 645 1173 q 686 1251 676 1209 l 758 1251 q 743 1177 754 1210 q 714 1121 732 1144 q 671 1084 696 1097 q 614 1072 646 1072 "},F:{x_min:135,x_max:649,ha:682,o:"m 261 0 l 135 0 l 135 992 l 649 992 l 649 880 l 261 880 l 261 531 l 623 531 l 623 419 l 261 419 l 261 0 "},"ϑ":{x_min:7.125,x_max:815.203125,ha:834,o:"m 594 664 q 566 793 585 736 q 521 888 547 850 q 464 948 495 927 q 401 968 433 968 q 321 939 350 968 q 292 861 292 909 q 307 788 292 824 q 359 726 323 753 q 452 681 394 698 q 594 664 509 664 m 722 575 q 724 540 723 560 q 725 499 725 520 q 703 296 725 390 q 637 133 681 202 q 527 25 594 64 q 372 -14 461 -14 q 247 4 297 -14 q 169 55 198 23 q 128 129 140 87 q 117 218 117 172 q 120 277 117 245 q 127 338 123 308 q 134 394 131 368 q 138 435 138 419 q 127 477 138 466 q 95 488 117 488 q 61 483 79 488 q 32 471 43 478 l 7 560 q 66 581 32 572 q 136 591 100 591 q 194 581 171 591 q 233 555 218 572 q 255 515 248 538 q 261 465 261 492 q 258 412 261 441 q 250 351 254 383 q 243 287 247 320 q 240 224 240 254 q 247 170 240 195 q 270 127 254 145 q 313 98 287 109 q 379 88 340 88 q 546 192 490 88 q 601 503 601 296 q 600 540 601 519 q 598 575 600 561 q 398 601 480 576 q 265 667 316 626 q 191 759 214 707 q 169 865 169 810 q 182 947 169 909 q 222 1012 195 985 q 293 1055 250 1040 q 396 1071 336 1071 q 521 1042 466 1071 q 615 961 576 1014 q 680 833 655 908 q 718 664 706 757 l 815 664 l 815 575 l 722 575 "},"Ќ":{x_min:135,x_max:804.25,ha:804,o:"m 804 0 l 655 0 l 261 502 l 261 0 l 135 0 l 135 992 l 261 992 l 261 511 l 644 992 l 784 992 l 401 515 l 804 0 m 359 1089 q 389 1134 373 1108 q 421 1187 405 1160 q 452 1242 437 1215 q 477 1293 466 1269 l 626 1293 l 626 1278 q 593 1233 615 1260 q 546 1175 572 1205 q 492 1118 520 1146 q 441 1071 464 1089 l 359 1071 l 359 1089 "},"å":{x_min:64,x_max:626,ha:737,o:"m 536 0 l 511 102 l 505 102 q 461 50 483 72 q 412 13 439 28 q 353 -7 386 0 q 278 -14 321 -14 q 193 0 232 -14 q 125 40 153 12 q 80 109 96 67 q 64 208 64 151 q 142 379 64 320 q 379 445 220 439 l 503 450 l 503 496 q 494 572 503 541 q 465 620 484 602 q 419 647 447 639 q 357 655 392 655 q 253 639 301 655 q 160 599 204 623 l 117 692 q 228 739 167 720 q 357 758 290 758 q 477 744 427 758 q 560 700 527 730 q 609 623 593 669 q 626 509 626 576 l 626 0 l 536 0 m 310 88 q 386 101 351 88 q 447 140 422 114 q 488 205 473 166 q 502 298 502 245 l 502 365 l 405 360 q 303 346 345 357 q 237 316 262 336 q 202 270 213 297 q 191 208 191 243 q 224 117 191 146 q 310 88 257 88 m 531 989 q 519 927 531 954 q 486 880 507 899 q 437 851 465 861 q 375 842 408 842 q 313 851 341 842 q 265 880 285 861 q 234 926 245 899 q 224 988 224 953 q 234 1049 224 1022 q 265 1095 245 1076 q 313 1124 285 1114 q 375 1134 341 1134 q 436 1124 408 1134 q 486 1095 465 1114 q 519 1050 507 1076 q 531 989 531 1023 m 456 988 q 434 1044 456 1024 q 377 1064 412 1064 q 320 1044 342 1064 q 298 988 298 1024 q 318 931 298 951 q 377 911 338 911 q 434 931 412 911 q 456 988 456 951 "},"Ϋ":{x_min:-.25,x_max:731.25,ha:732,o:"m 364 490 l 595 992 l 731 992 l 428 386 l 428 0 l 302 0 l 302 379 l 0 992 l 137 992 l 364 490 m 174 1174 q 192 1227 174 1211 q 239 1244 211 1244 q 285 1227 265 1244 q 304 1174 304 1210 q 285 1121 304 1138 q 239 1105 265 1105 q 192 1121 211 1105 q 174 1174 174 1138 m 428 1174 q 447 1227 428 1211 q 493 1244 466 1244 q 518 1239 506 1244 q 539 1227 530 1235 q 553 1206 548 1218 q 559 1174 559 1193 q 539 1121 559 1138 q 493 1105 519 1105 q 447 1121 466 1105 q 428 1174 428 1138 "},0:{x_min:66,x_max:700,ha:765,o:"m 700 496 q 682 281 700 376 q 627 121 665 186 q 528 20 588 55 q 381 -14 467 -14 q 242 20 301 -14 q 143 121 182 55 q 85 281 104 186 q 66 496 66 376 q 83 711 66 616 q 138 872 100 806 q 236 972 175 937 q 381 1007 296 1007 q 522 972 462 1007 q 621 873 581 938 q 680 712 660 807 q 700 496 700 617 m 191 497 q 201 319 191 395 q 234 192 211 243 q 292 116 256 142 q 381 91 329 91 q 470 116 433 91 q 530 191 506 141 q 564 318 553 241 q 574 497 574 394 q 564 675 574 599 q 530 801 553 751 q 470 876 506 851 q 381 901 433 901 q 292 876 329 901 q 234 801 256 851 q 201 675 211 751 q 191 497 191 599 "},"ō":{x_min:77,x_max:725,ha:802,o:"m 725 373 q 702 208 725 280 q 637 86 679 135 q 534 11 594 37 q 398 -14 474 -14 q 270 11 329 -14 q 168 86 211 37 q 101 208 125 135 q 77 373 77 280 q 99 537 77 465 q 164 657 122 608 q 267 732 206 707 q 403 758 327 758 q 531 732 472 758 q 633 657 590 707 q 700 537 676 608 q 725 373 725 465 m 204 373 q 250 159 204 231 q 401 88 297 88 q 551 159 506 88 q 597 373 597 231 q 551 585 597 515 q 400 655 504 655 q 250 585 295 655 q 204 373 204 515 m 206 943 l 596 943 l 596 842 l 206 842 l 206 943 "},"”":{x_min:16,x_max:489,ha:504,o:"m 219 992 l 228 977 q 205 898 218 939 q 176 815 192 857 q 143 731 160 772 q 108 652 125 690 l 16 652 q 38 737 26 692 q 60 827 49 782 q 79 913 70 871 q 94 992 88 956 l 219 992 m 480 992 l 489 977 q 466 898 479 939 q 437 815 453 857 q 404 731 421 772 q 369 652 386 690 l 277 652 q 299 737 287 692 q 321 827 310 782 q 340 913 331 871 q 355 992 349 956 l 480 992 "},"ö":{x_min:77,x_max:725,ha:802,o:"m 725 373 q 702 208 725 280 q 637 86 679 135 q 534 11 594 37 q 398 -14 474 -14 q 270 11 329 -14 q 168 86 211 37 q 101 208 125 135 q 77 373 77 280 q 99 537 77 465 q 164 657 122 608 q 267 732 206 707 q 403 758 327 758 q 531 732 472 758 q 633 657 590 707 q 700 537 676 608 q 725 373 725 465 m 204 373 q 250 159 204 231 q 401 88 297 88 q 551 159 506 88 q 597 373 597 231 q 551 585 597 515 q 400 655 504 655 q 250 585 295 655 q 204 373 204 515 m 204 945 q 222 998 204 982 q 269 1015 241 1015 q 315 998 295 1015 q 334 945 334 981 q 315 892 334 909 q 269 876 295 876 q 222 892 241 876 q 204 945 204 909 m 458 945 q 477 998 458 982 q 523 1015 496 1015 q 548 1010 536 1015 q 569 998 560 1006 q 583 977 578 989 q 589 945 589 964 q 569 892 589 909 q 523 876 549 876 q 477 892 496 876 q 458 945 458 909 "},"ć":{x_min:77,x_max:596,ha:643,o:"m 402 -14 q 274 7 334 -14 q 171 75 215 28 q 102 193 127 121 q 77 367 77 266 q 102 548 77 474 q 173 669 128 623 q 278 736 218 715 q 408 758 339 758 q 511 746 461 758 q 596 718 562 735 l 559 614 q 524 627 543 621 q 485 638 505 633 q 445 647 465 644 q 408 650 425 650 q 253 581 302 650 q 204 369 204 513 q 253 160 204 226 q 402 93 302 93 q 502 106 457 93 q 583 135 546 118 l 583 26 q 504 -3 546 6 q 402 -14 463 -14 m 316 860 q 346 905 330 879 q 378 958 362 931 q 409 1013 394 986 q 434 1064 423 1040 l 583 1064 l 583 1049 q 550 1004 572 1031 q 503 946 529 976 q 449 889 477 917 q 398 842 421 860 l 316 842 l 316 860 "},"þ":{x_min:118,x_max:737,ha:814,o:"m 241 644 q 276 688 257 667 q 322 724 296 709 q 381 748 348 739 q 454 758 413 758 q 570 733 518 758 q 659 660 622 709 q 716 540 696 612 q 737 373 737 468 q 716 205 737 277 q 659 84 696 133 q 570 10 622 35 q 454 -14 518 -14 q 381 -5 414 -14 q 323 18 349 3 q 277 52 297 32 q 241 93 257 72 l 233 93 q 237 49 235 70 q 240 13 238 32 q 241 -16 241 -5 l 241 -334 l 118 -334 l 118 1055 l 241 1055 l 241 744 l 236 644 l 241 644 m 430 655 q 343 639 379 655 q 285 592 307 624 q 253 513 263 560 q 241 401 242 465 l 241 373 q 250 251 241 304 q 281 162 259 198 q 340 107 303 125 q 431 88 377 88 q 566 162 523 88 q 609 374 609 236 q 566 585 609 515 q 430 655 523 655 "},"]":{x_min:35,x_max:310,ha:421,o:"m 35 -118 l 186 -118 l 186 890 l 35 890 l 35 992 l 310 992 l 310 -220 l 35 -220 l 35 -118 "},"А":{x_min:-.25,x_max:844.25,ha:844,o:"m 715 0 l 606 307 l 237 307 l 127 0 l 0 0 l 364 996 l 479 996 l 844 0 l 715 0 m 566 419 l 466 706 q 456 736 462 719 q 444 774 450 754 q 432 817 438 795 q 421 860 426 839 q 410 816 416 839 q 397 773 404 794 q 386 735 391 752 q 376 706 380 718 l 277 419 l 566 419 "},"′":{x_min:90,x_max:223.609375,ha:314,o:"m 223 992 l 195 634 l 117 634 l 90 992 l 223 992 "},"Ы":{x_min:135,x_max:1008,ha:1143,o:"m 729 290 q 708 170 729 224 q 645 79 688 117 q 537 20 602 41 q 380 0 471 0 l 135 0 l 135 992 l 261 992 l 261 574 l 362 574 q 536 551 465 574 q 648 490 606 529 q 710 400 691 452 q 729 290 729 349 m 261 107 l 368 107 q 540 152 485 107 q 595 290 595 197 q 579 370 595 337 q 533 424 564 403 q 456 453 503 444 q 347 462 410 462 l 261 462 l 261 107 m 881 0 l 881 992 l 1008 992 l 1008 0 l 881 0 "},"ẁ":{x_min:13.75,x_max:1022.25,ha:1036,o:"m 683 0 l 570 417 q 563 445 567 430 q 555 477 559 460 q 546 512 551 494 q 538 546 542 529 q 518 628 528 586 l 514 628 q 496 546 505 585 q 480 476 488 512 q 464 415 471 440 l 347 0 l 204 0 l 13 745 l 143 745 l 232 348 q 245 282 239 318 q 258 211 252 246 q 269 146 264 177 q 277 95 274 115 l 281 95 q 290 142 284 113 q 303 205 296 172 q 317 270 310 238 q 331 324 325 302 l 453 745 l 586 745 l 702 324 q 716 270 709 301 q 732 207 724 239 q 745 145 739 175 q 754 95 751 115 l 758 95 q 764 142 760 113 q 775 207 769 172 q 788 279 781 242 q 803 348 795 316 l 896 745 l 1022 745 l 829 0 l 683 0 m 585 842 l 503 842 q 451 889 479 860 q 397 946 423 917 q 350 1004 371 976 q 318 1049 328 1031 l 318 1064 l 466 1064 q 492 1013 477 1040 q 522 958 506 986 q 554 905 538 931 q 585 860 570 879 l 585 842 "},"ĭ":{x_min:-23,x_max:385,ha:359,o:"m 241 0 l 118 0 l 118 745 l 241 745 l 241 0 m 385 1030 q 367 954 382 988 q 326 894 352 920 q 263 855 300 869 q 178 842 226 842 q 91 855 128 842 q 30 893 54 868 q -7 952 5 918 q -23 1030 -20 987 l 51 1030 q 63 983 54 1000 q 89 957 73 965 q 128 946 105 948 q 181 943 151 943 q 227 946 205 943 q 267 959 249 949 q 296 985 284 968 q 310 1030 307 1002 l 385 1030 "},8:{x_min:72,x_max:694,ha:765,o:"m 383 1007 q 490 992 440 1007 q 579 947 540 977 q 639 873 617 917 q 662 768 662 828 q 648 686 662 723 q 610 620 634 650 q 554 568 587 591 q 483 525 521 544 q 561 478 523 504 q 628 420 598 453 q 675 348 657 388 q 694 258 694 308 q 671 145 694 196 q 607 59 648 94 q 509 5 566 24 q 383 -14 452 -14 q 250 4 308 -14 q 152 57 192 22 q 92 141 113 91 q 72 253 72 190 q 87 344 72 304 q 128 418 102 385 q 189 476 154 451 q 264 520 225 501 q 202 566 231 541 q 151 621 172 590 q 117 688 130 651 q 105 770 105 725 q 127 873 105 829 q 188 947 150 917 q 277 992 227 977 q 383 1007 328 1007 m 191 253 q 202 187 191 217 q 236 136 213 157 q 295 102 259 114 q 379 91 330 91 q 464 102 427 91 q 525 136 500 114 q 562 189 550 158 q 574 258 574 220 q 561 322 574 293 q 523 374 547 350 q 463 420 498 399 q 385 463 428 442 l 364 472 q 235 379 278 432 q 191 253 191 327 m 381 901 q 266 866 309 901 q 224 762 224 830 q 236 696 224 724 q 269 647 248 669 q 320 609 290 626 q 384 576 349 592 q 446 608 417 590 q 496 647 475 625 q 530 698 518 670 q 542 762 542 726 q 499 866 542 830 q 381 901 456 901 "},R:{x_min:135,x_max:803.25,ha:819,o:"m 261 410 l 261 0 l 135 0 l 135 992 l 376 992 q 642 922 556 992 q 729 710 729 852 q 712 607 729 651 q 668 531 695 563 q 605 479 640 500 q 533 444 570 458 l 803 0 l 654 0 l 416 410 l 261 410 m 261 517 l 371 517 q 473 529 431 517 q 543 564 516 541 q 582 623 570 588 q 595 704 595 658 q 581 787 595 753 q 540 842 567 821 q 469 874 512 864 q 368 884 426 884 l 261 884 l 261 517 "},"Ż":{x_min:56,x_max:693,ha:749,o:"m 693 0 l 56 0 l 56 97 l 537 880 l 70 880 l 70 992 l 679 992 l 679 894 l 197 111 l 693 111 l 693 0 m 310 1174 q 330 1233 310 1215 q 381 1252 351 1252 q 410 1247 396 1252 q 433 1233 423 1243 q 448 1209 442 1224 q 454 1174 454 1195 q 433 1116 454 1135 q 381 1097 411 1097 q 330 1115 351 1097 q 310 1174 310 1134 "},"ħ":{x_min:12.1875,x_max:707,ha:818,o:"m 583 0 l 583 451 q 547 583 583 539 q 436 627 512 627 q 343 609 381 627 q 283 557 306 592 q 251 473 261 523 q 241 357 241 422 l 241 0 l 118 0 l 118 843 l 12 843 l 12 932 l 118 932 l 118 1055 l 241 1055 l 241 932 l 498 932 l 498 843 l 241 843 l 241 715 l 236 616 l 242 616 q 283 666 259 645 q 334 702 306 687 q 393 723 362 716 q 457 730 424 730 q 644 665 581 730 q 707 458 707 600 l 707 0 l 583 0 "},"õ":{x_min:77,x_max:725,ha:802,o:"m 725 373 q 702 208 725 280 q 637 86 679 135 q 534 11 594 37 q 398 -14 474 -14 q 270 11 329 -14 q 168 86 211 37 q 101 208 125 135 q 77 373 77 280 q 99 537 77 465 q 164 657 122 608 q 267 732 206 707 q 403 758 327 758 q 531 732 472 758 q 633 657 590 707 q 700 537 676 608 q 725 373 725 465 m 204 373 q 250 159 204 231 q 401 88 297 88 q 551 159 506 88 q 597 373 597 231 q 551 585 597 515 q 400 655 504 655 q 250 585 295 655 q 204 373 204 515 m 499 843 q 445 854 472 843 q 393 881 419 866 q 343 907 367 895 q 298 919 319 919 q 251 901 267 919 q 225 841 235 883 l 155 841 q 169 915 158 882 q 198 972 180 948 q 241 1008 216 995 q 298 1021 266 1021 q 354 1009 326 1021 q 407 982 381 997 q 456 956 433 968 q 499 944 480 944 q 545 962 530 944 q 571 1022 561 980 l 643 1022 q 628 948 639 981 q 599 892 617 915 q 556 855 581 868 q 499 843 531 843 "},"˙":{x_min:109,x_max:253.46875,ha:359,o:"m 109 945 q 129 1004 109 986 q 180 1023 150 1023 q 209 1018 195 1023 q 232 1004 222 1014 q 247 980 241 995 q 253 945 253 966 q 232 887 253 906 q 180 868 210 868 q 129 886 150 868 q 109 945 109 905 "},"ê":{x_min:77,x_max:673,ha:743,o:"m 412 -14 q 276 11 337 -14 q 170 84 214 36 q 101 203 125 132 q 77 366 77 274 q 99 531 77 458 q 162 654 121 604 q 259 731 202 705 q 384 758 316 758 q 505 733 451 758 q 595 665 558 709 q 653 560 633 621 q 673 423 673 498 l 673 346 l 204 346 q 259 155 207 216 q 413 93 311 93 q 477 97 448 93 q 534 107 507 100 q 587 123 561 113 q 639 145 613 133 l 639 35 q 586 13 612 22 q 533 -2 560 3 q 476 -11 505 -8 q 412 -14 446 -14 m 384 655 q 260 602 306 655 q 207 449 214 549 l 545 449 q 536 533 545 495 q 507 598 526 571 q 457 640 487 625 q 384 655 427 655 m 602 842 l 520 842 q 448 897 485 864 q 377 967 412 930 q 304 897 340 930 q 234 842 268 864 l 152 842 l 152 860 q 192 905 169 879 q 238 958 215 931 q 281 1013 261 986 q 311 1064 301 1040 l 442 1064 q 472 1013 452 1040 q 515 958 492 986 q 561 905 538 931 q 602 860 585 879 l 602 842 "},"″":{x_min:90,x_max:468.609375,ha:558,o:"m 223 992 l 195 634 l 117 634 l 90 992 l 223 992 m 468 992 l 440 634 l 362 634 l 335 992 l 468 992 "},"„":{x_min:43,x_max:517,ha:608,o:"m 246 161 l 256 145 q 233 67 246 108 q 204 -15 220 26 q 170 -99 188 -57 q 136 -179 153 -141 l 43 -179 q 66 -92 54 -137 q 88 -3 77 -48 q 107 82 98 40 q 122 161 116 125 l 246 161 m 508 161 l 517 145 q 494 67 507 108 q 465 -15 481 26 q 432 -99 449 -57 q 397 -179 414 -141 l 305 -179 q 327 -92 315 -137 q 349 -3 338 -48 q 368 82 359 40 q 383 161 377 125 l 508 161 "},"ч":{x_min:104,x_max:693,ha:811,o:"m 227 745 l 227 466 q 352 348 227 348 q 410 353 382 348 q 462 368 437 358 q 514 392 488 377 q 569 427 541 407 l 569 745 l 693 745 l 693 0 l 569 0 l 569 332 q 512 295 539 311 q 456 268 485 279 q 395 251 427 257 q 324 246 363 246 q 230 261 271 246 q 161 306 188 277 q 118 373 133 334 q 104 458 104 412 l 104 745 l 227 745 "},"δ":{x_min:75,x_max:725,ha:802,o:"m 360 635 q 291 683 322 657 q 236 737 259 708 q 201 800 214 767 q 189 872 189 833 q 206 956 189 921 q 254 1016 223 992 q 328 1051 286 1039 q 421 1063 370 1063 q 505 1056 467 1063 q 576 1038 543 1049 q 636 1015 609 1028 q 687 989 663 1001 l 637 890 q 590 916 615 903 q 538 938 565 928 q 479 954 510 948 q 413 960 448 960 q 364 952 385 960 q 331 933 344 945 q 311 904 317 920 q 305 869 305 887 q 314 823 305 844 q 344 781 324 802 q 398 738 364 760 q 479 689 431 716 q 583 619 537 655 q 660 539 629 582 q 708 447 691 496 q 725 337 725 397 q 701 185 725 251 q 635 75 678 120 q 531 8 592 31 q 397 -14 471 -14 q 268 6 327 -14 q 166 67 209 27 q 99 164 123 106 q 75 296 75 222 q 97 423 75 368 q 159 520 120 479 q 249 590 197 562 q 360 635 301 618 m 597 325 q 587 410 597 372 q 557 478 577 448 q 510 533 538 508 q 446 579 482 557 q 363 548 407 568 q 284 495 320 528 q 225 413 249 462 q 202 294 202 363 q 215 211 202 249 q 253 146 228 173 q 314 103 278 118 q 395 88 350 88 q 545 149 492 88 q 597 325 597 210 "},"Â":{x_min:-.25,x_max:844.25,ha:844,o:"m 715 0 l 606 307 l 237 307 l 127 0 l 0 0 l 364 996 l 479 996 l 844 0 l 715 0 m 566 419 l 466 706 q 456 736 462 719 q 444 774 450 754 q 432 817 438 795 q 421 860 426 839 q 410 816 416 839 q 397 773 404 794 q 386 735 391 752 q 376 706 380 718 l 277 419 l 566 419 m 647 1071 l 565 1071 q 493 1126 530 1093 q 422 1196 457 1159 q 349 1126 385 1159 q 279 1071 313 1093 l 197 1071 l 197 1089 q 237 1134 214 1108 q 283 1187 260 1160 q 326 1242 306 1215 q 356 1293 346 1269 l 487 1293 q 517 1242 497 1269 q 560 1187 537 1215 q 606 1134 583 1160 q 647 1089 630 1108 l 647 1071 "},"Į":{x_min:55.34375,x_max:414.8125,ha:471,o:"m 414 0 l 55 0 l 55 69 l 172 96 l 172 895 l 55 922 l 55 992 l 414 992 l 414 922 l 298 895 l 298 96 l 414 69 l 414 0 m 224 -161 q 242 -206 224 -191 q 284 -220 260 -220 q 317 -218 301 -220 q 343 -214 333 -217 l 343 -291 q 303 -299 325 -296 q 262 -302 282 -302 q 160 -266 194 -302 q 127 -170 127 -231 q 136 -116 127 -142 q 162 -69 146 -91 q 195 -30 177 -48 q 231 0 214 -12 l 318 0 q 224 -161 224 -90 "
},"ω":{x_min:77,x_max:970,ha:1046,o:"m 332 -14 q 223 13 271 -14 q 143 91 176 41 q 93 209 110 140 q 77 360 77 278 q 82 464 77 415 q 97 558 87 512 q 124 650 108 604 q 162 745 140 696 l 289 745 q 251 649 267 695 q 225 558 235 604 q 209 464 214 512 q 204 360 204 416 q 214 243 204 294 q 242 158 224 192 q 285 106 260 123 q 340 88 310 88 q 394 102 371 88 q 432 140 417 116 q 454 198 447 165 q 462 270 462 231 l 462 478 l 585 478 l 585 270 q 618 135 585 182 q 706 88 651 88 q 761 106 736 88 q 804 158 786 123 q 832 243 823 192 q 842 360 842 294 q 837 464 842 416 q 821 558 832 512 q 795 649 811 604 q 757 745 779 695 l 884 745 q 922 650 906 696 q 949 558 938 604 q 964 464 959 512 q 970 360 970 415 q 953 209 970 278 q 903 91 936 140 q 823 13 871 41 q 714 -14 775 -14 q 595 15 642 -14 q 527 106 548 45 l 520 106 q 452 15 499 45 q 332 -14 404 -14 "},"Ţ":{x_min:14,x_max:706,ha:721,o:"m 423 0 l 297 0 l 297 880 l 14 880 l 14 992 l 706 992 l 706 880 l 423 880 l 423 0 m 244 -288 q 260 -246 251 -271 q 277 -191 269 -220 q 291 -135 285 -163 q 300 -85 298 -107 l 423 -85 l 423 -98 q 408 -141 418 -115 q 382 -197 397 -167 q 348 -255 367 -226 q 310 -307 330 -284 l 244 -307 l 244 -288 "},"´":{x_min:267,x_max:534,ha:802,o:"m 267 860 q 297 905 281 879 q 329 958 313 931 q 360 1013 345 986 q 385 1064 374 1040 l 534 1064 l 534 1049 q 501 1004 523 1031 q 454 946 480 976 q 400 889 428 917 q 349 842 372 860 l 267 842 l 267 860 "},"Ĉ":{x_min:85,x_max:798,ha:838,o:"m 538 894 q 406 867 465 894 q 305 788 347 839 q 241 662 264 736 q 218 496 218 588 q 238 326 218 400 q 298 200 258 251 q 398 123 338 150 q 538 97 458 97 q 652 108 598 97 q 760 135 707 120 l 760 26 q 707 8 733 15 q 651 -4 680 0 q 590 -11 622 -9 q 517 -14 557 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 497 85 382 q 114 703 85 609 q 201 864 144 796 q 343 968 258 931 q 538 1006 428 1006 q 677 991 611 1006 q 798 947 744 976 l 745 841 q 652 879 702 863 q 538 894 601 894 m 747 1071 l 665 1071 q 593 1126 630 1093 q 522 1196 557 1159 q 449 1126 485 1159 q 379 1071 413 1093 l 297 1071 l 297 1089 q 337 1134 314 1108 q 383 1187 360 1160 q 426 1242 406 1215 q 456 1293 446 1269 l 587 1293 q 617 1242 597 1269 q 660 1187 637 1215 q 706 1134 683 1160 q 747 1089 730 1108 l 747 1071 "},"И":{x_min:136,x_max:879,ha:1013,o:"m 136 992 l 262 992 l 262 449 q 261 410 262 431 q 260 366 261 389 q 259 321 260 343 q 257 276 258 298 q 251 174 254 226 l 256 174 l 725 992 l 879 992 l 879 0 l 752 0 l 752 538 q 754 624 752 576 q 759 717 756 673 q 765 821 762 768 l 760 821 l 289 0 l 136 0 l 136 992 "},"Љ":{x_min:0,x_max:1193,ha:1264,o:"m 1193 290 q 1172 170 1193 224 q 1109 79 1152 117 q 1000 20 1066 41 q 843 0 934 0 l 625 0 l 625 880 l 431 880 q 410 721 420 804 q 388 558 399 638 q 366 406 377 478 q 343 279 354 334 q 310 154 329 209 q 262 61 291 99 q 194 4 234 24 q 98 -16 154 -16 q 46 -10 73 -16 q 0 1 20 -5 l 0 111 q 35 97 15 102 q 76 91 54 91 q 129 113 108 91 q 164 167 150 134 q 187 239 179 200 q 204 315 196 279 q 223 421 213 354 q 247 577 234 488 q 275 771 261 665 q 305 992 290 877 l 751 992 l 751 574 l 825 574 q 999 551 928 574 q 1112 490 1069 529 q 1174 400 1155 452 q 1193 290 1193 349 m 751 107 l 831 107 q 1004 152 948 107 q 1059 290 1059 197 q 1043 370 1059 337 q 997 424 1028 403 q 920 453 966 444 q 810 462 873 462 l 751 462 l 751 107 "},"р":{x_min:118,x_max:737,ha:814,o:"m 454 -14 q 381 -5 414 -14 q 323 18 349 3 q 277 52 297 32 q 241 93 257 72 l 233 93 q 237 49 235 70 q 240 13 238 32 q 241 -16 241 -5 l 241 -334 l 118 -334 l 118 745 l 218 745 l 236 644 l 241 644 q 276 688 257 667 q 322 724 296 709 q 381 748 348 739 q 454 758 413 758 q 570 733 518 758 q 659 660 622 709 q 716 540 696 612 q 737 373 737 468 q 716 205 737 277 q 659 84 696 133 q 570 10 622 35 q 454 -14 518 -14 m 430 655 q 343 639 379 655 q 285 592 307 624 q 253 513 263 560 q 241 401 242 465 l 241 373 q 250 251 241 304 q 281 162 259 198 q 340 107 303 125 q 431 88 377 88 q 566 162 523 88 q 609 374 609 236 q 566 585 609 515 q 430 655 523 655 "},"Ω":{x_min:53.0625,x_max:980.9375,ha:1031,o:"m 517 895 q 384 872 439 895 q 292 805 328 849 q 239 699 256 762 q 222 556 222 636 q 234 425 222 488 q 273 304 246 362 q 345 194 301 246 q 455 99 390 143 l 455 0 l 53 0 l 53 111 l 321 111 q 229 189 271 143 q 155 292 186 235 q 106 416 124 349 q 89 559 89 484 q 116 743 89 661 q 198 884 143 826 q 332 975 252 943 q 517 1007 412 1007 q 701 975 622 1007 q 835 884 781 943 q 917 743 890 826 q 945 559 945 661 q 927 416 945 484 q 878 292 909 349 q 805 189 847 235 q 712 111 762 143 l 980 111 l 980 0 l 579 0 l 579 99 q 688 194 643 143 q 760 304 732 246 q 799 425 787 362 q 811 556 811 488 q 794 699 811 636 q 741 805 777 762 q 649 872 705 849 q 517 895 594 895 "},"т":{x_min:28,x_max:584,ha:612,o:"m 584 642 l 367 642 l 367 0 l 244 0 l 244 642 l 28 642 l 28 745 l 584 745 l 584 642 "},"П":{x_min:135,x_max:826,ha:960,o:"m 826 0 l 699 0 l 699 880 l 261 880 l 261 0 l 135 0 l 135 992 l 826 992 l 826 0 "},"Ö":{x_min:85,x_max:945,ha:1031,o:"m 945 496 q 917 287 945 382 q 835 126 890 193 q 701 22 781 59 q 515 -14 620 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 498 85 382 q 110 707 85 613 q 190 867 136 801 q 325 970 243 934 q 517 1007 406 1007 q 701 970 622 1007 q 835 867 781 934 q 917 706 890 800 q 945 496 945 612 m 218 497 q 236 330 218 404 q 290 204 253 255 q 382 124 326 152 q 515 97 438 97 q 648 124 593 97 q 741 204 704 152 q 794 330 777 255 q 811 497 811 404 q 794 664 811 590 q 741 789 777 738 q 649 868 705 840 q 517 895 594 895 q 383 868 439 895 q 290 789 327 840 q 236 664 253 738 q 218 497 218 590 m 323 1174 q 341 1227 323 1211 q 388 1244 360 1244 q 434 1227 414 1244 q 453 1174 453 1210 q 434 1121 453 1138 q 388 1105 414 1105 q 341 1121 360 1105 q 323 1174 323 1138 m 577 1174 q 596 1227 577 1211 q 642 1244 615 1244 q 667 1239 655 1244 q 688 1227 679 1235 q 702 1206 697 1218 q 708 1174 708 1193 q 688 1121 708 1138 q 642 1105 668 1105 q 596 1121 615 1105 q 577 1174 577 1138 "},z:{x_min:56,x_max:556.21875,ha:612,o:"m 556 0 l 56 0 l 56 80 l 418 656 l 78 656 l 78 745 l 544 745 l 544 650 l 189 88 l 556 88 l 556 0 "},"™":{x_min:25,x_max:922,ha:1040,o:"m 244 503 l 158 503 l 158 918 l 25 918 l 25 992 l 379 992 l 379 918 l 244 918 l 244 503 m 636 503 l 511 875 l 506 875 q 508 852 507 864 q 509 831 508 841 q 509 812 509 821 q 510 800 510 804 l 510 503 l 424 503 l 424 992 l 552 992 l 673 618 l 801 992 l 922 992 l 922 503 l 835 503 l 835 793 q 836 809 835 799 q 836 831 836 819 q 837 855 837 843 q 838 875 837 867 l 834 875 l 703 503 l 636 503 "},"Θ":{x_min:85,x_max:945,ha:1031,o:"m 334 560 l 696 560 l 696 452 l 334 452 l 334 560 m 945 496 q 917 287 945 382 q 835 126 890 193 q 701 22 781 59 q 515 -14 620 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 498 85 382 q 110 707 85 613 q 190 867 136 801 q 325 970 243 934 q 517 1007 406 1007 q 701 970 622 1007 q 835 867 781 934 q 917 706 890 800 q 945 496 945 612 m 218 497 q 236 330 218 404 q 290 204 253 255 q 382 124 326 152 q 515 97 438 97 q 648 124 593 97 q 741 204 704 152 q 794 330 777 255 q 811 497 811 404 q 794 664 811 590 q 741 789 777 738 q 649 868 705 840 q 517 895 594 895 q 383 868 439 895 q 290 789 327 840 q 236 664 253 738 q 218 497 218 590 "},"Ř":{x_min:135,x_max:803.25,ha:819,o:"m 261 410 l 261 0 l 135 0 l 135 992 l 376 992 q 642 922 556 992 q 729 710 729 852 q 712 607 729 651 q 668 531 695 563 q 605 479 640 500 q 533 444 570 458 l 803 0 l 654 0 l 416 410 l 261 410 m 261 517 l 371 517 q 473 529 431 517 q 543 564 516 541 q 582 623 570 588 q 595 704 595 658 q 581 787 595 753 q 540 842 567 821 q 469 874 512 864 q 368 884 426 884 l 261 884 l 261 517 m 635 1274 q 594 1229 618 1255 q 548 1176 571 1203 q 505 1121 525 1148 q 475 1071 485 1094 l 344 1071 q 314 1121 334 1094 q 271 1176 294 1148 q 225 1229 248 1203 q 185 1274 202 1255 l 185 1293 l 267 1293 q 337 1237 301 1270 q 410 1166 373 1204 q 481 1237 445 1204 q 553 1293 518 1270 l 635 1293 l 635 1274 "},"Ň":{x_min:135,x_max:878,ha:1013,o:"m 878 0 l 724 0 l 253 821 l 248 821 q 255 717 252 768 q 259 624 257 673 q 261 538 261 576 l 261 0 l 135 0 l 135 992 l 288 992 l 757 174 l 762 174 q 757 276 759 226 q 755 321 756 298 q 753 366 754 343 q 752 410 752 389 q 751 449 751 431 l 751 992 l 878 992 l 878 0 m 732 1274 q 691 1229 715 1255 q 645 1176 668 1203 q 602 1121 622 1148 q 572 1071 582 1094 l 441 1071 q 411 1121 431 1094 q 368 1176 391 1148 q 322 1229 345 1203 q 282 1274 299 1255 l 282 1293 l 364 1293 q 434 1237 398 1270 q 507 1166 470 1204 q 578 1237 542 1204 q 650 1293 615 1270 l 732 1293 l 732 1274 "},"É":{x_min:135,x_max:650,ha:733,o:"m 650 0 l 135 0 l 135 992 l 650 992 l 650 880 l 261 880 l 261 574 l 624 574 l 624 462 l 261 462 l 261 111 l 650 111 l 650 0 m 309 1089 q 339 1134 323 1108 q 371 1187 355 1160 q 402 1242 387 1215 q 427 1293 416 1269 l 576 1293 l 576 1278 q 543 1233 565 1260 q 496 1175 522 1205 q 442 1118 470 1146 q 391 1071 414 1089 l 309 1071 l 309 1089 "},"и":{x_min:118,x_max:735,ha:853,o:"m 234 745 l 234 291 l 226 120 l 576 745 l 735 745 l 735 0 l 618 0 l 618 439 l 625 622 l 276 0 l 118 0 l 118 745 l 234 745 "},"³":{x_min:21,x_max:418,ha:460,o:"m 400 852 q 372 764 400 800 q 298 712 345 729 q 388 660 358 697 q 418 571 418 624 q 404 496 418 530 q 362 437 390 461 q 291 399 334 413 q 190 386 249 386 q 101 394 143 386 q 21 423 59 402 l 21 514 q 110 481 64 493 q 192 469 155 469 q 290 497 260 469 q 321 575 321 525 q 283 648 321 625 q 179 671 246 671 l 111 671 l 111 745 l 179 745 q 273 771 244 745 q 303 839 303 797 q 296 876 303 860 q 277 901 289 891 q 248 915 264 911 q 213 920 232 920 q 138 907 172 920 q 69 870 105 894 l 22 935 q 62 963 41 951 q 106 985 83 976 q 155 998 129 993 q 210 1004 180 1004 q 293 992 257 1004 q 352 961 328 981 q 388 913 376 940 q 400 852 400 885 "},"[":{x_min:111,x_max:386,ha:421,o:"m 386 -220 l 111 -220 l 111 992 l 386 992 l 386 890 l 234 890 l 234 -118 l 386 -118 l 386 -220 "},"ζ":{x_min:77,x_max:593,ha:632,o:"m 118 952 l 118 1055 l 589 1055 l 589 960 q 439 811 502 880 q 334 680 377 741 q 266 567 291 619 q 226 470 240 515 q 208 387 213 425 q 204 317 204 349 q 219 220 204 256 q 263 161 235 183 q 332 128 291 140 q 424 104 373 116 q 504 78 472 94 q 556 43 536 63 q 584 -1 576 23 q 593 -54 593 -25 q 585 -114 593 -84 q 567 -172 578 -144 q 541 -225 555 -200 q 511 -272 526 -250 l 396 -272 q 426 -225 412 -250 q 451 -176 440 -201 q 469 -129 463 -152 q 476 -87 476 -107 q 471 -61 476 -73 q 450 -37 466 -48 q 403 -15 434 -25 q 321 5 373 -4 q 215 39 261 17 q 139 98 170 61 q 92 186 108 135 q 77 307 77 238 q 108 495 77 408 q 191 661 139 582 q 311 813 243 740 q 453 960 380 887 q 392 956 424 958 q 332 953 365 955 q 268 952 299 952 l 118 952 "},"∏":{x_min:135,x_max:895,ha:1030,o:"m 768 -334 l 768 880 l 261 880 l 261 -334 l 135 -334 l 135 992 l 895 992 l 895 -334 l 768 -334 "},"Έ":{x_min:-17,x_max:747,ha:831,o:"m 747 0 l 232 0 l 232 992 l 747 992 l 747 880 l 358 880 l 358 574 l 721 574 l 721 462 l 358 462 l 358 111 l 747 111 l 747 0 m -17 789 q -3 835 -10 809 q 9 889 3 861 q 21 943 16 916 q 30 993 27 970 l 165 993 l 165 978 q 149 936 160 962 q 123 880 138 909 q 90 821 107 850 q 56 771 72 792 l -17 771 l -17 789 "},"Ρ":{x_min:135,x_max:729,ha:800,o:"m 729 701 q 710 582 729 639 q 648 482 691 525 q 536 412 606 438 q 362 386 465 386 l 261 386 l 261 0 l 135 0 l 135 992 l 380 992 q 537 972 471 992 q 645 916 602 953 q 708 825 688 879 q 729 701 729 770 m 261 493 l 347 493 q 456 504 410 493 q 533 539 503 515 q 579 601 564 563 q 595 695 595 640 q 540 837 595 791 q 368 884 485 884 l 261 884 l 261 493 "},"ğ":{x_min:25,x_max:692.484375,ha:720,o:"m 692 745 l 692 668 l 559 649 q 591 588 578 625 q 604 504 604 551 q 588 409 604 453 q 539 333 572 365 q 459 283 507 301 q 348 266 412 266 q 319 266 333 266 q 294 268 304 266 q 271 253 282 261 q 251 233 260 244 q 236 208 242 222 q 230 178 230 194 q 238 148 230 159 q 260 130 246 136 q 293 122 274 124 q 333 120 312 120 l 453 120 q 560 104 516 120 q 631 61 603 88 q 670 -2 658 34 q 683 -80 683 -38 q 660 -186 683 -139 q 593 -266 638 -233 q 478 -316 547 -298 q 314 -334 408 -334 q 187 -319 241 -334 q 96 -278 132 -305 q 42 -213 60 -251 q 25 -128 25 -175 q 38 -57 25 -87 q 73 -4 51 -26 q 125 32 96 17 q 187 53 155 46 q 140 94 158 66 q 122 159 122 122 q 143 231 122 201 q 212 291 165 262 q 158 324 182 303 q 118 373 134 346 q 92 433 101 401 q 83 500 83 466 q 99 608 83 561 q 150 689 116 656 q 233 740 183 722 q 348 758 282 758 q 400 754 373 758 q 445 745 427 750 l 692 745 m 141 -126 q 150 -173 141 -151 q 179 -211 159 -195 q 232 -235 199 -226 q 314 -245 265 -245 q 503 -205 440 -245 q 566 -92 566 -166 q 558 -41 566 -61 q 531 -10 550 -21 q 482 4 512 0 q 407 8 451 8 l 287 8 q 238 3 263 8 q 190 -17 212 -2 q 155 -58 169 -32 q 141 -126 141 -84 m 206 504 q 242 388 206 426 q 344 350 278 350 q 446 388 411 350 q 480 506 480 426 q 445 629 480 590 q 343 669 410 669 q 241 628 277 669 q 206 504 206 587 m 551 1030 q 533 954 548 988 q 492 894 518 920 q 429 855 466 869 q 344 842 392 842 q 257 855 294 842 q 196 893 220 868 q 158 952 171 918 q 143 1030 145 987 l 217 1030 q 229 983 220 1000 q 255 957 239 965 q 294 946 271 948 q 347 943 317 943 q 393 946 371 943 q 433 959 415 949 q 462 985 450 968 q 476 1030 473 1002 l 551 1030 "},"ª":{x_min:46,x_max:392,ha:460,o:"m 328 541 l 308 597 q 283 570 296 582 q 254 549 270 558 q 219 536 238 540 q 177 532 201 532 q 124 540 148 532 q 82 566 100 549 q 55 610 65 584 q 46 671 46 636 q 93 777 46 740 q 236 817 140 813 l 303 820 l 303 841 q 282 909 303 890 q 224 929 262 929 q 162 919 192 929 q 104 894 132 909 l 72 961 q 146 991 106 979 q 226 1003 185 1003 q 351 967 311 1003 q 392 848 392 931 l 392 541 l 328 541 m 253 743 q 196 736 219 741 q 160 720 174 730 q 140 698 146 711 q 134 666 134 684 q 151 620 134 634 q 196 605 168 605 q 238 612 219 605 q 272 632 257 619 q 294 667 286 646 q 303 715 303 687 l 303 746 l 253 743 "},"ї":{x_min:-13,x_max:372,ha:359,o:"m 241 0 l 118 0 l 118 745 l 241 745 l 241 0 m -13 945 q 5 998 -13 982 q 52 1015 24 1015 q 98 998 78 1015 q 117 945 117 981 q 98 892 117 909 q 52 876 78 876 q 5 892 24 876 q -13 945 -13 909 m 241 945 q 260 998 241 982 q 306 1015 279 1015 q 331 1010 319 1015 q 352 998 343 1006 q 366 977 361 989 q 372 945 372 964 q 352 892 372 909 q 306 876 332 876 q 260 892 279 876 q 241 945 241 909 "},T:{x_min:14,x_max:706,ha:721,o:"m 423 0 l 297 0 l 297 880 l 14 880 l 14 992 l 706 992 l 706 880 l 423 880 l 423 0 "},"š":{x_min:61.15625,x_max:564,ha:627,o:"m 564 203 q 544 108 564 149 q 487 40 524 68 q 398 0 450 13 q 281 -14 346 -14 q 154 -2 207 -14 q 61 33 101 9 l 61 146 q 107 125 82 135 q 161 106 133 114 q 219 93 189 98 q 279 88 249 88 q 353 95 323 88 q 403 116 384 103 q 431 150 423 130 q 440 194 440 170 q 433 232 440 215 q 409 265 427 249 q 360 299 391 282 q 280 337 329 316 q 193 378 232 358 q 127 424 154 399 q 86 482 100 449 q 72 560 72 515 q 90 645 72 608 q 143 707 109 682 q 224 745 177 732 q 330 758 272 758 q 451 743 396 758 q 554 706 505 729 l 512 606 q 422 641 468 626 q 329 655 376 655 q 228 632 261 655 q 195 568 195 610 q 203 526 195 544 q 229 493 210 509 q 279 461 248 477 q 358 426 311 445 q 444 385 406 405 q 509 339 482 365 q 549 281 535 314 q 564 203 564 249 m 554 1045 q 513 1000 537 1026 q 467 947 490 974 q 424 892 444 919 q 394 842 404 865 l 263 842 q 233 892 253 865 q 190 947 213 919 q 144 1000 167 974 q 104 1045 121 1026 l 104 1064 l 186 1064 q 256 1008 220 1041 q 329 937 292 975 q 400 1008 364 975 q 472 1064 437 1041 l 554 1064 l 554 1045 "},"є":{x_min:77,x_max:596,ha:643,o:"m 402 -14 q 274 7 334 -14 q 171 75 215 28 q 102 193 127 121 q 77 367 77 266 q 102 548 77 474 q 173 669 128 623 q 278 736 218 715 q 408 758 339 758 q 511 746 461 758 q 596 718 562 735 l 559 614 q 524 627 543 621 q 485 638 505 633 q 445 647 465 644 q 408 650 425 650 q 264 598 314 650 q 205 434 215 547 l 528 434 l 528 331 l 204 331 q 260 149 210 205 q 402 93 309 93 q 502 106 457 93 q 583 135 546 118 l 583 26 q 504 -3 546 6 q 402 -14 463 -14 "},"Þ":{x_min:135,x_max:729,ha:800,o:"m 729 530 q 710 411 729 468 q 648 311 691 354 q 536 241 606 267 q 362 215 465 215 l 261 215 l 261 0 l 135 0 l 135 992 l 261 992 l 261 821 l 380 821 q 537 801 471 821 q 645 745 602 782 q 708 654 688 708 q 729 530 729 599 m 261 322 l 347 322 q 456 333 410 322 q 533 368 503 344 q 579 430 564 392 q 595 524 595 469 q 540 667 595 621 q 368 713 485 713 l 261 713 l 261 322 "},j:{x_min:-46,x_max:252.96875,ha:359,o:"m 44 -334 q -9 -329 12 -334 q -46 -317 -30 -324 l -46 -217 q -10 -227 -28 -224 q 31 -231 8 -231 q 65 -226 50 -231 q 93 -208 81 -221 q 111 -172 105 -194 q 118 -116 118 -150 l 118 745 l 241 745 l 241 -107 q 229 -201 241 -159 q 193 -272 218 -243 q 132 -318 169 -302 q 44 -334 95 -334 m 108 945 q 129 1004 108 986 q 180 1023 149 1023 q 208 1018 195 1023 q 231 1004 221 1014 q 247 980 241 995 q 252 945 252 966 q 231 887 252 906 q 180 868 210 868 q 129 886 149 868 q 108 945 108 905 "},"Σ":{x_min:53,x_max:706,ha:739,o:"m 53 0 l 53 103 l 333 519 l 61 892 l 61 992 l 666 992 l 666 880 l 200 880 l 466 520 l 186 111 l 706 111 l 706 0 l 53 0 "},1:{x_min:121,x_max:482.375,ha:765,o:"m 482 0 l 363 0 l 363 619 q 363 682 363 648 q 364 748 363 715 q 366 811 365 781 q 368 864 367 841 q 348 843 356 852 q 330 826 339 834 q 310 809 320 818 q 286 788 300 800 l 186 706 l 121 789 l 380 992 l 482 992 l 482 0 "},"ϒ":{x_min:-.25,x_max:742,ha:750,o:"m 366 496 q 403 603 383 546 q 445 714 424 660 q 487 815 467 769 q 523 891 507 861 q 554 939 538 918 q 588 973 570 960 q 628 993 606 986 q 677 1000 649 1000 q 715 996 701 1000 q 742 988 730 993 l 742 890 q 722 893 733 892 q 702 895 711 895 q 685 893 695 895 q 665 883 676 890 q 642 860 654 875 q 617 823 630 846 q 595 778 609 806 q 565 711 582 749 q 529 631 548 674 q 493 542 511 587 q 457 452 474 497 q 428 367 441 407 l 428 0 l 302 0 l 302 379 l 0 992 l 137 992 l 366 496 "},"ℓ":{x_min:81,x_max:605,ha:695,o:"m 426 82 q 466 90 447 82 q 500 114 485 97 q 525 158 515 130 q 537 225 535 185 l 605 225 q 589 124 602 168 q 552 49 576 79 q 493 2 528 18 q 410 -14 457 -14 q 334 -1 370 -14 q 271 39 298 11 q 227 114 243 68 q 211 228 211 161 l 211 385 q 147 364 179 374 q 81 347 114 355 l 81 422 q 148 442 116 431 q 211 462 180 452 l 211 801 q 220 878 211 841 q 251 943 230 915 q 308 989 273 972 q 395 1006 344 1006 q 461 991 431 1006 q 511 950 491 977 q 543 886 532 924 q 555 802 555 848 q 537 679 555 735 q 489 577 519 622 q 418 496 459 532 q 330 436 377 461 l 330 232 q 335 172 330 199 q 353 125 341 145 q 383 94 365 105 q 426 82 401 82 m 461 795 q 396 925 461 925 q 363 916 376 925 q 343 889 350 906 q 333 848 336 872 q 330 795 330 824 l 330 516 q 389 566 364 539 q 430 626 413 593 q 453 702 446 660 q 461 795 461 743 "},"ĉ":{x_min:77,x_max:618,ha:643,o:"m 402 -14 q 274 7 334 -14 q 171 75 215 28 q 102 193 127 121 q 77 367 77 266 q 102 548 77 474 q 173 669 128 623 q 278 736 218 715 q 408 758 339 758 q 511 746 461 758 q 596 718 562 735 l 559 614 q 524 627 543 621 q 485 638 505 633 q 445 647 465 644 q 408 650 425 650 q 253 581 302 650 q 204 369 204 513 q 253 160 204 226 q 402 93 302 93 q 502 106 457 93 q 583 135 546 118 l 583 26 q 504 -3 546 6 q 402 -14 463 -14 m 618 842 l 536 842 q 464 897 501 864 q 393 967 428 930 q 320 897 356 930 q 250 842 284 864 l 168 842 l 168 860 q 208 905 185 879 q 254 958 231 931 q 297 1013 277 986 q 327 1064 317 1040 l 458 1064 q 488 1013 468 1040 q 531 958 508 986 q 577 905 554 931 q 618 860 601 879 l 618 842 "},"ī":{x_min:-14,x_max:376,ha:359,o:"m 241 0 l 118 0 l 118 745 l 241 745 l 241 0 m -14 943 l 376 943 l 376 842 l -14 842 l -14 943 "},"О":{x_min:85,x_max:945,ha:1031,o:"m 945 496 q 917 287 945 382 q 835 126 890 193 q 701 22 781 59 q 515 -14 620 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 498 85 382 q 110 707 85 613 q 190 867 136 801 q 325 970 243 934 q 517 1007 406 1007 q 701 970 622 1007 q 835 867 781 934 q 917 706 890 800 q 945 496 945 612 m 218 497 q 236 330 218 404 q 290 204 253 255 q 382 124 326 152 q 515 97 438 97 q 648 124 593 97 q 741 204 704 152 q 794 330 777 255 q 811 497 811 404 q 794 664 811 590 q 741 789 777 738 q 649 868 705 840 q 517 895 594 895 q 383 868 439 895 q 290 789 327 840 q 236 664 253 738 q 218 497 218 590 "},"ξ":{x_min:77,x_max:593,ha:632,o:"m 543 601 l 543 512 l 433 512 q 336 495 379 512 q 264 449 293 478 q 219 382 234 420 q 204 299 204 343 q 219 213 204 246 q 263 160 235 181 q 332 129 291 140 q 424 106 373 117 q 504 80 472 95 q 556 44 536 64 q 584 0 576 24 q 593 -53 593 -24 q 585 -113 593 -83 q 566 -171 578 -143 q 540 -225 555 -199 q 510 -272 525 -250 l 394 -272 q 425 -225 410 -250 q 451 -176 439 -201 q 469 -129 462 -152 q 476 -86 476 -106 q 471 -60 476 -73 q 450 -36 466 -47 q 403 -14 434 -24 q 321 6 373 -3 q 139 97 201 29 q 77 288 77 165 q 92 383 77 340 q 135 459 108 426 q 195 515 161 493 q 267 550 230 538 l 267 558 q 160 622 199 577 q 122 747 122 667 q 137 830 122 796 q 179 889 152 865 q 242 931 206 914 q 321 960 278 947 q 271 956 297 958 q 220 953 249 955 q 160 952 191 952 l 117 952 l 117 1055 l 553 1055 l 553 960 l 515 960 q 415 947 465 960 q 326 908 366 934 q 262 841 287 881 q 238 748 238 801 q 249 685 238 712 q 284 638 260 657 q 346 610 308 620 q 440 601 385 601 l 543 601 "},"Ď":{x_min:135,x_max:865,ha:950,o:"m 865 505 q 832 285 865 379 q 738 127 799 190 q 586 31 676 63 q 383 0 496 0 l 135 0 l 135 992 l 410 992 q 598 960 514 992 q 741 868 682 929 q 832 715 800 806 q 865 505 865 624 m 731 501 q 709 672 731 600 q 643 791 686 744 q 538 861 601 838 q 397 884 476 884 l 261 884 l 261 107 l 370 107 q 640 207 549 107 q 731 501 731 306 m 676 1274 q 635 1229 659 1255 q 589 1176 612 1203 q 546 1121 566 1148 q 516 1071 526 1094 l 385 1071 q 355 1121 375 1094 q 312 1176 335 1148 q 266 1229 289 1203 q 226 1274 243 1255 l 226 1293 l 308 1293 q 378 1237 342 1270 q 451 1166 414 1204 q 522 1237 486 1204 q 594 1293 559 1270 l 676 1293 l 676 1274 "},"&":{x_min:74,x_max:953,ha:975,o:"m 289 789 q 294 744 289 766 q 311 700 300 722 q 340 655 322 678 q 381 608 357 633 q 448 652 420 631 q 494 695 476 673 q 522 740 513 717 q 531 792 531 764 q 523 837 531 816 q 499 872 515 857 q 462 896 483 887 q 412 904 440 904 q 322 874 355 904 q 289 789 289 844 m 377 93 q 449 101 416 93 q 511 123 483 109 q 565 155 540 137 q 611 195 589 174 l 349 471 q 285 427 313 449 q 239 381 258 406 q 211 328 220 357 q 201 261 201 299 q 213 193 201 224 q 247 140 225 162 q 302 106 270 118 q 377 93 335 93 m 74 257 q 87 352 74 310 q 127 427 101 393 q 191 490 153 461 q 277 548 228 519 q 235 598 256 572 q 200 654 215 624 q 175 717 184 683 q 166 789 166 751 q 182 881 166 840 q 231 949 199 921 q 310 992 263 977 q 416 1007 356 1007 q 516 992 472 1007 q 591 949 560 977 q 638 881 622 921 q 655 790 655 840 q 638 709 655 746 q 593 641 621 672 q 529 582 565 609 q 452 531 492 556 l 690 279 q 723 319 708 299 q 749 362 738 339 q 770 411 761 385 q 786 470 779 438 l 910 470 q 886 387 899 425 q 854 317 872 350 q 814 255 836 283 q 766 198 792 226 l 953 0 l 800 0 l 686 116 q 620 61 653 85 q 551 21 588 37 q 472 -4 514 4 q 377 -14 430 -14 q 250 3 306 -14 q 154 56 193 21 q 94 142 115 91 q 74 257 74 192 "},G:{x_min:85,x_max:858,ha:958,o:"m 530 524 l 858 524 l 858 36 q 782 15 820 24 q 704 0 744 5 q 620 -10 664 -7 q 526 -14 576 -14 q 337 21 419 -14 q 199 123 255 57 q 114 284 143 189 q 85 497 85 378 q 117 708 85 613 q 211 868 149 802 q 363 970 272 934 q 569 1006 453 1006 q 713 991 644 1006 q 842 947 782 976 l 793 837 q 741 859 769 849 q 683 877 713 869 q 621 890 653 885 q 559 894 590 894 q 412 867 476 894 q 306 788 349 839 q 240 662 263 736 q 218 496 218 588 q 237 334 218 407 q 296 208 255 261 q 401 126 336 155 q 556 97 465 97 q 610 98 585 97 q 656 103 635 100 q 695 109 677 106 q 731 116 714 113 l 731 412 l 530 412 l 530 524 "},"ΰ":{x_min:111,x_max:736,ha:819,o:"m 409 -14 q 264 13 322 -14 q 172 87 206 40 q 124 199 138 135 q 111 337 111 263 l 111 745 l 234 745 l 234 345 q 245 239 234 286 q 278 158 256 192 q 335 106 300 125 q 417 88 370 88 q 564 167 516 88 q 612 412 612 245 q 609 503 612 461 q 601 585 606 545 q 587 664 595 625 q 569 745 580 703 l 693 745 q 711 664 703 703 q 725 585 719 626 q 733 501 730 545 q 736 406 736 457 q 653 88 736 190 q 409 -14 570 -14 m 357 959 q 372 1005 364 980 q 389 1057 381 1030 q 404 1112 397 1084 q 417 1164 412 1139 l 558 1164 l 558 1150 q 529 1102 545 1128 q 494 1049 513 1076 q 454 994 475 1022 q 412 942 434 967 l 357 942 l 357 959 m 198 945 q 212 998 198 982 q 247 1015 226 1015 q 265 1010 256 1015 q 281 998 274 1006 q 291 977 287 989 q 295 945 295 964 q 280 892 295 909 q 247 876 266 876 q 212 892 226 876 q 198 945 198 909 m 527 945 q 541 998 527 982 q 576 1015 555 1015 q 594 1010 585 1015 q 610 998 603 1006 q 620 977 616 989 q 625 945 625 964 q 610 892 625 909 q 576 876 595 876 q 541 892 555 876 q 527 945 527 909 "},"`":{x_min:267,x_max:534,ha:802,o:"m 534 842 l 452 842 q 400 889 428 860 q 346 946 372 917 q 299 1004 320 976 q 267 1049 277 1031 l 267 1064 l 415 1064 q 441 1013 426 1040 q 471 958 455 986 q 503 905 487 931 q 534 860 519 879 l 534 842 "},"ŏ":{x_min:77,x_max:725,ha:802,o:"m 725 373 q 702 208 725 280 q 637 86 679 135 q 534 11 594 37 q 398 -14 474 -14 q 270 11 329 -14 q 168 86 211 37 q 101 208 125 135 q 77 373 77 280 q 99 537 77 465 q 164 657 122 608 q 267 732 206 707 q 403 758 327 758 q 531 732 472 758 q 633 657 590 707 q 700 537 676 608 q 725 373 725 465 m 204 373 q 250 159 204 231 q 401 88 297 88 q 551 159 506 88 q 597 373 597 231 q 551 585 597 515 q 400 655 504 655 q 250 585 295 655 q 204 373 204 515 m 605 1030 q 587 954 602 988 q 546 894 572 920 q 483 855 520 869 q 398 842 446 842 q 311 855 348 842 q 250 893 274 868 q 212 952 225 918 q 197 1030 199 987 l 271 1030 q 283 983 274 1000 q 309 957 293 965 q 348 946 325 948 q 401 943 371 943 q 447 946 425 943 q 487 959 469 949 q 516 985 504 968 q 530 1030 527 1002 l 605 1030 "},"ý":{x_min:6.75,x_max:672.25,ha:679,o:"m 6 745 l 134 745 l 280 329 q 300 272 290 301 q 318 212 310 242 q 333 154 327 182 q 341 103 339 126 l 346 103 q 356 149 349 120 q 373 211 364 178 q 392 276 382 244 q 409 330 402 308 l 544 745 l 672 745 l 377 -96 q 336 -195 358 -152 q 285 -270 314 -239 q 217 -317 256 -300 q 123 -334 177 -334 q 62 -330 88 -334 q 18 -322 36 -326 l 18 -223 q 54 -229 32 -226 q 99 -231 75 -231 q 156 -223 132 -231 q 197 -201 179 -216 q 227 -164 215 -186 q 250 -115 240 -142 l 289 -6 l 6 745 m 276 860 q 306 905 290 879 q 338 958 322 931 q 369 1013 354 986 q 394 1064 383 1040 l 543 1064 l 543 1049 q 510 1004 532 1031 q 463 946 489 976 q 409 889 437 917 q 358 842 381 860 l 276 842 l 276 860 "},"º":{x_min:45,x_max:441,ha:486,o:"m 441 768 q 427 668 441 712 q 387 594 413 624 q 324 547 361 563 q 241 532 287 532 q 162 547 198 532 q 100 594 126 563 q 59 668 74 624 q 45 768 45 712 q 58 868 45 824 q 98 942 72 912 q 161 987 124 971 q 244 1003 197 1003 q 322 987 285 1003 q 384 942 358 971 q 426 868 411 912 q 441 768 441 824 m 133 769 q 159 647 133 688 q 243 605 184 605 q 326 647 301 605 q 352 769 352 688 q 326 889 352 850 q 243 929 301 929 q 159 889 184 929 q 133 769 133 850 "},"∞":{x_min:81,x_max:901,ha:982,o:"m 901 486 q 886 405 901 443 q 845 336 871 366 q 782 289 819 307 q 700 272 745 272 q 585 307 637 272 q 488 421 532 343 q 445 362 468 388 q 395 316 421 335 q 340 287 368 297 q 283 277 312 277 q 202 291 239 277 q 138 334 164 306 q 96 402 111 362 q 81 490 81 441 q 95 573 81 534 q 136 641 110 612 q 200 687 162 670 q 283 704 238 704 q 394 667 340 704 q 489 555 447 631 q 532 614 509 588 q 582 659 555 640 q 638 689 609 678 q 700 699 668 699 q 782 684 745 699 q 845 641 819 669 q 886 574 871 613 q 901 486 901 534 m 296 369 q 372 398 337 369 q 441 490 407 426 q 374 581 409 552 q 294 611 339 611 q 247 601 268 611 q 212 575 227 592 q 190 536 198 558 q 182 489 182 514 q 189 443 182 465 q 210 405 196 422 q 246 379 225 389 q 296 369 267 369 m 690 607 q 612 578 648 607 q 538 486 575 550 q 609 395 573 425 q 692 365 646 365 q 740 374 718 365 q 777 400 762 384 q 800 439 792 417 q 808 487 808 462 q 800 534 808 512 q 776 572 791 556 q 739 597 760 588 q 690 607 717 607 "},"ź":{x_min:56,x_max:556.21875,ha:612,o:"m 556 0 l 56 0 l 56 80 l 418 656 l 78 656 l 78 745 l 544 745 l 544 650 l 189 88 l 556 88 l 556 0 m 238 860 q 268 905 252 879 q 300 958 284 931 q 331 1013 316 986 q 356 1064 345 1040 l 505 1064 l 505 1049 q 472 1004 494 1031 q 425 946 451 976 q 371 889 399 917 q 320 842 343 860 l 238 842 l 238 860 "},"я":{x_min:22.75,x_max:619,ha:737,o:"m 157 0 l 22 0 l 220 315 q 161 339 190 323 q 111 381 133 355 q 75 443 89 407 q 62 527 62 479 q 81 621 62 580 q 133 689 100 662 q 214 730 167 716 q 317 745 261 745 l 619 745 l 619 0 l 495 0 l 495 295 l 330 295 l 157 0 m 178 525 q 191 468 178 492 q 226 428 203 444 q 278 405 248 413 q 346 398 309 398 l 495 398 l 495 642 l 322 642 q 214 610 249 642 q 178 525 178 577 "},"Ё":{x_min:135,x_max:650,ha:733,o:"m 650 0 l 135 0 l 135 992 l 650 992 l 650 880 l 261 880 l 261 574 l 624 574 l 624 462 l 261 462 l 261 111 l 650 111 l 650 0 m 201 1174 q 219 1227 201 1211 q 266 1244 238 1244 q 312 1227 292 1244 q 331 1174 331 1210 q 312 1121 331 1138 q 266 1105 292 1105 q 219 1121 238 1105 q 201 1174 201 1138 m 455 1174 q 474 1227 455 1211 q 520 1244 493 1244 q 545 1239 533 1244 q 566 1227 557 1235 q 580 1206 575 1218 q 586 1174 586 1193 q 566 1121 586 1138 q 520 1105 546 1105 q 474 1121 493 1105 q 455 1174 455 1138 "},"ń":{x_min:118,x_max:707,ha:818,o:"m 583 0 l 583 479 q 547 611 583 567 q 436 655 512 655 q 343 637 381 655 q 283 585 306 620 q 251 501 261 551 q 241 385 241 450 l 241 0 l 118 0 l 118 745 l 218 745 l 236 644 l 242 644 q 283 694 259 673 q 334 730 306 715 q 393 751 362 744 q 457 758 424 758 q 644 693 581 758 q 707 486 707 628 l 707 0 l 583 0 m 342 860 q 372 905 356 879 q 404 958 388 931 q 435 1013 420 986 q 460 1064 449 1040 l 609 1064 l 609 1049 q 576 1004 598 1031 q 529 946 555 976 q 475 889 503 917 q 424 842 447 860 l 342 842 l 342 860 "}," ":{x_min:0,x_max:0,ha:347},"Г":{x_min:135,x_max:649,ha:682,o:"m 649 992 l 649 880 l 261 880 l 261 0 l 135 0 l 135 992 l 649 992 "},"Ь":{x_min:135,x_max:729,ha:800,o:"m 729 290 q 708 170 729 224 q 645 79 688 117 q 537 20 602 41 q 380 0 471 0 l 135 0 l 135 992 l 261 992 l 261 574 l 362 574 q 536 551 465 574 q 648 490 606 529 q 710 400 691 452 q 729 290 729 349 m 261 107 l 368 107 q 540 152 485 107 q 595 290 595 197 q 579 370 595 337 q 533 424 564 403 q 456 453 503 444 q 347 462 410 462 l 261 462 l 261 107 "},"¤":{x_min:83.640625,x_max:680.03125,ha:765,o:"m 126 490 q 137 566 126 530 q 170 634 149 602 l 83 721 l 149 788 l 235 700 q 304 734 267 722 q 381 747 341 747 q 458 734 422 747 q 526 700 495 722 l 613 788 l 680 723 l 592 635 q 626 567 613 604 q 639 490 639 530 q 627 412 639 449 q 592 344 615 375 l 678 258 l 613 193 l 526 279 q 458 246 495 258 q 381 235 422 235 q 303 247 341 235 q 235 281 266 259 l 149 195 l 85 259 l 170 345 q 137 412 149 376 q 126 490 126 449 m 227 489 q 239 426 227 455 q 273 375 252 397 q 323 340 295 353 q 385 327 352 327 q 448 340 419 327 q 499 375 478 353 q 534 426 521 397 q 546 489 546 455 q 534 554 546 524 q 499 606 521 584 q 448 641 478 628 q 385 654 419 654 q 323 641 352 654 q 273 606 295 628 q 239 554 252 584 q 227 489 227 524 "},"Ĝ":{x_min:85,x_max:858,ha:958,o:"m 530 524 l 858 524 l 858 36 q 782 15 820 24 q 704 0 744 5 q 620 -10 664 -7 q 526 -14 576 -14 q 337 21 419 -14 q 199 123 255 57 q 114 284 143 189 q 85 497 85 378 q 117 708 85 613 q 211 868 149 802 q 363 970 272 934 q 569 1006 453 1006 q 713 991 644 1006 q 842 947 782 976 l 793 837 q 741 859 769 849 q 683 877 713 869 q 621 890 653 885 q 559 894 590 894 q 412 867 476 894 q 306 788 349 839 q 240 662 263 736 q 218 496 218 588 q 237 334 218 407 q 296 208 255 261 q 401 126 336 155 q 556 97 465 97 q 610 98 585 97 q 656 103 635 100 q 695 109 677 106 q 731 116 714 113 l 731 412 l 530 412 l 530 524 m 771 1071 l 689 1071 q 617 1126 654 1093 q 546 1196 581 1159 q 473 1126 509 1159 q 403 1071 437 1093 l 321 1071 l 321 1089 q 361 1134 338 1108 q 407 1187 384 1160 q 450 1242 430 1215 q 480 1293 470 1269 l 611 1293 q 641 1242 621 1269 q 684 1187 661 1215 q 730 1134 707 1160 q 771 1089 754 1108 l 771 1071 "},p:{x_min:118,x_max:737,ha:814,o:"m 454 -14 q 381 -5 414 -14 q 323 18 349 3 q 277 52 297 32 q 241 93 257 72 l 233 93 q 237 49 235 70 q 240 13 238 32 q 241 -16 241 -5 l 241 -334 l 118 -334 l 118 745 l 218 745 l 236 644 l 241 644 q 276 688 257 667 q 322 724 296 709 q 381 748 348 739 q 454 758 413 758 q 570 733 518 758 q 659 660 622 709 q 716 540 696 612 q 737 373 737 468 q 716 205 737 277 q 659 84 696 133 q 570 10 622 35 q 454 -14 518 -14 m 430 655 q 343 639 379 655 q 285 592 307 624 q 253 513 263 560 q 241 401 242 465 l 241 373 q 250 251 241 304 q 281 162 259 198 q 340 107 303 125 q 431 88 377 88 q 566 162 523 88 q 609 374 609 236 q 566 585 609 515 q 430 655 523 655 "
},"Ю":{x_min:135,x_max:1323,ha:1409,o:"m 1323 496 q 1296 287 1323 382 q 1216 126 1269 193 q 1086 22 1164 59 q 906 -14 1008 -14 q 728 19 804 -14 q 600 116 651 53 q 521 266 548 178 q 490 462 494 354 l 261 462 l 261 0 l 135 0 l 135 992 l 261 992 l 261 574 l 493 574 q 529 752 500 672 q 609 889 558 832 q 735 976 661 946 q 908 1007 809 1007 q 1087 970 1009 1007 q 1217 867 1164 934 q 1296 706 1269 800 q 1323 496 1323 612 m 626 497 q 643 330 626 404 q 694 204 659 255 q 782 124 729 152 q 908 97 835 97 q 1035 124 981 97 q 1122 204 1088 152 q 1173 330 1156 255 q 1189 497 1189 404 q 1173 664 1189 590 q 1122 789 1156 738 q 1035 868 1088 840 q 909 895 982 895 q 782 868 836 895 q 694 789 729 840 q 643 664 659 738 q 626 497 626 590 "},"ο":{x_min:77,x_max:725,ha:802,o:"m 725 373 q 702 208 725 280 q 637 86 679 135 q 534 11 594 37 q 398 -14 474 -14 q 270 11 329 -14 q 168 86 211 37 q 101 208 125 135 q 77 373 77 280 q 99 537 77 465 q 164 657 122 608 q 267 732 206 707 q 403 758 327 758 q 531 732 472 758 q 633 657 590 707 q 700 537 676 608 q 725 373 725 465 m 204 373 q 250 159 204 231 q 401 88 297 88 q 551 159 506 88 q 597 373 597 231 q 551 585 597 515 q 400 655 504 655 q 250 585 295 655 q 204 373 204 515 "},S:{x_min:70.109375,x_max:657,ha:721,o:"m 657 264 q 633 147 657 199 q 566 59 610 95 q 460 4 523 23 q 320 -14 398 -14 q 179 -2 245 -14 q 70 32 114 9 l 70 153 q 122 131 93 142 q 184 112 151 120 q 251 99 216 104 q 319 93 285 93 q 479 134 427 93 q 530 252 530 176 q 521 316 530 289 q 486 366 511 343 q 420 410 461 389 q 316 456 379 431 q 212 508 256 480 q 139 572 168 537 q 96 652 110 607 q 83 754 83 697 q 104 860 83 813 q 165 939 126 907 q 259 989 205 972 q 380 1006 314 1006 q 525 990 460 1006 q 640 951 589 975 l 595 845 q 495 880 551 865 q 381 894 440 894 q 254 856 299 894 q 209 752 209 818 q 219 686 209 714 q 252 635 229 657 q 315 592 276 612 q 410 549 353 572 q 517 499 471 525 q 594 441 563 473 q 641 366 625 408 q 657 264 657 323 "},"/":{x_min:13.75,x_max:504.015625,ha:518,o:"m 504 992 l 135 0 l 13 0 l 383 992 l 504 992 "},"Ŧ":{x_min:14,x_max:706,ha:721,o:"m 297 556 l 297 880 l 14 880 l 14 992 l 706 992 l 706 880 l 423 880 l 423 556 l 623 556 l 623 448 l 423 448 l 423 0 l 297 0 l 297 448 l 95 448 l 95 556 l 297 556 "},"ђ":{x_min:12.1875,x_max:707,ha:818,o:"m 510 -334 q 456 -329 477 -334 q 419 -317 435 -324 l 419 -217 q 455 -227 437 -224 q 497 -231 473 -231 q 531 -226 515 -231 q 558 -208 546 -221 q 577 -172 570 -194 q 583 -116 583 -150 l 583 451 q 547 583 583 539 q 436 627 512 627 q 343 609 381 627 q 283 557 306 592 q 251 473 261 523 q 241 357 241 422 l 241 0 l 118 0 l 118 843 l 12 843 l 12 932 l 118 932 l 118 1055 l 241 1055 l 241 932 l 498 932 l 498 843 l 241 843 l 241 715 l 236 616 l 242 616 q 283 666 259 645 q 334 702 306 687 q 393 723 362 716 q 457 730 424 730 q 644 665 581 730 q 707 458 707 600 l 707 -107 q 695 -201 707 -159 q 659 -272 683 -243 q 598 -318 635 -302 q 510 -334 561 -334 "},y:{x_min:6.75,x_max:672.25,ha:679,o:"m 6 745 l 134 745 l 280 329 q 300 272 290 301 q 318 212 310 242 q 333 154 327 182 q 341 103 339 126 l 346 103 q 356 149 349 120 q 373 211 364 178 q 392 276 382 244 q 409 330 402 308 l 544 745 l 672 745 l 377 -96 q 336 -195 358 -152 q 285 -270 314 -239 q 217 -317 256 -300 q 123 -334 177 -334 q 62 -330 88 -334 q 18 -322 36 -326 l 18 -223 q 54 -229 32 -226 q 99 -231 75 -231 q 156 -223 132 -231 q 197 -201 179 -216 q 227 -164 215 -186 q 250 -115 240 -142 l 289 -6 l 6 745 "},"Π":{x_min:135,x_max:826,ha:960,o:"m 826 0 l 699 0 l 699 880 l 261 880 l 261 0 l 135 0 l 135 992 l 826 992 l 826 0 "},"‗":{x_min:-3,x_max:574,ha:571,o:"m 574 -314 l -3 -314 l -3 -219 l 574 -219 l 574 -314 m 574 -125 l -3 -125 l -3 -31 l 574 -31 l 574 -125 "},"–":{x_min:56,x_max:639,ha:695,o:"m 56 315 l 56 429 l 639 429 l 639 315 l 56 315 "},"ë":{x_min:77,x_max:673,ha:743,o:"m 412 -14 q 276 11 337 -14 q 170 84 214 36 q 101 203 125 132 q 77 366 77 274 q 99 531 77 458 q 162 654 121 604 q 259 731 202 705 q 384 758 316 758 q 505 733 451 758 q 595 665 558 709 q 653 560 633 621 q 673 423 673 498 l 673 346 l 204 346 q 259 155 207 216 q 413 93 311 93 q 477 97 448 93 q 534 107 507 100 q 587 123 561 113 q 639 145 613 133 l 639 35 q 586 13 612 22 q 533 -2 560 3 q 476 -11 505 -8 q 412 -14 446 -14 m 384 655 q 260 602 306 655 q 207 449 214 549 l 545 449 q 536 533 545 495 q 507 598 526 571 q 457 640 487 625 q 384 655 427 655 m 183 945 q 201 998 183 982 q 248 1015 220 1015 q 294 998 274 1015 q 313 945 313 981 q 294 892 313 909 q 248 876 274 876 q 201 892 220 876 q 183 945 183 909 m 437 945 q 456 998 437 982 q 502 1015 475 1015 q 527 1010 515 1015 q 548 998 539 1006 q 562 977 557 989 q 568 945 568 964 q 548 892 568 909 q 502 876 528 876 q 456 892 475 876 q 437 945 437 909 "},"б":{x_min:79,x_max:716,ha:791,o:"m 79 446 q 95 664 79 569 q 147 828 112 759 q 237 940 182 897 q 369 999 292 982 q 535 1034 453 1018 q 686 1065 617 1051 l 709 957 q 633 944 675 951 q 549 928 592 936 q 467 912 507 920 q 398 897 428 904 q 322 865 356 887 q 264 804 288 843 q 225 710 239 766 q 209 577 211 654 l 218 577 q 251 617 230 597 q 300 654 272 638 q 365 682 329 671 q 445 693 401 693 q 562 668 512 693 q 647 599 613 643 q 699 493 682 554 q 716 359 716 432 q 692 196 716 266 q 627 79 669 126 q 526 9 585 32 q 396 -14 467 -14 q 265 16 324 -14 q 165 105 207 46 q 101 249 123 163 q 79 446 79 335 m 406 88 q 481 101 447 88 q 538 144 514 114 q 575 223 562 174 q 588 343 588 271 q 579 445 588 400 q 550 523 570 491 q 500 573 531 555 q 425 590 469 590 q 347 574 383 590 q 282 534 311 557 q 234 486 254 511 q 206 444 215 462 q 215 312 206 376 q 245 198 223 248 q 306 118 268 148 q 406 88 345 88 "},"ƒ":{x_min:138,x_max:679,ha:765,o:"m 444 552 l 444 -89 q 429 -207 444 -160 q 385 -282 413 -254 q 314 -322 356 -310 q 220 -334 272 -334 q 177 -330 198 -334 q 138 -323 156 -327 l 138 -219 q 174 -228 155 -224 q 215 -231 194 -231 q 262 -225 242 -231 q 295 -202 282 -218 q 314 -159 308 -187 q 321 -88 321 -131 l 321 552 l 189 552 l 189 610 l 321 664 l 321 757 q 336 877 321 829 q 380 953 351 925 q 451 994 409 982 q 546 1006 493 1006 q 619 998 586 1006 q 679 980 653 990 l 647 884 q 601 897 626 892 q 550 903 577 903 q 503 897 523 903 q 470 874 483 890 q 450 830 457 858 q 444 758 444 802 l 444 660 l 611 660 l 611 552 l 444 552 "},"у":{x_min:6.75,x_max:672.25,ha:679,o:"m 6 745 l 134 745 l 280 329 q 300 272 290 301 q 318 212 310 242 q 333 154 327 182 q 341 103 339 126 l 346 103 q 356 149 349 120 q 373 211 364 178 q 392 276 382 244 q 409 330 402 308 l 544 745 l 672 745 l 377 -96 q 336 -195 358 -152 q 285 -270 314 -239 q 217 -317 256 -300 q 123 -334 177 -334 q 62 -330 88 -334 q 18 -322 36 -326 l 18 -223 q 54 -229 32 -226 q 99 -231 75 -231 q 156 -223 132 -231 q 197 -201 179 -216 q 227 -164 215 -186 q 250 -115 240 -142 l 289 -6 l 6 745 "},J:{x_min:-125,x_max:251.15625,ha:376,o:"m -19 -264 q -80 -259 -54 -264 q -125 -247 -106 -255 l -125 -139 q -75 -149 -101 -145 q -18 -152 -48 -152 q 32 -146 6 -152 q 78 -122 57 -139 q 112 -76 99 -105 q 125 0 125 -46 l 125 992 l 251 992 l 251 13 q 231 -109 251 -57 q 175 -196 211 -162 q 90 -247 140 -230 q -19 -264 40 -264 "},"ŷ":{x_min:6.75,x_max:672.25,ha:679,o:"m 6 745 l 134 745 l 280 329 q 300 272 290 301 q 318 212 310 242 q 333 154 327 182 q 341 103 339 126 l 346 103 q 356 149 349 120 q 373 211 364 178 q 392 276 382 244 q 409 330 402 308 l 544 745 l 672 745 l 377 -96 q 336 -195 358 -152 q 285 -270 314 -239 q 217 -317 256 -300 q 123 -334 177 -334 q 62 -330 88 -334 q 18 -322 36 -326 l 18 -223 q 54 -229 32 -226 q 99 -231 75 -231 q 156 -223 132 -231 q 197 -201 179 -216 q 227 -164 215 -186 q 250 -115 240 -142 l 289 -6 l 6 745 m 566 842 l 484 842 q 412 897 449 864 q 341 967 376 930 q 268 897 304 930 q 198 842 232 864 l 116 842 l 116 860 q 156 905 133 879 q 202 958 179 931 q 245 1013 225 986 q 275 1064 265 1040 l 406 1064 q 436 1013 416 1040 q 479 958 456 986 q 525 905 502 931 q 566 860 549 879 l 566 842 "},"ŕ":{x_min:118,x_max:526,ha:554,o:"m 439 758 q 483 756 459 758 q 526 751 508 754 l 509 637 q 470 643 490 640 q 433 645 450 645 q 355 628 390 645 q 294 578 320 610 q 255 501 269 546 q 241 401 241 456 l 241 0 l 118 0 l 118 745 l 218 745 l 233 608 l 238 608 q 274 664 255 637 q 318 712 294 691 q 372 745 342 732 q 439 758 402 758 m 232 860 q 262 905 246 879 q 294 958 278 931 q 325 1013 310 986 q 350 1064 339 1040 l 499 1064 l 499 1049 q 466 1004 488 1031 q 419 946 445 976 q 365 889 393 917 q 314 842 337 860 l 232 842 l 232 860 "},"ώ":{x_min:77,x_max:970,ha:1046,o:"m 332 -14 q 223 13 271 -14 q 143 91 176 41 q 93 209 110 140 q 77 360 77 278 q 82 464 77 415 q 97 558 87 512 q 124 650 108 604 q 162 745 140 696 l 289 745 q 251 649 267 695 q 225 558 235 604 q 209 464 214 512 q 204 360 204 416 q 214 243 204 294 q 242 158 224 192 q 285 106 260 123 q 340 88 310 88 q 394 102 371 88 q 432 140 417 116 q 454 198 447 165 q 462 270 462 231 l 462 478 l 585 478 l 585 270 q 618 135 585 182 q 706 88 651 88 q 761 106 736 88 q 804 158 786 123 q 832 243 823 192 q 842 360 842 294 q 837 464 842 416 q 821 558 832 512 q 795 649 811 604 q 757 745 779 695 l 884 745 q 922 650 906 696 q 949 558 938 604 q 964 464 959 512 q 970 360 970 415 q 953 209 970 278 q 903 91 936 140 q 823 13 871 41 q 714 -14 775 -14 q 595 15 642 -14 q 527 106 548 45 l 520 106 q 452 15 499 45 q 332 -14 404 -14 m 474 860 q 487 906 480 880 q 500 960 494 932 q 512 1014 507 987 q 521 1064 518 1041 l 656 1064 l 656 1049 q 640 1007 651 1033 q 614 951 629 980 q 581 892 598 921 q 547 842 563 863 l 474 842 l 474 860 "},"˘":{x_min:196,x_max:604,ha:802,o:"m 604 1030 q 586 954 601 988 q 545 894 571 920 q 482 855 519 869 q 397 842 445 842 q 310 855 347 842 q 249 893 273 868 q 211 952 224 918 q 196 1030 198 987 l 270 1030 q 282 983 273 1000 q 308 957 292 965 q 347 946 324 948 q 400 943 370 943 q 446 946 424 943 q 486 959 468 949 q 515 985 503 968 q 529 1030 526 1002 l 604 1030 "},D:{x_min:135,x_max:865,ha:950,o:"m 865 505 q 832 285 865 379 q 738 127 799 190 q 586 31 676 63 q 383 0 496 0 l 135 0 l 135 992 l 410 992 q 598 960 514 992 q 741 868 682 929 q 832 715 800 806 q 865 505 865 624 m 731 501 q 709 672 731 600 q 643 791 686 744 q 538 861 601 838 q 397 884 476 884 l 261 884 l 261 107 l 370 107 q 640 207 549 107 q 731 501 731 306 "},"ł":{x_min:-7,x_max:367,ha:359,o:"m 118 513 l 118 1055 l 241 1055 l 241 593 l 314 641 l 367 558 l 241 477 l 241 0 l 118 0 l 118 396 l 45 350 l -7 432 l 118 513 "},"ĺ":{x_min:116,x_max:383,ha:359,o:"m 241 0 l 118 0 l 118 1055 l 241 1055 l 241 0 m 116 1128 q 146 1173 130 1147 q 178 1226 162 1199 q 209 1281 194 1254 q 234 1332 223 1308 l 383 1332 l 383 1317 q 350 1272 372 1299 q 303 1214 329 1244 q 249 1157 277 1185 q 198 1110 221 1128 l 116 1110 l 116 1128 "},"ц":{x_min:118,x_max:815,ha:836,o:"m 815 -258 l 691 -258 l 691 0 l 118 0 l 118 745 l 241 745 l 241 102 l 582 102 l 582 745 l 706 745 l 706 102 l 815 102 l 815 -258 "},"Л":{x_min:0,x_max:794,ha:929,o:"m 794 0 l 667 0 l 667 880 l 432 880 q 411 721 421 804 q 389 558 400 638 q 367 406 378 478 q 344 279 355 334 q 311 154 330 209 q 263 61 291 99 q 195 4 234 24 q 99 -16 155 -16 q 46 -11 73 -16 q 0 0 20 -6 l 0 105 q 35 95 15 99 q 76 91 55 91 q 130 113 109 91 q 165 167 151 134 q 188 239 180 200 q 205 315 197 279 q 224 421 214 354 q 248 577 235 488 q 276 771 262 665 q 306 992 291 877 l 794 992 l 794 0 "},$:{x_min:83,x_max:668,ha:765,o:"m 668 303 q 651 216 668 255 q 602 149 634 177 q 525 102 570 120 q 423 75 480 83 l 423 -81 l 330 -81 l 330 69 q 261 72 296 69 q 194 81 226 75 q 133 96 161 87 q 83 116 104 104 l 83 233 q 134 212 105 222 q 197 193 164 201 q 263 179 229 185 q 330 174 298 174 l 330 466 q 225 509 269 487 q 151 560 180 531 q 108 626 122 589 q 94 713 94 663 q 110 796 94 759 q 158 862 127 834 q 232 908 188 890 q 330 932 276 926 l 330 1054 l 423 1054 l 423 935 q 548 917 491 931 q 651 882 606 903 l 606 783 q 521 812 568 799 q 423 829 473 826 l 423 547 q 529 504 483 526 q 605 453 574 481 q 652 388 636 425 q 668 303 668 352 m 548 302 q 541 344 548 325 q 520 378 535 362 q 482 406 505 393 q 423 432 458 420 l 423 180 q 517 222 486 190 q 548 302 548 254 m 213 711 q 219 668 213 687 q 238 633 224 649 q 274 605 252 617 q 330 580 296 592 l 330 827 q 241 787 269 816 q 213 711 213 757 "},w:{x_min:13.75,x_max:1022.25,ha:1036,o:"m 683 0 l 570 417 q 563 445 567 430 q 555 477 559 460 q 546 512 551 494 q 538 546 542 529 q 518 628 528 586 l 514 628 q 496 546 505 585 q 480 476 488 512 q 464 415 471 440 l 347 0 l 204 0 l 13 745 l 143 745 l 232 348 q 245 282 239 318 q 258 211 252 246 q 269 146 264 177 q 277 95 274 115 l 281 95 q 290 142 284 113 q 303 205 296 172 q 317 270 310 238 q 331 324 325 302 l 453 745 l 586 745 l 702 324 q 716 270 709 301 q 732 207 724 239 q 745 145 739 175 q 754 95 751 115 l 758 95 q 764 142 760 113 q 775 207 769 172 q 788 279 781 242 q 803 348 795 316 l 896 745 l 1022 745 l 829 0 l 683 0 "},"о":{x_min:77,x_max:725,ha:802,o:"m 725 373 q 702 208 725 280 q 637 86 679 135 q 534 11 594 37 q 398 -14 474 -14 q 270 11 329 -14 q 168 86 211 37 q 101 208 125 135 q 77 373 77 280 q 99 537 77 465 q 164 657 122 608 q 267 732 206 707 q 403 758 327 758 q 531 732 472 758 q 633 657 590 707 q 700 537 676 608 q 725 373 725 465 m 204 373 q 250 159 204 231 q 401 88 297 88 q 551 159 506 88 q 597 373 597 231 q 551 585 597 515 q 400 655 504 655 q 250 585 295 655 q 204 373 204 515 "},"Д":{x_min:10,x_max:876,ha:903,o:"m 876 -261 l 749 -261 l 749 0 l 136 0 l 136 -261 l 10 -261 l 10 111 l 86 111 q 147 223 118 170 q 203 354 177 277 q 251 512 229 431 q 290 675 273 593 q 316 837 306 757 q 329 992 326 917 l 744 992 l 744 111 l 876 111 l 876 -261 m 617 111 l 617 880 l 455 880 q 440 766 452 829 q 413 634 429 703 q 374 494 396 565 q 326 355 352 423 q 273 224 301 286 q 216 111 245 162 l 617 111 "},"Ç":{x_min:85,x_max:798,ha:838,o:"m 538 894 q 406 867 465 894 q 305 788 347 839 q 241 662 264 736 q 218 496 218 588 q 238 326 218 400 q 298 200 258 251 q 398 123 338 150 q 538 97 458 97 q 652 108 598 97 q 760 135 707 120 l 760 26 q 707 8 733 15 q 651 -4 680 0 q 590 -11 622 -9 q 517 -14 557 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 497 85 382 q 114 703 85 609 q 201 864 144 796 q 343 968 258 931 q 538 1006 428 1006 q 677 991 611 1006 q 798 947 744 976 l 745 841 q 652 879 702 863 q 538 894 601 894 m 622 -194 q 574 -297 622 -260 q 424 -334 526 -334 q 394 -331 409 -334 q 369 -327 379 -329 l 369 -254 q 395 -257 379 -256 q 422 -258 412 -258 q 497 -247 470 -258 q 524 -208 524 -235 q 515 -186 524 -195 q 491 -169 506 -176 q 454 -157 476 -162 q 409 -147 433 -152 l 470 0 l 552 0 l 513 -78 q 556 -92 536 -83 q 590 -115 575 -101 q 613 -148 605 -128 q 622 -194 622 -168 "},"Ŝ":{x_min:70.109375,x_max:657,ha:721,o:"m 657 264 q 633 147 657 199 q 566 59 610 95 q 460 4 523 23 q 320 -14 398 -14 q 179 -2 245 -14 q 70 32 114 9 l 70 153 q 122 131 93 142 q 184 112 151 120 q 251 99 216 104 q 319 93 285 93 q 479 134 427 93 q 530 252 530 176 q 521 316 530 289 q 486 366 511 343 q 420 410 461 389 q 316 456 379 431 q 212 508 256 480 q 139 572 168 537 q 96 652 110 607 q 83 754 83 697 q 104 860 83 813 q 165 939 126 907 q 259 989 205 972 q 380 1006 314 1006 q 525 990 460 1006 q 640 951 589 975 l 595 845 q 495 880 551 865 q 381 894 440 894 q 254 856 299 894 q 209 752 209 818 q 219 686 209 714 q 252 635 229 657 q 315 592 276 612 q 410 549 353 572 q 517 499 471 525 q 594 441 563 473 q 641 366 625 408 q 657 264 657 323 m 612 1071 l 530 1071 q 458 1126 495 1093 q 387 1196 422 1159 q 314 1126 350 1159 q 244 1071 278 1093 l 162 1071 l 162 1089 q 202 1134 179 1108 q 248 1187 225 1160 q 291 1242 271 1215 q 321 1293 311 1269 l 452 1293 q 482 1242 462 1269 q 525 1187 502 1215 q 571 1134 548 1160 q 612 1089 595 1108 l 612 1071 "},C:{x_min:85,x_max:798,ha:838,o:"m 538 894 q 406 867 465 894 q 305 788 347 839 q 241 662 264 736 q 218 496 218 588 q 238 326 218 400 q 298 200 258 251 q 398 123 338 150 q 538 97 458 97 q 652 108 598 97 q 760 135 707 120 l 760 26 q 707 8 733 15 q 651 -4 680 0 q 590 -11 622 -9 q 517 -14 557 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 497 85 382 q 114 703 85 609 q 201 864 144 796 q 343 968 258 931 q 538 1006 428 1006 q 677 991 611 1006 q 798 947 744 976 l 745 841 q 652 879 702 863 q 538 894 601 894 "},"Ḁ":{x_min:-.25,x_max:844.25,ha:844,o:"m 715 0 l 606 307 l 237 307 l 127 0 l 0 0 l 364 996 l 479 996 l 844 0 l 715 0 m 566 419 l 466 706 q 456 736 462 719 q 444 774 450 754 q 432 817 438 795 q 421 860 426 839 q 410 816 416 839 q 397 773 404 794 q 386 735 391 752 q 376 706 380 718 l 277 419 l 566 419 m 576 -229 q 564 -291 576 -264 q 531 -338 552 -319 q 482 -367 510 -357 q 420 -377 453 -377 q 358 -367 386 -377 q 310 -338 330 -357 q 279 -292 290 -319 q 269 -231 269 -265 q 279 -169 269 -196 q 310 -123 290 -142 q 358 -94 330 -104 q 420 -85 386 -85 q 481 -94 453 -85 q 531 -123 510 -104 q 564 -168 552 -142 q 576 -229 576 -195 m 501 -231 q 479 -174 501 -194 q 422 -154 456 -154 q 365 -174 387 -154 q 343 -231 343 -194 q 363 -287 343 -267 q 422 -307 383 -307 q 479 -287 456 -307 q 501 -231 501 -267 "},"Ĵ":{x_min:-125,x_max:414,ha:376,o:"m -19 -264 q -80 -259 -54 -264 q -125 -247 -106 -255 l -125 -139 q -75 -149 -101 -145 q -18 -152 -48 -152 q 32 -146 6 -152 q 78 -122 57 -139 q 112 -76 99 -105 q 125 0 125 -46 l 125 992 l 251 992 l 251 13 q 231 -109 251 -57 q 175 -196 211 -162 q 90 -247 140 -230 q -19 -264 40 -264 m 414 1071 l 332 1071 q 260 1126 297 1093 q 189 1196 224 1159 q 116 1126 152 1159 q 46 1071 80 1093 l -36 1071 l -36 1089 q 4 1134 -18 1108 q 50 1187 27 1160 q 93 1242 73 1215 q 123 1293 113 1269 l 254 1293 q 284 1242 264 1269 q 327 1187 304 1215 q 373 1134 350 1160 q 414 1089 397 1108 l 414 1071 "},"È":{x_min:135,x_max:650,ha:733,o:"m 650 0 l 135 0 l 135 992 l 650 992 l 650 880 l 261 880 l 261 574 l 624 574 l 624 462 l 261 462 l 261 111 l 650 111 l 650 0 m 484 1071 l 402 1071 q 350 1118 378 1089 q 296 1175 322 1146 q 249 1233 270 1205 q 217 1278 227 1260 l 217 1293 l 365 1293 q 391 1242 376 1269 q 421 1187 405 1215 q 453 1134 437 1160 q 484 1089 469 1108 l 484 1071 "},"ﬁ":{x_min:19,x_max:709.96875,ha:817,o:"m 441 656 l 274 656 l 274 0 l 151 0 l 151 656 l 19 656 l 19 704 l 151 749 l 151 814 q 166 934 151 886 q 210 1010 181 982 q 280 1051 238 1039 q 375 1063 322 1063 q 449 1055 415 1063 q 509 1037 482 1047 l 477 941 q 431 954 456 949 q 379 960 406 960 q 332 954 352 960 q 300 931 313 947 q 280 887 287 915 q 274 815 274 859 l 274 745 l 441 745 l 441 656 m 698 0 l 575 0 l 575 745 l 698 745 l 698 0 m 565 945 q 586 1004 565 986 q 637 1023 606 1023 q 665 1018 652 1023 q 688 1004 678 1014 q 704 980 698 995 q 709 945 709 966 q 688 887 709 906 q 637 868 667 868 q 586 886 606 868 q 565 945 565 905 "},X:{x_min:-.25,x_max:760.25,ha:760,o:"m 760 0 l 617 0 l 376 430 l 127 0 l 0 0 l 307 518 l 20 992 l 155 992 l 380 612 l 608 992 l 737 992 l 450 522 l 760 0 "},"ô":{x_min:77,x_max:725,ha:802,o:"m 725 373 q 702 208 725 280 q 637 86 679 135 q 534 11 594 37 q 398 -14 474 -14 q 270 11 329 -14 q 168 86 211 37 q 101 208 125 135 q 77 373 77 280 q 99 537 77 465 q 164 657 122 608 q 267 732 206 707 q 403 758 327 758 q 531 732 472 758 q 633 657 590 707 q 700 537 676 608 q 725 373 725 465 m 204 373 q 250 159 204 231 q 401 88 297 88 q 551 159 506 88 q 597 373 597 231 q 551 585 597 515 q 400 655 504 655 q 250 585 295 655 q 204 373 204 515 m 622 842 l 540 842 q 468 897 505 864 q 397 967 432 930 q 324 897 360 930 q 254 842 288 864 l 172 842 l 172 860 q 212 905 189 879 q 258 958 235 931 q 301 1013 281 986 q 331 1064 321 1040 l 462 1064 q 492 1013 472 1040 q 535 958 512 986 q 581 905 558 931 q 622 860 605 879 l 622 842 "},"Ė":{x_min:135,x_max:650,ha:733,o:"m 650 0 l 135 0 l 135 992 l 650 992 l 650 880 l 261 880 l 261 574 l 624 574 l 624 462 l 261 462 l 261 111 l 650 111 l 650 0 m 325 1155 q 345 1214 325 1196 q 396 1233 366 1233 q 425 1228 411 1233 q 448 1214 438 1224 q 463 1190 457 1205 q 469 1155 469 1176 q 448 1097 469 1116 q 396 1078 426 1078 q 345 1096 366 1078 q 325 1155 325 1115 "},"г":{x_min:118,x_max:527,ha:555,o:"m 527 642 l 241 642 l 241 0 l 118 0 l 118 745 l 527 745 l 527 642 "},"Ŀ":{x_min:135,x_max:649.4375,ha:682,o:"m 135 0 l 135 992 l 261 992 l 261 111 l 649 111 l 649 0 l 135 0 m 436 493 q 456 552 436 534 q 507 571 477 571 q 536 566 522 571 q 559 552 549 562 q 574 528 568 543 q 580 493 580 514 q 559 435 580 454 q 507 416 537 416 q 456 434 477 416 q 436 493 436 453 "},"х":{x_min:24,x_max:670,ha:695,o:"m 276 382 l 38 745 l 178 745 l 347 466 l 517 745 l 658 745 l 416 382 l 670 0 l 529 0 l 347 295 l 164 0 l 24 0 l 276 382 "},"ŋ":{x_min:118,x_max:706.34375,ha:818,o:"m 508 -334 q 454 -329 476 -334 q 418 -317 433 -324 l 418 -217 q 453 -227 435 -224 q 495 -231 472 -231 q 529 -226 513 -231 q 556 -208 545 -221 q 575 -172 568 -194 q 581 -116 581 -150 l 582 479 q 547 611 582 567 q 435 655 511 655 q 343 637 381 655 q 283 585 306 620 q 251 501 261 551 q 241 385 241 450 l 241 0 l 118 0 l 118 745 l 218 745 l 236 644 l 242 644 q 283 694 259 673 q 334 730 306 715 q 393 751 362 744 q 456 758 424 758 q 643 693 580 758 q 706 486 706 628 l 705 -107 q 693 -201 705 -159 q 657 -272 681 -243 q 596 -318 633 -302 q 508 -334 559 -334 "},"Ч":{x_min:113,x_max:782,ha:917,o:"m 782 0 l 655 0 l 655 406 q 511 360 577 376 q 379 345 445 345 q 266 361 316 345 q 183 410 217 378 q 130 489 148 442 q 113 596 113 536 l 113 992 l 239 992 l 239 612 q 274 495 239 534 q 393 456 310 456 q 517 469 454 456 q 655 510 579 483 l 655 992 l 782 992 l 782 0 "},"ü":{x_min:111,x_max:700,ha:818,o:"m 600 0 l 582 99 l 575 99 q 534 48 558 70 q 483 13 511 27 q 424 -7 455 0 q 360 -14 393 -14 q 252 1 299 -14 q 174 50 205 17 q 126 135 142 83 q 111 258 111 186 l 111 745 l 234 745 l 234 264 q 270 132 234 176 q 381 88 306 88 q 474 106 436 88 q 534 158 511 123 q 566 242 556 192 q 576 357 576 292 l 576 745 l 700 745 l 700 0 l 600 0 m 210 945 q 228 998 210 982 q 275 1015 247 1015 q 321 998 301 1015 q 340 945 340 981 q 321 892 340 909 q 275 876 301 876 q 228 892 247 876 q 210 945 210 909 m 464 945 q 483 998 464 982 q 529 1015 502 1015 q 554 1010 542 1015 q 575 998 566 1006 q 589 977 584 989 q 595 945 595 964 q 575 892 595 909 q 529 876 555 876 q 483 892 502 876 q 464 945 464 909 "},"ь":{x_min:118,x_max:711,ha:787,o:"m 241 439 l 429 439 q 641 386 572 439 q 711 227 711 333 q 695 133 711 175 q 644 61 679 91 q 556 15 610 31 q 426 0 502 0 l 118 0 l 118 745 l 241 745 l 241 439 m 241 336 l 241 102 l 416 102 q 485 108 454 102 q 539 127 516 113 q 574 164 561 141 q 587 219 587 186 q 576 275 587 252 q 543 311 565 297 q 489 330 521 325 q 413 336 456 336 l 241 336 "},"Ÿ":{x_min:-.25,x_max:731.25,ha:732,o:"m 364 490 l 595 992 l 731 992 l 428 386 l 428 0 l 302 0 l 302 379 l 0 992 l 137 992 l 364 490 m 174 1174 q 192 1227 174 1211 q 239 1244 211 1244 q 285 1227 265 1244 q 304 1174 304 1210 q 285 1121 304 1138 q 239 1105 265 1105 q 192 1121 211 1105 q 174 1174 174 1138 m 428 1174 q 447 1227 428 1211 q 493 1244 466 1244 q 518 1239 506 1244 q 539 1227 530 1235 q 553 1206 548 1218 q 559 1174 559 1193 q 539 1121 559 1138 q 493 1105 519 1105 q 447 1121 466 1105 q 428 1174 428 1138 "},"€":{x_min:42.984375,x_max:744.875,ha:765,o:"m 526 893 q 440 875 480 893 q 368 825 400 858 q 313 743 336 791 q 279 634 291 695 l 571 634 l 571 526 l 268 526 q 268 509 268 517 q 267 494 267 502 q 267 481 267 487 q 267 458 267 470 q 268 434 267 446 l 529 434 l 529 326 l 281 326 q 367 155 304 214 q 530 97 429 97 q 627 107 581 97 q 713 135 673 118 l 713 26 q 627 -3 672 7 q 521 -14 582 -14 q 381 9 443 -14 q 273 77 319 33 q 198 184 228 121 q 154 326 168 247 l 42 326 l 42 434 l 143 434 q 142 456 142 447 q 142 481 142 464 q 142 508 142 494 q 143 526 143 521 l 42 526 l 42 634 l 151 634 q 193 787 163 718 q 269 904 223 855 q 377 979 314 953 q 517 1006 439 1006 q 637 991 582 1006 q 744 943 691 976 l 690 844 q 615 879 656 865 q 526 893 575 893 "},"в":{x_min:118,x_max:711,ha:787,o:"m 687 557 q 645 447 687 486 q 531 395 603 407 l 531 390 q 602 373 569 385 q 659 340 635 361 q 697 289 683 320 q 711 215 711 258 q 695 130 711 169 q 644 61 679 91 q 556 16 610 32 q 426 0 502 0 l 118 0 l 118 745 l 424 745 q 529 735 481 745 q 612 704 577 726 q 667 646 647 682 q 687 557 687 610 m 587 224 q 543 312 587 287 q 413 336 500 336 l 241 336 l 241 102 l 416 102 q 485 108 454 102 q 539 128 516 114 q 574 166 561 143 q 587 224 587 190 m 570 545 q 533 620 570 598 q 422 642 496 642 l 241 642 l 241 439 l 401 439 q 475 444 443 439 q 527 461 506 449 q 559 494 549 473 q 570 545 570 515 "},"Η":{x_min:135,x_max:839,ha:974,o:"m 839 0 l 712 0 l 712 462 l 261 462 l 261 0 l 135 0 l 135 992 l 261 992 l 261 574 l 712 574 l 712 992 l 839 992 l 839 0 "},"С":{x_min:85,x_max:798,ha:838,o:"m 538 894 q 406 867 465 894 q 305 788 347 839 q 241 662 264 736 q 218 496 218 588 q 238 326 218 400 q 298 200 258 251 q 398 123 338 150 q 538 97 458 97 q 652 108 598 97 q 760 135 707 120 l 760 26 q 707 8 733 15 q 651 -4 680 0 q 590 -11 622 -9 q 517 -14 557 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 497 85 382 q 114 703 85 609 q 201 864 144 796 q 343 968 258 931 q 538 1006 428 1006 q 677 991 611 1006 q 798 947 744 976 l 745 841 q 652 879 702 863 q 538 894 601 894 "},"ß":{x_min:118,x_max:774,ha:836,o:"m 685 854 q 670 785 685 815 q 633 730 655 755 q 586 685 612 706 q 538 646 560 665 q 502 609 517 627 q 487 570 487 591 q 492 545 487 556 q 510 521 497 534 q 547 491 523 507 q 610 448 571 474 q 679 399 649 423 q 730 347 709 374 q 762 286 751 319 q 774 211 774 254 q 755 110 774 152 q 701 39 736 67 q 619 0 667 12 q 514 -14 571 -14 q 401 -2 448 -14 q 318 32 353 9 l 318 145 q 357 124 335 134 q 404 106 379 114 q 454 93 428 98 q 505 88 480 88 q 571 96 543 88 q 616 120 598 105 q 642 156 634 135 q 650 205 650 178 q 644 249 650 229 q 624 288 639 269 q 585 327 609 307 q 522 370 560 347 q 450 421 479 397 q 403 466 422 444 q 378 513 385 489 q 371 565 371 537 q 385 629 371 602 q 420 677 399 655 q 466 716 441 698 q 512 754 490 735 q 547 797 533 774 q 561 849 561 820 q 550 899 561 878 q 518 933 539 920 q 469 954 498 947 q 406 960 441 960 q 343 954 373 960 q 290 931 313 947 q 254 887 268 915 q 241 814 241 858 l 241 0 l 118 0 l 118 814 q 139 932 118 884 q 199 1009 160 980 q 290 1050 237 1037 q 405 1063 343 1063 q 519 1050 467 1063 q 607 1011 571 1037 q 664 946 644 985 q 685 854 685 906 "},"њ":{x_min:118,x_max:1121,ha:1197,o:"m 241 745 l 241 437 l 554 437 l 554 745 l 677 745 l 677 439 l 837 439 q 1051 386 982 439 q 1121 228 1121 333 q 1105 133 1121 176 q 1054 61 1089 91 q 966 15 1020 31 q 835 0 912 0 l 554 0 l 554 334 l 241 334 l 241 0 l 118 0 l 118 745 l 241 745 m 997 220 q 986 276 997 253 q 953 312 975 298 q 898 332 931 326 q 823 337 865 337 l 677 337 l 677 102 l 826 102 q 894 108 863 102 q 948 128 925 114 q 984 164 971 142 q 997 220 997 187 "},"Ű":{x_min:125,x_max:845,ha:970,o:"m 845 993 l 845 349 q 822 205 845 272 q 755 90 800 139 q 641 13 709 41 q 481 -14 573 -14 q 327 12 394 -14 q 216 86 261 38 q 148 202 171 134 q 125 352 125 269 l 125 991 l 251 991 l 251 346 q 309 162 251 227 q 487 97 368 97 q 591 115 548 97 q 663 167 635 133 q 704 246 690 200 q 718 347 718 292 l 718 993 l 845 993 m 273 1089 q 303 1134 287 1108 q 335 1187 319 1160 q 365 1242 351 1215 q 391 1293 380 1269 l 526 1293 l 526 1278 q 493 1233 515 1260 q 446 1175 472 1205 q 392 1118 420 1146 q 341 1071 365 1089 l 273 1071 l 273 1089 m 519 1089 q 549 1134 533 1108 q 581 1187 565 1160 q 611 1242 597 1215 q 636 1293 626 1269 l 771 1293 l 771 1278 q 738 1233 760 1260 q 691 1175 717 1205 q 637 1118 665 1146 q 586 1071 610 1089 l 519 1071 l 519 1089 "},c:{x_min:77,x_max:596,ha:643,o:"m 402 -14 q 274 7 334 -14 q 171 75 215 28 q 102 193 127 121 q 77 367 77 266 q 102 548 77 474 q 173 669 128 623 q 278 736 218 715 q 408 758 339 758 q 511 746 461 758 q 596 718 562 735 l 559 614 q 524 627 543 621 q 485 638 505 633 q 445 647 465 644 q 408 650 425 650 q 253 581 302 650 q 204 369 204 513 q 253 160 204 226 q 402 93 302 93 q 502 106 457 93 q 583 135 546 118 l 583 26 q 504 -3 546 6 q 402 -14 463 -14 "},"¶":{x_min:77,x_max:764,ha:910,o:"m 764 -176 l 682 -176 l 682 947 l 541 947 l 541 -176 l 460 -176 l 460 379 q 361 366 418 366 q 244 384 296 366 q 154 441 191 401 q 97 546 117 481 q 77 706 77 611 q 99 872 77 806 q 161 980 121 939 q 258 1038 201 1021 q 382 1055 314 1055 l 764 1055 l 764 -176 "},"Ή":{x_min:-17,x_max:922,ha:1057,o:"m 922 0 l 795 0 l 795 462 l 344 462 l 344 0 l 218 0 l 218 992 l 344 992 l 344 574 l 795 574 l 795 992 l 922 992 l 922 0 m -17 789 q -3 835 -10 809 q 9 889 3 861 q 21 943 16 916 q 30 993 27 970 l 165 993 l 165 978 q 149 936 160 962 q 123 880 138 909 q 90 821 107 850 q 56 771 72 792 l -17 771 l -17 789 "},"Ὅ":{x_min:-203,x_max:1001,ha:1087,o:"m 1001 496 q 973 287 1001 382 q 891 126 946 193 q 757 22 837 59 q 571 -14 676 -14 q 380 22 461 -14 q 245 126 299 59 q 166 288 192 193 q 141 498 141 382 q 166 707 141 613 q 246 867 192 801 q 381 970 299 934 q 573 1007 462 1007 q 757 970 678 1007 q 891 867 837 934 q 973 706 946 800 q 1001 496 1001 612 m 274 497 q 292 330 274 404 q 346 204 309 255 q 438 124 382 152 q 571 97 494 97 q 704 124 649 97 q 797 204 760 152 q 850 330 833 255 q 867 497 867 404 q 850 664 867 590 q 797 789 833 738 q 705 868 761 840 q 573 895 650 895 q 439 868 495 895 q 346 789 383 840 q 292 664 309 738 q 274 497 274 590 m -10 787 q 5 833 -2 807 q 22 885 14 858 q 38 939 30 911 q 50 991 45 966 l 191 991 l 191 977 q 162 929 178 955 q 127 876 146 903 q 87 822 108 849 q 45 770 66 795 l -10 770 l -10 787 m -203 851 q -162 942 -203 904 q -38 1003 -121 981 l -38 951 q -98 920 -79 936 q -118 889 -118 905 q -107 870 -118 876 q -84 858 -97 864 q -61 844 -72 853 q -51 816 -51 835 q -67 778 -51 791 q -116 765 -84 765 q -179 788 -156 765 q -203 851 -203 812 "},"γ":{x_min:6.75,x_max:672.25,ha:679,o:"m 412 12 q 385 -76 397 -30 q 365 -167 373 -122 q 352 -255 356 -213 q 348 -334 348 -298 l 220 -334 q 225 -264 220 -305 q 240 -176 230 -223 q 262 -82 249 -130 q 289 8 274 -34 l 6 745 l 134 745 l 282 349 q 301 291 291 322 q 320 229 312 259 q 336 171 329 198 q 346 126 343 144 l 350 126 q 360 171 353 143 q 375 230 367 199 q 393 292 383 262 q 409 345 402 323 l 544 745 l 672 745 l 412 12 "},"­":{x_min:56,x_max:392,ha:447,o:"m 56 315 l 56 429 l 392 429 l 392 315 l 56 315 "},":":{x_min:100,x_max:272,ha:372,o:"m 100 74 q 106 118 100 100 q 125 147 113 136 q 152 163 136 158 q 186 169 167 169 q 219 163 203 169 q 246 147 235 158 q 265 118 258 136 q 272 74 272 100 q 265 31 272 49 q 246 2 258 13 q 219 -14 235 -9 q 186 -20 203 -20 q 152 -14 167 -20 q 125 2 136 -9 q 106 31 113 13 q 100 74 100 49 m 100 669 q 106 714 100 696 q 125 743 113 732 q 152 759 136 754 q 186 764 167 764 q 219 759 203 764 q 246 743 235 754 q 265 714 258 732 q 272 669 272 696 q 265 626 272 644 q 246 597 258 609 q 219 580 235 585 q 186 575 203 575 q 152 580 167 575 q 125 597 136 585 q 106 626 113 609 q 100 669 100 644 "},"ś":{x_min:61.15625,x_max:564,ha:627,o:"m 564 203 q 544 108 564 149 q 487 40 524 68 q 398 0 450 13 q 281 -14 346 -14 q 154 -2 207 -14 q 61 33 101 9 l 61 146 q 107 125 82 135 q 161 106 133 114 q 219 93 189 98 q 279 88 249 88 q 353 95 323 88 q 403 116 384 103 q 431 150 423 130 q 440 194 440 170 q 433 232 440 215 q 409 265 427 249 q 360 299 391 282 q 280 337 329 316 q 193 378 232 358 q 127 424 154 399 q 86 482 100 449 q 72 560 72 515 q 90 645 72 608 q 143 707 109 682 q 224 745 177 732 q 330 758 272 758 q 451 743 396 758 q 554 706 505 729 l 512 606 q 422 641 468 626 q 329 655 376 655 q 228 632 261 655 q 195 568 195 610 q 203 526 195 544 q 229 493 210 509 q 279 461 248 477 q 358 426 311 445 q 444 385 406 405 q 509 339 482 365 q 549 281 535 314 q 564 203 564 249 m 242 860 q 272 905 256 879 q 304 958 288 931 q 335 1013 320 986 q 360 1064 349 1040 l 509 1064 l 509 1049 q 476 1004 498 1031 q 429 946 455 976 q 375 889 403 917 q 324 842 347 860 l 242 842 l 242 860 "}," ":{x_min:0,x_max:0,ha:361},"У":{x_min:16.75,x_max:813.25,ha:813,o:"m 813 992 l 522 289 q 468 172 496 227 q 402 75 440 116 q 311 10 364 34 q 183 -14 258 -14 q 117 -8 148 -14 q 62 6 87 -3 l 62 131 q 117 106 87 116 q 183 97 147 97 q 246 105 219 97 q 297 130 274 112 q 338 178 319 149 q 376 250 357 207 l 16 992 l 155 992 l 415 440 q 422 425 418 433 q 428 408 425 417 q 434 391 431 399 q 440 377 437 383 l 441 377 q 447 394 443 383 q 455 416 451 404 q 462 437 458 427 q 468 451 466 447 l 679 992 l 813 992 "
},"¾":{x_min:21,x_max:1008.765625,ha:1023,o:"m 400 852 q 372 764 400 800 q 298 712 345 729 q 388 660 358 697 q 418 571 418 624 q 404 496 418 530 q 362 437 390 461 q 291 399 334 413 q 190 386 249 386 q 101 394 143 386 q 21 423 59 402 l 21 514 q 110 481 64 493 q 192 469 155 469 q 290 497 260 469 q 321 575 321 525 q 283 648 321 625 q 179 671 246 671 l 111 671 l 111 745 l 179 745 q 273 771 244 745 q 303 839 303 797 q 296 876 303 860 q 277 901 289 891 q 248 915 264 911 q 213 920 232 920 q 138 907 172 920 q 69 870 105 894 l 22 935 q 62 963 41 951 q 106 985 83 976 q 155 998 129 993 q 210 1004 180 1004 q 293 992 257 1004 q 352 961 328 981 q 388 913 376 940 q 400 852 400 885 m 879 992 l 328 0 l 221 0 l 772 992 l 879 992 m 1008 133 l 923 133 l 923 0 l 827 0 l 827 133 l 572 133 l 572 208 l 828 599 l 923 599 l 923 217 l 1008 217 l 1008 133 m 827 217 l 827 368 q 828 439 827 400 q 831 515 829 477 q 820 492 827 507 q 806 462 813 478 q 790 430 798 445 q 775 403 782 414 l 668 217 l 827 217 "},"Ί":{x_min:-17,x_max:585.8125,ha:642,o:"m 585 0 l 226 0 l 226 69 l 343 96 l 343 895 l 226 922 l 226 992 l 585 992 l 585 922 l 469 895 l 469 96 l 585 69 l 585 0 m -17 789 q -3 835 -10 809 q 9 889 3 861 q 21 943 16 916 q 30 993 27 970 l 165 993 l 165 978 q 149 936 160 962 q 123 880 138 909 q 90 821 107 850 q 56 771 72 792 l -17 771 l -17 789 "},"ŉ":{x_min:0,x_max:804,ha:916,o:"m 680 0 l 680 479 q 644 611 680 567 q 533 655 609 655 q 440 637 478 655 q 380 585 403 620 q 348 501 358 551 q 338 385 338 450 l 338 0 l 215 0 l 215 745 l 315 745 l 333 644 l 339 644 q 380 694 356 673 q 431 730 403 715 q 490 751 459 744 q 554 758 521 758 q 741 693 678 758 q 804 486 804 628 l 804 0 l 680 0 m 203 992 l 212 977 q 189 898 202 939 q 160 815 176 857 q 127 731 144 772 q 92 652 109 690 l 0 652 q 22 737 10 692 q 44 827 33 782 q 63 913 54 871 q 78 992 72 956 l 203 992 "},"Ģ":{x_min:85,x_max:858,ha:958,o:"m 530 524 l 858 524 l 858 36 q 782 15 820 24 q 704 0 744 5 q 620 -10 664 -7 q 526 -14 576 -14 q 337 21 419 -14 q 199 123 255 57 q 114 284 143 189 q 85 497 85 378 q 117 708 85 613 q 211 868 149 802 q 363 970 272 934 q 569 1006 453 1006 q 713 991 644 1006 q 842 947 782 976 l 793 837 q 741 859 769 849 q 683 877 713 869 q 621 890 653 885 q 559 894 590 894 q 412 867 476 894 q 306 788 349 839 q 240 662 263 736 q 218 496 218 588 q 237 334 218 407 q 296 208 255 261 q 401 126 336 155 q 556 97 465 97 q 610 98 585 97 q 656 103 635 100 q 695 109 677 106 q 731 116 714 113 l 731 412 l 530 412 l 530 524 m 437 -288 q 453 -246 444 -271 q 470 -191 462 -220 q 484 -135 478 -163 q 493 -85 491 -107 l 616 -85 l 616 -98 q 601 -141 611 -115 q 575 -197 590 -167 q 541 -255 560 -226 q 503 -307 523 -284 l 437 -307 l 437 -288 "},m:{x_min:118,x_max:1134,ha:1245,o:"m 1010 0 l 1010 479 q 976 611 1010 567 q 871 655 942 655 q 786 639 821 655 q 729 592 752 623 q 697 516 707 562 q 687 410 687 470 l 687 0 l 564 0 l 564 479 q 530 611 564 567 q 425 655 496 655 q 337 637 373 655 q 281 585 302 620 q 250 501 259 551 q 241 385 241 450 l 241 0 l 118 0 l 118 745 l 218 745 l 236 644 l 242 644 q 281 694 259 673 q 330 730 303 715 q 387 751 357 744 q 448 758 417 758 q 584 728 530 758 q 663 634 637 698 l 669 634 q 711 689 686 666 q 765 727 736 712 q 828 750 795 743 q 894 758 860 758 q 1073 693 1013 758 q 1134 486 1134 628 l 1134 0 l 1010 0 "},"Е":{x_min:135,x_max:650,ha:733,o:"m 650 0 l 135 0 l 135 992 l 650 992 l 650 880 l 261 880 l 261 574 l 624 574 l 624 462 l 261 462 l 261 111 l 650 111 l 650 0 "},"ž":{x_min:56,x_max:556.21875,ha:612,o:"m 556 0 l 56 0 l 56 80 l 418 656 l 78 656 l 78 745 l 544 745 l 544 650 l 189 88 l 556 88 l 556 0 m 542 1045 q 501 1000 525 1026 q 455 947 478 974 q 412 892 432 919 q 382 842 392 865 l 251 842 q 221 892 241 865 q 178 947 201 919 q 132 1000 155 974 q 92 1045 109 1026 l 92 1064 l 174 1064 q 244 1008 208 1041 q 317 937 280 975 q 388 1008 352 975 q 460 1064 425 1041 l 542 1064 l 542 1045 "},"á":{x_min:64,x_max:626,ha:737,o:"m 536 0 l 511 102 l 505 102 q 461 50 483 72 q 412 13 439 28 q 353 -7 386 0 q 278 -14 321 -14 q 193 0 232 -14 q 125 40 153 12 q 80 109 96 67 q 64 208 64 151 q 142 379 64 320 q 379 445 220 439 l 503 450 l 503 496 q 494 572 503 541 q 465 620 484 602 q 419 647 447 639 q 357 655 392 655 q 253 639 301 655 q 160 599 204 623 l 117 692 q 228 739 167 720 q 357 758 290 758 q 477 744 427 758 q 560 700 527 730 q 609 623 593 669 q 626 509 626 576 l 626 0 l 536 0 m 310 88 q 386 101 351 88 q 447 140 422 114 q 488 205 473 166 q 502 298 502 245 l 502 365 l 405 360 q 303 346 345 357 q 237 316 262 336 q 202 270 213 297 q 191 208 191 243 q 224 117 191 146 q 310 88 257 88 m 302 860 q 332 905 316 879 q 364 958 348 931 q 395 1013 380 986 q 420 1064 409 1040 l 569 1064 l 569 1049 q 536 1004 558 1031 q 489 946 515 976 q 435 889 463 917 q 384 842 407 860 l 302 842 l 302 860 "},"×":{x_min:95.28125,x_max:670.421875,ha:765,o:"m 310 490 l 95 706 l 166 778 l 381 562 l 599 778 l 670 708 l 452 490 l 669 273 l 599 204 l 381 419 l 166 205 l 96 275 l 310 490 "},"п":{x_min:118,x_max:706,ha:825,o:"m 241 0 l 118 0 l 118 745 l 706 745 l 706 0 l 582 0 l 582 642 l 241 642 l 241 0 "},"Ǻ":{x_min:-.25,x_max:844.25,ha:844,o:"m 575 974 q 554 894 575 926 q 499 844 534 861 l 844 0 l 715 0 l 610 266 l 233 266 l 127 0 l 0 0 l 341 843 q 287 892 307 860 q 268 972 268 925 q 278 1034 268 1007 q 309 1080 289 1061 q 357 1109 329 1099 q 419 1119 385 1119 q 480 1109 452 1119 q 530 1080 509 1099 q 563 1035 551 1061 q 575 974 575 1008 m 566 378 l 466 636 q 456 662 462 647 q 444 696 450 678 q 432 734 438 714 q 421 773 426 754 q 410 734 416 754 q 397 695 404 714 q 386 662 391 677 q 376 636 380 646 l 277 378 l 566 378 m 368 1166 q 398 1203 382 1182 q 430 1246 414 1224 q 460 1290 446 1268 q 486 1331 475 1311 l 635 1331 l 635 1320 q 602 1283 624 1305 q 555 1236 581 1261 q 501 1190 528 1212 q 450 1153 473 1167 l 368 1153 l 368 1166 m 500 973 q 478 1029 500 1008 q 421 1049 456 1049 q 364 1029 386 1049 q 342 973 342 1008 q 360 918 342 938 q 412 896 378 898 l 421 896 q 478 916 456 896 q 500 973 500 937 "},K:{x_min:135,x_max:804.25,ha:804,o:"m 804 0 l 661 0 l 355 473 l 261 396 l 261 0 l 135 0 l 135 992 l 261 992 l 261 496 l 343 609 l 649 992 l 791 992 l 438 559 l 804 0 "},7:{x_min:61,x_max:699,ha:765,o:"m 190 0 l 572 879 l 61 879 l 61 992 l 699 992 l 699 893 l 322 0 l 190 0 "},"¨":{x_min:208,x_max:593,ha:802,o:"m 208 945 q 226 998 208 982 q 273 1015 245 1015 q 319 998 299 1015 q 338 945 338 981 q 319 892 338 909 q 273 876 299 876 q 226 892 245 876 q 208 945 208 909 m 462 945 q 481 998 462 982 q 527 1015 500 1015 q 552 1010 540 1015 q 573 998 564 1006 q 587 977 582 989 q 593 945 593 964 q 573 892 593 909 q 527 876 553 876 q 481 892 500 876 q 462 945 462 909 "},Y:{x_min:-.25,x_max:731.25,ha:732,o:"m 364 490 l 595 992 l 731 992 l 428 386 l 428 0 l 302 0 l 302 379 l 0 992 l 137 992 l 364 490 "},E:{x_min:135,x_max:650,ha:733,o:"m 650 0 l 135 0 l 135 992 l 650 992 l 650 880 l 261 880 l 261 574 l 624 574 l 624 462 l 261 462 l 261 111 l 650 111 l 650 0 "},"Ô":{x_min:85,x_max:945,ha:1031,o:"m 945 496 q 917 287 945 382 q 835 126 890 193 q 701 22 781 59 q 515 -14 620 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 498 85 382 q 110 707 85 613 q 190 867 136 801 q 325 970 243 934 q 517 1007 406 1007 q 701 970 622 1007 q 835 867 781 934 q 917 706 890 800 q 945 496 945 612 m 218 497 q 236 330 218 404 q 290 204 253 255 q 382 124 326 152 q 515 97 438 97 q 648 124 593 97 q 741 204 704 152 q 794 330 777 255 q 811 497 811 404 q 794 664 811 590 q 741 789 777 738 q 649 868 705 840 q 517 895 594 895 q 383 868 439 895 q 290 789 327 840 q 236 664 253 738 q 218 497 218 590 m 744 1071 l 662 1071 q 590 1126 627 1093 q 519 1196 554 1159 q 446 1126 482 1159 q 376 1071 410 1093 l 294 1071 l 294 1089 q 334 1134 311 1108 q 380 1187 357 1160 q 423 1242 403 1215 q 453 1293 443 1269 l 584 1293 q 614 1242 594 1269 q 657 1187 634 1215 q 703 1134 680 1160 q 744 1089 727 1108 l 744 1071 "},"Є":{x_min:85,x_max:798,ha:838,o:"m 538 894 q 419 872 473 894 q 324 809 365 850 q 257 708 283 767 q 222 574 231 649 l 649 574 l 649 462 l 218 462 q 243 307 222 374 q 305 192 265 239 q 403 121 345 145 q 538 97 461 97 q 652 108 598 97 q 760 135 707 120 l 760 26 q 707 8 733 15 q 651 -4 680 0 q 590 -11 622 -9 q 517 -14 557 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 497 85 382 q 114 703 85 609 q 201 864 144 796 q 343 968 258 931 q 538 1006 428 1006 q 677 991 611 1006 q 798 947 744 976 l 745 841 q 652 879 702 863 q 538 894 601 894 "},"Ï":{x_min:43,x_max:428,ha:471,o:"m 414 0 l 55 0 l 55 69 l 172 96 l 172 895 l 55 922 l 55 992 l 414 992 l 414 922 l 298 895 l 298 96 l 414 69 l 414 0 m 43 1174 q 61 1227 43 1211 q 108 1244 80 1244 q 154 1227 134 1244 q 173 1174 173 1210 q 154 1121 173 1138 q 108 1105 134 1105 q 61 1121 80 1105 q 43 1174 43 1138 m 297 1174 q 316 1227 297 1211 q 362 1244 335 1244 q 387 1239 375 1244 q 408 1227 399 1235 q 422 1206 417 1218 q 428 1174 428 1193 q 408 1121 428 1138 q 362 1105 388 1105 q 316 1121 335 1105 q 297 1174 297 1138 "},"ġ":{x_min:25,x_max:692.484375,ha:720,o:"m 692 745 l 692 668 l 559 649 q 591 588 578 625 q 604 504 604 551 q 588 409 604 453 q 539 333 572 365 q 459 283 507 301 q 348 266 412 266 q 319 266 333 266 q 294 268 304 266 q 271 253 282 261 q 251 233 260 244 q 236 208 242 222 q 230 178 230 194 q 238 148 230 159 q 260 130 246 136 q 293 122 274 124 q 333 120 312 120 l 453 120 q 560 104 516 120 q 631 61 603 88 q 670 -2 658 34 q 683 -80 683 -38 q 660 -186 683 -139 q 593 -266 638 -233 q 478 -316 547 -298 q 314 -334 408 -334 q 187 -319 241 -334 q 96 -278 132 -305 q 42 -213 60 -251 q 25 -128 25 -175 q 38 -57 25 -87 q 73 -4 51 -26 q 125 32 96 17 q 187 53 155 46 q 140 94 158 66 q 122 159 122 122 q 143 231 122 201 q 212 291 165 262 q 158 324 182 303 q 118 373 134 346 q 92 433 101 401 q 83 500 83 466 q 99 608 83 561 q 150 689 116 656 q 233 740 183 722 q 348 758 282 758 q 400 754 373 758 q 445 745 427 750 l 692 745 m 141 -126 q 150 -173 141 -151 q 179 -211 159 -195 q 232 -235 199 -226 q 314 -245 265 -245 q 503 -205 440 -245 q 566 -92 566 -166 q 558 -41 566 -61 q 531 -10 550 -21 q 482 4 512 0 q 407 8 451 8 l 287 8 q 238 3 263 8 q 190 -17 212 -2 q 155 -58 169 -32 q 141 -126 141 -84 m 206 504 q 242 388 206 426 q 344 350 278 350 q 446 388 411 350 q 480 506 480 426 q 445 629 480 590 q 343 669 410 669 q 241 628 277 669 q 206 504 206 587 m 273 945 q 293 1004 273 986 q 344 1023 314 1023 q 373 1018 359 1023 q 396 1004 386 1014 q 411 980 405 995 q 417 945 417 966 q 396 887 417 906 q 344 868 374 868 q 293 886 314 868 q 273 945 273 905 "},"έ":{x_min:61,x_max:583,ha:629,o:"m 453 439 l 453 336 l 366 336 q 229 305 273 336 q 184 210 184 274 q 198 152 184 176 q 235 114 212 129 q 291 94 259 100 q 360 88 323 88 q 426 93 395 88 q 484 106 457 98 q 535 125 511 114 q 580 146 559 135 l 580 37 q 486 0 540 14 q 359 -14 433 -14 q 226 2 282 -14 q 133 48 170 19 q 78 117 96 77 q 61 203 61 157 q 73 275 61 245 q 108 326 86 305 q 157 361 129 347 q 215 385 185 375 l 215 392 q 162 416 185 402 q 121 452 138 431 q 94 500 103 473 q 85 561 85 527 q 104 645 85 608 q 159 707 124 682 q 244 745 195 732 q 351 758 293 758 q 417 754 387 758 q 475 745 448 751 q 529 729 503 739 q 583 706 555 720 l 540 606 q 445 642 489 629 q 353 655 401 655 q 240 629 279 655 q 201 551 201 603 q 214 499 201 520 q 252 464 228 477 q 311 445 277 451 q 386 439 345 439 l 453 439 m 305 860 q 318 906 311 880 q 331 960 325 932 q 343 1014 338 987 q 352 1064 349 1041 l 487 1064 l 487 1049 q 471 1007 482 1033 q 445 951 460 980 q 412 892 429 921 q 378 842 394 863 l 305 842 l 305 860 "}," ":{x_min:0,x_max:0,ha:463},"ϋ":{x_min:111,x_max:736,ha:819,o:"m 409 -14 q 264 13 322 -14 q 172 87 206 40 q 124 199 138 135 q 111 337 111 263 l 111 745 l 234 745 l 234 345 q 245 239 234 286 q 278 158 256 192 q 335 106 300 125 q 417 88 370 88 q 564 167 516 88 q 612 412 612 245 q 609 503 612 461 q 601 585 606 545 q 587 664 595 625 q 569 745 580 703 l 693 745 q 711 664 703 703 q 725 585 719 626 q 733 501 730 545 q 736 406 736 457 q 653 88 736 190 q 409 -14 570 -14 m 208 945 q 226 998 208 982 q 273 1015 245 1015 q 319 998 299 1015 q 338 945 338 981 q 319 892 338 909 q 273 876 299 876 q 226 892 245 876 q 208 945 208 909 m 462 945 q 481 998 462 982 q 527 1015 500 1015 q 552 1010 540 1015 q 573 998 564 1006 q 587 977 582 989 q 593 945 593 964 q 573 892 593 909 q 527 876 553 876 q 481 892 500 876 q 462 945 462 909 "},"й":{x_min:118,x_max:735,ha:853,o:"m 234 745 l 234 291 l 226 120 l 576 745 l 735 745 l 735 0 l 618 0 l 618 439 l 625 622 l 276 0 l 118 0 l 118 745 l 234 745 m 686 1058 q 665 964 681 1005 q 617 897 648 924 q 537 855 585 869 q 421 842 489 842 q 304 855 352 842 q 227 895 256 868 q 183 963 197 922 q 166 1058 169 1003 l 281 1058 q 293 990 284 1016 q 320 949 303 964 q 362 929 337 934 q 424 923 388 923 q 479 930 454 923 q 522 952 504 937 q 552 993 540 968 q 567 1058 563 1019 l 686 1058 "},b:{x_min:118,x_max:737,ha:814,o:"m 454 758 q 570 733 518 758 q 659 660 622 709 q 716 540 696 612 q 737 373 737 468 q 716 205 737 277 q 659 84 696 133 q 570 10 622 35 q 454 -14 518 -14 q 381 -5 414 -14 q 323 18 349 3 q 277 52 297 32 q 241 93 257 72 l 233 93 l 208 0 l 118 0 l 118 1055 l 241 1055 l 241 800 q 240 749 241 776 q 238 699 240 722 q 236 646 237 672 l 241 646 q 276 690 257 670 q 322 726 296 711 q 381 749 348 741 q 454 758 413 758 m 430 655 q 340 638 376 655 q 281 585 303 621 q 250 497 259 550 q 241 373 241 444 q 250 251 241 304 q 281 162 259 198 q 340 107 303 125 q 431 88 377 88 q 566 162 523 88 q 609 374 609 236 q 566 585 609 515 q 430 655 523 655 "},"ύ":{x_min:111,x_max:736,ha:819,o:"m 409 -14 q 264 13 322 -14 q 172 87 206 40 q 124 199 138 135 q 111 337 111 263 l 111 745 l 234 745 l 234 345 q 245 239 234 286 q 278 158 256 192 q 335 106 300 125 q 417 88 370 88 q 564 167 516 88 q 612 412 612 245 q 609 503 612 461 q 601 585 606 545 q 587 664 595 625 q 569 745 580 703 l 693 745 q 711 664 703 703 q 725 585 719 626 q 733 501 730 545 q 736 406 736 457 q 653 88 736 190 q 409 -14 570 -14 m 352 860 q 365 906 358 880 q 378 960 372 932 q 390 1014 385 987 q 399 1064 396 1041 l 534 1064 l 534 1049 q 518 1007 529 1033 q 492 951 507 980 q 459 892 476 921 q 425 842 441 863 l 352 842 l 352 860 "},"ﬂ":{x_min:19,x_max:698.4375,ha:817,o:"m 441 656 l 274 656 l 274 0 l 151 0 l 151 656 l 19 656 l 19 704 l 151 749 l 151 814 q 166 934 151 886 q 210 1010 181 982 q 280 1051 238 1039 q 375 1063 322 1063 q 449 1055 415 1063 q 509 1037 482 1047 l 477 941 q 431 954 456 949 q 379 960 406 960 q 332 954 352 960 q 300 931 313 947 q 280 887 287 915 q 274 815 274 859 l 274 745 l 441 745 l 441 656 m 698 0 l 575 0 l 575 1055 l 698 1055 l 698 0 "},"ф":{x_min:77,x_max:892,ha:968,o:"m 545 756 q 685 719 621 747 q 794 641 749 690 q 866 525 840 593 q 892 373 892 458 q 868 221 892 289 q 799 104 844 153 q 689 25 753 54 q 545 -11 625 -3 l 545 -334 l 429 -334 l 429 -11 q 286 24 351 -4 q 175 103 221 54 q 102 220 128 151 q 77 373 77 288 q 101 526 77 458 q 170 642 125 593 q 281 719 215 690 q 429 756 346 748 l 429 1055 l 545 1055 l 545 756 m 204 373 q 257 175 204 246 q 429 91 310 104 l 429 653 q 326 626 369 647 q 256 571 284 606 q 217 486 229 536 q 204 373 204 437 m 764 373 q 712 569 764 500 q 545 652 660 638 l 545 91 q 712 175 661 104 q 764 373 764 246 "},"Ŋ":{x_min:135,x_max:878,ha:1013,o:"m 615 -264 q 554 -259 580 -264 q 510 -247 528 -255 l 510 -139 q 557 -149 532 -145 q 613 -152 583 -152 q 662 -146 637 -152 q 706 -122 686 -139 q 739 -76 726 -105 q 751 0 751 -46 l 253 821 l 248 821 q 255 717 252 768 q 259 624 257 673 q 261 538 261 576 l 261 0 l 135 0 l 135 992 l 288 992 l 757 202 l 762 202 q 757 291 759 246 q 753 371 755 329 q 751 449 751 413 l 751 992 l 878 992 l 878 13 q 859 -109 878 -57 q 806 -196 840 -162 q 724 -247 772 -230 q 615 -264 675 -264 "},"Ũ":{x_min:125,x_max:845,ha:970,o:"m 845 993 l 845 349 q 822 205 845 272 q 755 90 800 139 q 641 13 709 41 q 481 -14 573 -14 q 327 12 394 -14 q 216 86 261 38 q 148 202 171 134 q 125 352 125 269 l 125 991 l 251 991 l 251 346 q 309 162 251 227 q 487 97 368 97 q 591 115 548 97 q 663 167 635 133 q 704 246 690 200 q 718 347 718 292 l 718 993 l 845 993 m 585 1072 q 531 1083 558 1072 q 479 1110 505 1095 q 429 1136 453 1124 q 384 1148 405 1148 q 337 1130 353 1148 q 311 1070 321 1112 l 241 1070 q 255 1144 244 1111 q 284 1201 266 1177 q 327 1237 302 1224 q 384 1250 352 1250 q 440 1238 412 1250 q 493 1211 467 1226 q 542 1185 519 1197 q 585 1173 566 1173 q 631 1191 616 1173 q 657 1251 647 1209 l 729 1251 q 714 1177 725 1210 q 685 1121 703 1144 q 642 1084 667 1097 q 585 1072 617 1072 "},"Щ":{x_min:135,x_max:1369,ha:1385,o:"m 1250 111 l 1369 111 l 1369 -261 l 1242 -261 l 1242 0 l 135 0 l 135 992 l 261 992 l 261 111 l 629 111 l 629 992 l 755 992 l 755 111 l 1123 111 l 1123 992 l 1250 992 l 1250 111 "},L:{x_min:135,x_max:649.4375,ha:682,o:"m 135 0 l 135 992 l 261 992 l 261 111 l 649 111 l 649 0 l 135 0 "},"ď":{x_min:77,x_max:924,ha:814,o:"m 577 99 l 572 99 q 537 55 557 76 q 491 19 517 34 q 432 -5 465 3 q 359 -14 400 -14 q 244 10 296 -14 q 154 83 192 34 q 97 203 117 131 q 77 370 77 275 q 97 538 77 466 q 154 659 117 610 q 244 733 192 708 q 359 758 296 758 q 432 749 399 758 q 490 725 464 740 q 537 690 516 710 q 572 649 557 671 l 580 649 q 576 693 578 672 q 573 729 575 711 q 572 759 572 748 l 572 1055 l 696 1055 l 696 0 l 596 0 l 577 99 m 383 88 q 470 104 434 88 q 528 151 506 119 q 560 231 550 183 q 572 342 571 279 l 572 370 q 563 492 572 439 q 532 581 554 545 q 473 636 510 618 q 382 655 437 655 q 247 581 290 655 q 204 369 204 507 q 247 157 204 227 q 383 88 290 88 m 760 850 q 772 897 766 871 q 784 950 778 923 q 794 1005 789 978 q 801 1055 799 1032 l 924 1055 l 924 1041 q 909 997 919 1024 q 885 942 898 971 q 855 883 871 913 q 825 833 840 854 l 760 833 l 760 850 "},"Ο":{x_min:85,x_max:945,ha:1031,o:"m 945 496 q 917 287 945 382 q 835 126 890 193 q 701 22 781 59 q 515 -14 620 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 498 85 382 q 110 707 85 613 q 190 867 136 801 q 325 970 243 934 q 517 1007 406 1007 q 701 970 622 1007 q 835 867 781 934 q 917 706 890 800 q 945 496 945 612 m 218 497 q 236 330 218 404 q 290 204 253 255 q 382 124 326 152 q 515 97 438 97 q 648 124 593 97 q 741 204 704 152 q 794 330 777 255 q 811 497 811 404 q 794 664 811 590 q 741 789 777 738 q 649 868 705 840 q 517 895 594 895 q 383 868 439 895 q 290 789 327 840 q 236 664 253 738 q 218 497 218 590 "},"Ĭ":{x_min:33,x_max:441,ha:471,o:"m 414 0 l 55 0 l 55 69 l 172 96 l 172 895 l 55 922 l 55 992 l 414 992 l 414 922 l 298 895 l 298 96 l 414 69 l 414 0 m 441 1259 q 423 1183 438 1217 q 382 1123 408 1149 q 319 1084 356 1098 q 234 1071 282 1071 q 147 1084 184 1071 q 86 1122 110 1097 q 48 1181 61 1147 q 33 1259 35 1216 l 107 1259 q 119 1212 110 1229 q 145 1186 129 1194 q 184 1175 161 1177 q 237 1172 207 1172 q 283 1175 261 1172 q 323 1188 305 1178 q 352 1214 340 1197 q 366 1259 363 1231 l 441 1259 "},"ŧ":{x_min:23,x_max:445,ha:471,o:"m 343 88 q 371 89 355 88 q 400 93 386 91 q 426 97 415 95 q 445 102 438 100 l 445 8 q 422 0 436 3 q 392 -7 409 -4 q 358 -12 376 -10 q 324 -14 341 -14 q 246 -3 282 -14 q 184 34 210 8 q 142 107 157 61 q 128 222 128 153 l 128 395 l 33 395 l 33 484 l 128 484 l 128 656 l 23 656 l 23 709 l 128 759 l 180 915 l 251 915 l 251 745 l 439 745 l 439 656 l 251 656 l 251 484 l 427 484 l 427 395 l 251 395 l 251 222 q 272 122 251 155 q 343 88 294 88 "},"À":{x_min:-.25,x_max:844.25,ha:844,o:"m 715 0 l 606 307 l 237 307 l 127 0 l 0 0 l 364 996 l 479 996 l 844 0 l 715 0 m 566 419 l 466 706 q 456 736 462 719 q 444 774 450 754 q 432 817 438 795 q 421 860 426 839 q 410 816 416 839 q 397 773 404 794 q 386 735 391 752 q 376 706 380 718 l 277 419 l 566 419 m 488 1071 l 406 1071 q 354 1118 382 1089 q 300 1175 326 1146 q 253 1233 274 1205 q 221 1278 231 1260 l 221 1293 l 369 1293 q 395 1242 380 1269 q 425 1187 409 1215 q 457 1134 441 1160 q 488 1089 473 1108 l 488 1071 "},"Ϊ":{x_min:43,x_max:428,ha:471,o:"m 414 0 l 55 0 l 55 69 l 172 96 l 172 895 l 55 922 l 55 992 l 414 992 l 414 922 l 298 895 l 298 96 l 414 69 l 414 0 m 43 1174 q 61 1227 43 1211 q 108 1244 80 1244 q 154 1227 134 1244 q 173 1174 173 1210 q 154 1121 173 1138 q 108 1105 134 1105 q 61 1121 80 1105 q 43 1174 43 1138 m 297 1174 q 316 1227 297 1211 q 362 1244 335 1244 q 387 1239 375 1244 q 408 1227 399 1235 q 422 1206 417 1218 q 428 1174 428 1193 q 408 1121 428 1138 q 362 1105 388 1105 q 316 1121 335 1105 q 297 1174 297 1138 "},"ḁ":{x_min:64,x_max:626,ha:737,o:"m 536 0 l 511 102 l 505 102 q 461 50 483 72 q 412 13 439 28 q 353 -7 386 0 q 278 -14 321 -14 q 193 0 232 -14 q 125 40 153 12 q 80 109 96 67 q 64 208 64 151 q 142 379 64 320 q 379 445 220 439 l 503 450 l 503 496 q 494 572 503 541 q 465 620 484 602 q 419 647 447 639 q 357 655 392 655 q 253 639 301 655 q 160 599 204 623 l 117 692 q 228 739 167 720 q 357 758 290 758 q 477 744 427 758 q 560 700 527 730 q 609 623 593 669 q 626 509 626 576 l 626 0 l 536 0 m 310 88 q 386 101 351 88 q 447 140 422 114 q 488 205 473 166 q 502 298 502 245 l 502 365 l 405 360 q 303 346 345 357 q 237 316 262 336 q 202 270 213 297 q 191 208 191 243 q 224 117 191 146 q 310 88 257 88 m 512 -229 q 500 -291 512 -264 q 467 -338 488 -319 q 418 -367 446 -357 q 356 -377 389 -377 q 294 -367 322 -377 q 246 -338 266 -357 q 215 -292 226 -319 q 205 -231 205 -265 q 215 -169 205 -196 q 246 -123 226 -142 q 294 -94 266 -104 q 356 -85 322 -85 q 417 -94 389 -85 q 467 -123 446 -104 q 500 -168 488 -142 q 512 -229 512 -195 m 437 -231 q 415 -174 437 -194 q 358 -154 392 -154 q 301 -174 323 -154 q 279 -231 279 -194 q 299 -287 279 -267 q 358 -307 319 -307 q 415 -287 392 -307 q 437 -231 437 -267 "},"½":{x_min:29,x_max:976.734375,ha:1023,o:"m 194 992 l 284 992 l 284 397 l 188 397 l 188 754 q 188 792 188 771 q 189 833 188 813 q 191 873 190 854 q 193 908 192 893 q 171 881 183 895 q 143 853 158 866 l 79 799 l 29 864 l 194 992 m 801 992 l 250 0 l 143 0 l 694 992 l 801 992 m 976 0 l 588 0 l 588 75 l 730 230 q 793 300 769 272 q 832 352 818 329 q 850 394 845 374 q 856 437 856 414 q 833 502 856 481 q 774 523 810 523 q 707 506 739 523 q 645 463 675 489 l 592 527 q 673 584 628 561 q 774 607 719 607 q 848 595 815 607 q 904 563 881 584 q 940 510 927 541 q 953 440 953 479 q 942 377 953 406 q 911 318 931 347 q 862 258 891 289 q 794 190 832 227 l 684 83 l 976 83 l 976 0 "},"'":{x_min:90,x_max:223.609375,ha:314,o:"m 223 992 l 195 634 l 117 634 l 90 992 l 223 992 "},"ĳ":{x_min:108.5,x_max:611.96875,ha:720,o:"m 241 0 l 118 0 l 118 745 l 241 745 l 241 0 m 108 945 q 129 1004 108 986 q 180 1023 149 1023 q 208 1018 195 1023 q 231 1004 221 1014 q 247 980 241 995 q 252 945 252 966 q 231 887 252 906 q 180 868 210 868 q 129 886 149 868 q 108 945 108 905 m 403 -334 q 349 -329 371 -334 q 313 -317 328 -324 l 313 -217 q 348 -227 330 -224 q 390 -231 367 -231 q 424 -226 409 -231 q 452 -208 440 -221 q 470 -172 464 -194 q 477 -116 477 -150 l 477 745 l 600 745 l 600 -107 q 588 -201 600 -159 q 552 -272 577 -243 q 491 -318 528 -302 q 403 -334 454 -334 m 467 945 q 488 1004 467 986 q 539 1023 508 1023 q 567 1018 554 1023 q 590 1004 580 1014 q 606 980 600 995 q 611 945 611 966 q 590 887 611 906 q 539 868 569 868 q 488 886 508 868 q 467 945 467 905 "},"Р":{x_min:135,x_max:729,ha:800,o:"m 729 701 q 710 582 729 639 q 648 482 691 525 q 536 412 606 438 q 362 386 465 386 l 261 386 l 261 0 l 135 0 l 135 992 l 380 992 q 537 972 471 992 q 645 916 602 953 q 708 825 688 879 q 729 701 729 770 m 261 493 l 347 493 q 456 504 410 493 q 533 539 503 515 q 579 601 564 563 q 595 695 595 640 q 540 837 595 791 q 368 884 485 884 l 261 884 l 261 493 "},"˛":{x_min:21,x_max:237,ha:257,o:"m 118 -161 q 136 -206 118 -191 q 178 -220 154 -220 q 211 -218 195 -220 q 237 -214 227 -217 l 237 -291 q 197 -299 219 -296 q 156 -302 176 -302 q 54 -266 88 -302 q 21 -170 21 -231 q 30 -116 21 -142 q 56 -69 40 -91 q 89 -30 71 -48 q 125 0 108 -12 l 212 0 q 118 -161 118 -90 "},"Ć":{x_min:85,x_max:798,ha:838,o:"m 538 894 q 406 867 465 894 q 305 788 347 839 q 241 662 264 736 q 218 496 218 588 q 238 326 218 400 q 298 200 258 251 q 398 123 338 150 q 538 97 458 97 q 652 108 598 97 q 760 135 707 120 l 760 26 q 707 8 733 15 q 651 -4 680 0 q 590 -11 622 -9 q 517 -14 557 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 497 85 382 q 114 703 85 609 q 201 864 144 796 q 343 968 258 931 q 538 1006 428 1006 q 677 991 611 1006 q 798 947 744 976 l 745 841 q 652 879 702 863 q 538 894 601 894 m 447 1089 q 477 1134 461 1108 q 509 1187 493 1160 q 540 1242 525 1215 q 565 1293 554 1269 l 714 1293 l 714 1278 q 681 1233 703 1260 q 634 1175 660 1205 q 580 1118 608 1146 q 529 1071 552 1089 l 447 1071 l 447 1089 "},"Т":{x_min:14,x_max:706,ha:721,o:"m 423 0 l 297 0 l 297 880 l 14 880 l 14 992 l 706 992 l 706 880 l 423 880 l 423 0 "},"£":{x_min:46,x_max:718,ha:765,o:"m 451 1004 q 582 988 523 1004 q 686 948 641 972 l 641 850 q 556 884 603 869 q 457 898 508 898 q 397 889 425 898 q 349 860 370 880 q 318 809 329 840 q 307 732 307 777 l 307 534 l 561 534 l 561 437 l 307 437 l 307 295 q 299 224 307 254 q 278 173 291 194 q 248 137 265 152 q 212 112 230 123 l 718 112 l 718 0 l 46 0 l 46 103 q 100 124 75 110 q 143 161 125 138 q 171 216 161 183 q 182 294 182 249 l 182 437 l 47 437 l 47 534 l 182 534 l 182 753 q 201 859 182 812 q 257 937 221 905 q 342 987 293 970 q 451 1004 392 1004 "},"ů":{x_min:111,x_max:700,ha:818,o:"m 600 0 l 582 99 l 575 99 q 534 48 558 70 q 483 13 511 27 q 424 -7 455 0 q 360 -14 393 -14 q 252 1 299 -14 q 174 50 205 17 q 126 135 142 83 q 111 258 111 186 l 111 745 l 234 745 l 234 264 q 270 132 234 176 q 381 88 306 88 q 474 106 436 88 q 534 158 511 123 q 566 242 556 192 q 576 357 576 292 l 576 745 l 700 745 l 700 0 l 600 0 m 563 989 q 551 927 563 954 q 518 880 539 899 q 469 851 497 861 q 407 842 440 842 q 345 851 373 842 q 297 880 317 861 q 266 926 277 899 q 256 988 256 953 q 266 1049 256 1022 q 297 1095 277 1076 q 345 1124 317 1114 q 407 1134 373 1134 q 468 1124 440 1134 q 518 1095 497 1114 q 551 1050 539 1076 q 563 989 563 1023 m 488 988 q 466 1044 488 1024 q 409 1064 444 1064 q 352 1044 374 1064 q 330 988 330 1024 q 350 931 330 951 q 409 911 370 911 q 466 931 444 911 q 488 988 488 951 "},"Ō":{x_min:85,x_max:945,ha:1031,o:"m 945 496 q 917 287 945 382 q 835 126 890 193 q 701 22 781 59 q 515 -14 620 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 498 85 382 q 110 707 85 613 q 190 867 136 801 q 325 970 243 934 q 517 1007 406 1007 q 701 970 622 1007 q 835 867 781 934 q 917 706 890 800 q 945 496 945 612 m 218 497 q 236 330 218 404 q 290 204 253 255 q 382 124 326 152 q 515 97 438 97 q 648 124 593 97 q 741 204 704 152 q 794 330 777 255 q 811 497 811 404 q 794 664 811 590 q 741 789 777 738 q 649 868 705 840 q 517 895 594 895 q 383 868 439 895 q 290 789 327 840 q 236 664 253 738 q 218 497 218 590 m 320 1172 l 710 1172 l 710 1071 l 320 1071 l 320 1172 "},"а":{x_min:64,x_max:626,ha:737,o:"m 536 0 l 511 102 l 505 102 q 461 50 483 72 q 412 13 439 28 q 353 -7 386 0 q 278 -14 321 -14 q 193 0 232 -14 q 125 40 153 12 q 80 109 96 67 q 64 208 64 151 q 142 379 64 320 q 379 445 220 439 l 503 450 l 503 496 q 494 572 503 541 q 465 620 484 602 q 419 647 447 639 q 357 655 392 655 q 253 639 301 655 q 160 599 204 623 l 117 692 q 228 739 167 720 q 357 758 290 758 q 477 744 427 758 q 560 700 527 730 q 609 623 593 669 q 626 509 626 576 l 626 0 l 536 0 m 310 88 q 386 101 351 88 q 447 140 422 114 q 488 205 473 166 q 502 298 502 245 l 502 365 l 405 360 q 303 346 345 357 q 237 316 262 336 q 202 270 213 297 q 191 208 191 243 q 224 117 191 146 q 310 88 257 88 "},"Ğ":{x_min:85,x_max:858,ha:958,o:"m 530 524 l 858 524 l 858 36 q 782 15 820 24 q 704 0 744 5 q 620 -10 664 -7 q 526 -14 576 -14 q 337 21 419 -14 q 199 123 255 57 q 114 284 143 189 q 85 497 85 378 q 117 708 85 613 q 211 868 149 802 q 363 970 272 934 q 569 1006 453 1006 q 713 991 644 1006 q 842 947 782 976 l 793 837 q 741 859 769 849 q 683 877 713 869 q 621 890 653 885 q 559 894 590 894 q 412 867 476 894 q 306 788 349 839 q 240 662 263 736 q 218 496 218 588 q 237 334 218 407 q 296 208 255 261 q 401 126 336 155 q 556 97 465 97 q 610 98 585 97 q 656 103 635 100 q 695 109 677 106 q 731 116 714 113 l 731 412 l 530 412 l 530 524 m 740 1259 q 722 1183 737 1217 q 681 1123 707 1149 q 618 1084 655 1098 q 533 1071 581 1071 q 446 1084 483 1071 q 385 1122 409 1097 q 347 1181 360 1147 q 332 1259 334 1216 l 406 1259 q 418 1212 409 1229 q 444 1186 428 1194 q 483 1175 460 1177 q 536 1172 506 1172 q 582 1175 560 1172 q 622 1188 604 1178 q 651 1214 639 1197 q 665 1259 662 1231 l 740 1259 "},v:{x_min:-.25,x_max:665.25,ha:665,o:"m 254 0 l 0 745 l 127 745 l 262 330 q 280 272 269 308 q 300 200 290 237 q 319 131 310 164 q 330 82 327 99 l 335 82 q 346 131 338 99 q 364 200 354 164 q 385 272 375 237 q 402 330 395 308 l 537 745 l 665 745 l 410 0 l 254 0 "},"Ї":{x_min:43,x_max:428,ha:471,o:"m 414 0 l 55 0 l 55 69 l 172 96 l 172 895 l 55 922 l 55 992 l 414 992 l 414 922 l 298 895 l 298 96 l 414 69 l 414 0 m 43 1174 q 61 1227 43 1211 q 108 1244 80 1244 q 154 1227 134 1244 q 173 1174 173 1210 q 154 1121 173 1138 q 108 1105 134 1105 q 61 1121 80 1105 q 43 1174 43 1138 m 297 1174 q 316 1227 297 1211 q 362 1244 335 1244 q 387 1239 375 1244 q 408 1227 399 1235 q 422 1206 417 1218 q 428 1174 428 1193 q 408 1121 428 1138 q 362 1105 388 1105 q 316 1121 335 1105 q 297 1174 297 1138 "},"û":{x_min:111,x_max:700,ha:818,o:"m 600 0 l 582 99 l 575 99 q 534 48 558 70 q 483 13 511 27 q 424 -7 455 0 q 360 -14 393 -14 q 252 1 299 -14 q 174 50 205 17 q 126 135 142 83 q 111 258 111 186 l 111 745 l 234 745 l 234 264 q 270 132 234 176 q 381 88 306 88 q 474 106 436 88 q 534 158 511 123 q 566 242 556 192 q 576 357 576 292 l 576 745 l 700 745 l 700 0 l 600 0 m 631 842 l 549 842 q 477 897 514 864 q 406 967 441 930 q 333 897 369 930 q 263 842 297 864 l 181 842 l 181 860 q 221 905 198 879 q 267 958 244 931 q 310 1013 290 986 q 340 1064 330 1040 l 471 1064 q 501 1013 481 1040 q 544 958 521 986 q 590 905 567 931 q 631 860 614 879 l 631 842 "},"Ź":{x_min:56,x_max:693,ha:749,o:"m 693 0 l 56 0 l 56 97 l 537 880 l 70 880 l 70 992 l 679 992 l 679 894 l 197 111 l 693 111 l 693 0 m 305 1089 q 335 1134 319 1108 q 367 1187 351 1160 q 398 1242 383 1215 q 423 1293 412 1269 l 572 1293 l 572 1278 q 539 1233 561 1260 q 492 1175 518 1205 q 438 1118 466 1146 q 387 1071 410 1089 l 305 1071 l 305 1089 "},"ˉ":{x_min:192,x_max:582,ha:774,o:"m 192 943 l 582 943 l 582 842 l 192 842 l 192 943 "},"Ĺ":{x_min:135,x_max:649.4375,ha:682,o:"m 135 0 l 135 992 l 261 992 l 261 111 l 649 111 l 649 0 l 135 0 m 161 1089 q 191 1134 175 1108 q 223 1187 207 1160 q 254 1242 239 1215 q 279 1293 268 1269 l 428 1293 l 428 1278 q 395 1233 417 1260 q 348 1175 374 1205 q 294 1118 322 1146 q 243 1071 266 1089 l 161 1071 l 161 1089 "},"₤":{x_min:46,x_max:718,ha:765,o:"m 451 1004 q 582 988 523 1004 q 686 948 641 972 l 641 850 q 556 884 603 869 q 457 898 508 898 q 397 889 425 898 q 349 860 370 880 q 318 809 329 840 q 307 733 307 777 l 307 604 l 561 604 l 561 507 l 307 507 l 307 404 l 561 404 l 561 307 l 307 307 l 307 294 q 299 223 307 253 q 278 172 291 194 q 248 137 265 151 q 212 112 230 123 l 718 112 l 718 0 l 46 0 l 46 104 q 100 125 75 111 q 143 161 125 138 q 171 216 161 184 q 182 293 182 248 l 182 307 l 47 307 l 47 404 l 182 404 l 182 507 l 47 507 l 47 604 l 182 604 l 182 753 q 201 859 182 812 q 257 937 221 905 q 342 987 293 970 q 451 1004 392 1004 "},"Č":{x_min:85,x_max:798,ha:838,o:"m 538 894 q 406 867 465 894 q 305 788 347 839 q 241 662 264 736 q 218 496 218 588 q 238 326 218 400 q 298 200 258 251 q 398 123 338 150 q 538 97 458 97 q 652 108 598 97 q 760 135 707 120 l 760 26 q 707 8 733 15 q 651 -4 680 0 q 590 -11 622 -9 q 517 -14 557 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 497 85 382 q 114 703 85 609 q 201 864 144 796 q 343 968 258 931 q 538 1006 428 1006 q 677 991 611 1006 q 798 947 744 976 l 745 841 q 652 879 702 863 q 538 894 601 894 m 739 1274 q 698 1229 722 1255 q 652 1176 675 1203 q 609 1121 629 1148 q 579 1071 589 1094 l 448 1071 q 418 1121 438 1094 q 375 1176 398 1148 q 329 1229 352 1203 q 289 1274 306 1255 l 289 1293 l 371 1293 q 441 1237 405 1270 q 514 1166 477 1204 q 585 1237 549 1204 q 657 1293 622 1270 l 739 1293 l 739 1274 "},x:{
x_min:24,x_max:670,ha:695,o:"m 276 382 l 38 745 l 178 745 l 347 466 l 517 745 l 658 745 l 416 382 l 670 0 l 529 0 l 347 295 l 164 0 l 24 0 l 276 382 "},"è":{x_min:77,x_max:673,ha:743,o:"m 412 -14 q 276 11 337 -14 q 170 84 214 36 q 101 203 125 132 q 77 366 77 274 q 99 531 77 458 q 162 654 121 604 q 259 731 202 705 q 384 758 316 758 q 505 733 451 758 q 595 665 558 709 q 653 560 633 621 q 673 423 673 498 l 673 346 l 204 346 q 259 155 207 216 q 413 93 311 93 q 477 97 448 93 q 534 107 507 100 q 587 123 561 113 q 639 145 613 133 l 639 35 q 586 13 612 22 q 533 -2 560 3 q 476 -11 505 -8 q 412 -14 446 -14 m 384 655 q 260 602 306 655 q 207 449 214 549 l 545 449 q 536 533 545 495 q 507 598 526 571 q 457 640 487 625 q 384 655 427 655 m 461 842 l 379 842 q 327 889 355 860 q 273 946 299 917 q 226 1004 247 976 q 194 1049 204 1031 l 194 1064 l 342 1064 q 368 1013 353 1040 q 398 958 382 986 q 430 905 414 931 q 461 860 446 879 l 461 842 "},"Ń":{x_min:135,x_max:878,ha:1013,o:"m 878 0 l 724 0 l 253 821 l 248 821 q 255 717 252 768 q 259 624 257 673 q 261 538 261 576 l 261 0 l 135 0 l 135 992 l 288 992 l 757 174 l 762 174 q 757 276 759 226 q 755 321 756 298 q 753 366 754 343 q 752 410 752 389 q 751 449 751 431 l 751 992 l 878 992 l 878 0 m 431 1089 q 461 1134 445 1108 q 493 1187 477 1160 q 524 1242 509 1215 q 549 1293 538 1269 l 698 1293 l 698 1278 q 665 1233 687 1260 q 618 1175 644 1205 q 564 1118 592 1146 q 513 1071 536 1089 l 431 1071 l 431 1089 "},"ḿ":{x_min:118,x_max:1134,ha:1245,o:"m 1010 0 l 1010 479 q 976 611 1010 567 q 871 655 942 655 q 786 639 821 655 q 729 592 752 623 q 697 516 707 562 q 687 410 687 470 l 687 0 l 564 0 l 564 479 q 530 611 564 567 q 425 655 496 655 q 337 637 373 655 q 281 585 302 620 q 250 501 259 551 q 241 385 241 450 l 241 0 l 118 0 l 118 745 l 218 745 l 236 644 l 242 644 q 281 694 259 673 q 330 730 303 715 q 387 751 357 744 q 448 758 417 758 q 584 728 530 758 q 663 634 637 698 l 669 634 q 711 689 686 666 q 765 727 736 712 q 828 750 795 743 q 894 758 860 758 q 1073 693 1013 758 q 1134 486 1134 628 l 1134 0 l 1010 0 m 575 860 q 605 905 589 879 q 637 958 621 931 q 668 1013 653 986 q 693 1064 682 1040 l 842 1064 l 842 1049 q 809 1004 831 1031 q 762 946 788 976 q 708 889 736 917 q 657 842 680 860 l 575 842 l 575 860 "},"μ":{x_min:118,x_max:706,ha:825,o:"m 241 264 q 277 132 241 176 q 388 88 313 88 q 481 106 443 88 q 540 158 518 123 q 573 242 563 192 q 582 357 582 292 l 582 745 l 706 745 l 706 0 l 606 0 l 588 99 l 581 99 q 500 14 548 42 q 381 -14 451 -14 q 296 1 332 -14 q 237 45 261 17 q 239 -7 238 19 q 241 -59 240 -30 q 241 -117 241 -88 l 241 -334 l 118 -334 l 118 745 l 241 745 l 241 264 "},".":{x_min:100,x_max:272,ha:372,o:"m 100 74 q 106 118 100 100 q 125 147 113 136 q 152 163 136 158 q 186 169 167 169 q 219 163 203 169 q 246 147 235 158 q 265 118 258 136 q 272 74 272 100 q 265 31 272 49 q 246 2 258 13 q 219 -14 235 -9 q 186 -20 203 -20 q 152 -14 167 -20 q 125 2 136 -9 q 106 31 113 13 q 100 74 100 49 "},"‘":{x_min:16,x_max:228,ha:243,o:"m 24 652 l 16 666 q 38 744 25 703 q 67 828 51 786 q 100 912 82 870 q 135 992 118 954 l 228 992 q 204 905 216 950 q 183 816 193 861 q 164 730 173 772 q 149 652 155 687 l 24 652 "},"π":{x_min:17.109375,x_max:831,ha:875,o:"m 749 88 q 783 92 767 88 q 810 102 799 97 l 810 3 q 774 -8 799 -2 q 717 -14 749 -14 q 602 30 640 -14 q 564 164 564 75 l 564 642 l 290 642 l 290 0 l 167 0 l 167 642 l 17 642 l 17 691 l 110 745 l 831 745 l 831 642 l 688 642 l 688 173 q 703 107 688 125 q 749 88 719 88 "},9:{x_min:72,x_max:697,ha:765,o:"m 697 568 q 689 426 697 497 q 664 290 682 355 q 615 170 646 226 q 536 73 584 114 q 421 9 488 32 q 263 -14 354 -14 q 235 -13 250 -14 q 204 -11 219 -12 q 173 -7 188 -9 q 147 -2 158 -5 l 147 99 q 200 87 171 91 q 259 82 230 82 q 410 115 351 82 q 504 203 469 147 q 553 332 538 258 q 571 486 568 405 l 562 486 q 530 440 549 461 q 485 404 511 419 q 426 379 459 388 q 354 371 394 371 q 237 391 289 371 q 148 449 185 411 q 92 544 112 488 q 72 672 72 600 q 93 811 72 749 q 153 916 114 873 q 248 982 192 959 q 373 1006 304 1006 q 501 979 442 1006 q 603 898 560 953 q 671 762 646 844 q 697 568 697 679 m 374 900 q 300 887 334 900 q 242 845 266 873 q 204 773 217 816 q 191 671 191 730 q 202 586 191 624 q 236 522 213 549 q 292 482 258 496 q 370 467 326 467 q 454 483 417 467 q 518 525 491 499 q 559 583 545 550 q 574 648 574 615 q 561 738 574 693 q 524 819 549 783 q 462 878 499 856 q 374 900 424 900 "},l:{x_min:118,x_max:241.4375,ha:359,o:"m 241 0 l 118 0 l 118 1055 l 241 1055 l 241 0 "},"Ъ":{x_min:14,x_max:839,ha:910,o:"m 839 290 q 818 170 839 224 q 755 79 798 117 q 647 20 712 41 q 490 0 581 0 l 244 0 l 244 880 l 14 880 l 14 992 l 370 992 l 370 574 l 471 574 q 645 551 574 574 q 758 490 715 529 q 820 400 801 452 q 839 290 839 349 m 370 107 l 478 107 q 650 152 595 107 q 705 290 705 197 q 690 370 705 337 q 644 424 675 403 q 566 453 612 444 q 457 462 519 462 l 370 462 l 370 107 "}," ":{x_min:0,x_max:0,ha:139},"Ś":{x_min:70.109375,x_max:657,ha:721,o:"m 657 264 q 633 147 657 199 q 566 59 610 95 q 460 4 523 23 q 320 -14 398 -14 q 179 -2 245 -14 q 70 32 114 9 l 70 153 q 122 131 93 142 q 184 112 151 120 q 251 99 216 104 q 319 93 285 93 q 479 134 427 93 q 530 252 530 176 q 521 316 530 289 q 486 366 511 343 q 420 410 461 389 q 316 456 379 431 q 212 508 256 480 q 139 572 168 537 q 96 652 110 607 q 83 754 83 697 q 104 860 83 813 q 165 939 126 907 q 259 989 205 972 q 380 1006 314 1006 q 525 990 460 1006 q 640 951 589 975 l 595 845 q 495 880 551 865 q 381 894 440 894 q 254 856 299 894 q 209 752 209 818 q 219 686 209 714 q 252 635 229 657 q 315 592 276 612 q 410 549 353 572 q 517 499 471 525 q 594 441 563 473 q 641 366 625 408 q 657 264 657 323 m 306 1089 q 336 1134 320 1108 q 368 1187 352 1160 q 399 1242 384 1215 q 424 1293 413 1269 l 573 1293 l 573 1278 q 540 1233 562 1260 q 493 1175 519 1205 q 439 1118 467 1146 q 388 1071 411 1089 l 306 1071 l 306 1089 "},"Ü":{x_min:125,x_max:845,ha:970,o:"m 845 993 l 845 349 q 822 205 845 272 q 755 90 800 139 q 641 13 709 41 q 481 -14 573 -14 q 327 12 394 -14 q 216 86 261 38 q 148 202 171 134 q 125 352 125 269 l 125 991 l 251 991 l 251 346 q 309 162 251 227 q 487 97 368 97 q 591 115 548 97 q 663 167 635 133 q 704 246 690 200 q 718 347 718 292 l 718 993 l 845 993 m 293 1174 q 311 1227 293 1211 q 358 1244 330 1244 q 404 1227 384 1244 q 423 1174 423 1210 q 404 1121 423 1138 q 358 1105 384 1105 q 311 1121 330 1105 q 293 1174 293 1138 m 547 1174 q 566 1227 547 1211 q 612 1244 585 1244 q 637 1239 625 1244 q 658 1227 649 1235 q 672 1206 667 1218 q 678 1174 678 1193 q 658 1121 678 1138 q 612 1105 638 1105 q 566 1121 585 1105 q 547 1174 547 1138 "},"à":{x_min:64,x_max:626,ha:737,o:"m 536 0 l 511 102 l 505 102 q 461 50 483 72 q 412 13 439 28 q 353 -7 386 0 q 278 -14 321 -14 q 193 0 232 -14 q 125 40 153 12 q 80 109 96 67 q 64 208 64 151 q 142 379 64 320 q 379 445 220 439 l 503 450 l 503 496 q 494 572 503 541 q 465 620 484 602 q 419 647 447 639 q 357 655 392 655 q 253 639 301 655 q 160 599 204 623 l 117 692 q 228 739 167 720 q 357 758 290 758 q 477 744 427 758 q 560 700 527 730 q 609 623 593 669 q 626 509 626 576 l 626 0 l 536 0 m 310 88 q 386 101 351 88 q 447 140 422 114 q 488 205 473 166 q 502 298 502 245 l 502 365 l 405 360 q 303 346 345 357 q 237 316 262 336 q 202 270 213 297 q 191 208 191 243 q 224 117 191 146 q 310 88 257 88 m 460 842 l 378 842 q 326 889 354 860 q 272 946 298 917 q 225 1004 246 976 q 193 1049 203 1031 l 193 1064 l 341 1064 q 367 1013 352 1040 q 397 958 381 986 q 429 905 413 931 q 460 860 445 879 l 460 842 "},"η":{x_min:118,x_max:707,ha:818,o:"m 583 -334 l 583 479 q 547 611 583 567 q 436 655 512 655 q 343 637 381 655 q 283 585 306 620 q 251 501 261 551 q 241 385 241 450 l 241 0 l 118 0 l 118 745 l 218 745 l 236 644 l 242 644 q 283 694 259 673 q 334 730 306 715 q 393 751 362 744 q 457 758 424 758 q 644 693 581 758 q 707 486 707 628 l 707 -334 l 583 -334 "},"ó":{x_min:77,x_max:725,ha:802,o:"m 725 373 q 702 208 725 280 q 637 86 679 135 q 534 11 594 37 q 398 -14 474 -14 q 270 11 329 -14 q 168 86 211 37 q 101 208 125 135 q 77 373 77 280 q 99 537 77 465 q 164 657 122 608 q 267 732 206 707 q 403 758 327 758 q 531 732 472 758 q 633 657 590 707 q 700 537 676 608 q 725 373 725 465 m 204 373 q 250 159 204 231 q 401 88 297 88 q 551 159 506 88 q 597 373 597 231 q 551 585 597 515 q 400 655 504 655 q 250 585 295 655 q 204 373 204 515 m 321 860 q 351 905 335 879 q 383 958 367 931 q 414 1013 399 986 q 439 1064 428 1040 l 588 1064 l 588 1049 q 555 1004 577 1031 q 508 946 534 976 q 454 889 482 917 q 403 842 426 860 l 321 842 l 321 860 "},"¦":{x_min:332,x_max:433.734375,ha:765,o:"m 332 1055 l 433 1055 l 433 526 l 332 526 l 332 1055 m 332 196 l 433 196 l 433 -334 l 332 -334 l 332 196 "},"Ő":{x_min:85,x_max:945,ha:1031,o:"m 945 496 q 917 287 945 382 q 835 126 890 193 q 701 22 781 59 q 515 -14 620 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 498 85 382 q 110 707 85 613 q 190 867 136 801 q 325 970 243 934 q 517 1007 406 1007 q 701 970 622 1007 q 835 867 781 934 q 917 706 890 800 q 945 496 945 612 m 218 497 q 236 330 218 404 q 290 204 253 255 q 382 124 326 152 q 515 97 438 97 q 648 124 593 97 q 741 204 704 152 q 794 330 777 255 q 811 497 811 404 q 794 664 811 590 q 741 789 777 738 q 649 868 705 840 q 517 895 594 895 q 383 868 439 895 q 290 789 327 840 q 236 664 253 738 q 218 497 218 590 m 312 1089 q 342 1134 326 1108 q 374 1187 358 1160 q 404 1242 390 1215 q 430 1293 419 1269 l 565 1293 l 565 1278 q 532 1233 554 1260 q 485 1175 511 1205 q 431 1118 459 1146 q 380 1071 404 1089 l 312 1071 l 312 1089 m 558 1089 q 588 1134 572 1108 q 620 1187 604 1160 q 650 1242 636 1215 q 675 1293 665 1269 l 810 1293 l 810 1278 q 777 1233 799 1260 q 730 1175 756 1205 q 676 1118 704 1146 q 625 1071 649 1089 l 558 1071 l 558 1089 "},"Ž":{x_min:56,x_max:693,ha:749,o:"m 693 0 l 56 0 l 56 97 l 537 880 l 70 880 l 70 992 l 679 992 l 679 894 l 197 111 l 693 111 l 693 0 m 604 1274 q 563 1229 587 1255 q 517 1176 540 1203 q 474 1121 494 1148 q 444 1071 454 1094 l 313 1071 q 283 1121 303 1094 q 240 1176 263 1148 q 194 1229 217 1203 q 154 1274 171 1255 l 154 1293 l 236 1293 q 306 1237 270 1270 q 379 1166 342 1204 q 450 1237 414 1204 q 522 1293 487 1270 l 604 1293 l 604 1274 "},"е":{x_min:77,x_max:673,ha:743,o:"m 412 -14 q 276 11 337 -14 q 170 84 214 36 q 101 203 125 132 q 77 366 77 274 q 99 531 77 458 q 162 654 121 604 q 259 731 202 705 q 384 758 316 758 q 505 733 451 758 q 595 665 558 709 q 653 560 633 621 q 673 423 673 498 l 673 346 l 204 346 q 259 155 207 216 q 413 93 311 93 q 477 97 448 93 q 534 107 507 100 q 587 123 561 113 q 639 145 613 133 l 639 35 q 586 13 612 22 q 533 -2 560 3 q 476 -11 505 -8 q 412 -14 446 -14 m 384 655 q 260 602 306 655 q 207 449 214 549 l 545 449 q 536 533 545 495 q 507 598 526 571 q 457 640 487 625 q 384 655 427 655 "},"Î":{x_min:12,x_max:462,ha:471,o:"m 414 0 l 55 0 l 55 69 l 172 96 l 172 895 l 55 922 l 55 992 l 414 992 l 414 922 l 298 895 l 298 96 l 414 69 l 414 0 m 462 1071 l 380 1071 q 308 1126 345 1093 q 237 1196 272 1159 q 164 1126 200 1159 q 94 1071 128 1093 l 12 1071 l 12 1089 q 52 1134 29 1108 q 98 1187 75 1160 q 141 1242 121 1215 q 171 1293 161 1269 l 302 1293 q 332 1242 312 1269 q 375 1187 352 1215 q 421 1134 398 1160 q 462 1089 445 1108 l 462 1071 "},e:{x_min:77,x_max:673,ha:743,o:"m 412 -14 q 276 11 337 -14 q 170 84 214 36 q 101 203 125 132 q 77 366 77 274 q 99 531 77 458 q 162 654 121 604 q 259 731 202 705 q 384 758 316 758 q 505 733 451 758 q 595 665 558 709 q 653 560 633 621 q 673 423 673 498 l 673 346 l 204 346 q 259 155 207 216 q 413 93 311 93 q 477 97 448 93 q 534 107 507 100 q 587 123 561 113 q 639 145 613 133 l 639 35 q 586 13 612 22 q 533 -2 560 3 q 476 -11 505 -8 q 412 -14 446 -14 m 384 655 q 260 602 306 655 q 207 449 214 549 l 545 449 q 536 533 545 495 q 507 598 526 571 q 457 640 487 625 q 384 655 427 655 "},"ό":{x_min:77,x_max:725,ha:802,o:"m 725 373 q 702 208 725 280 q 637 86 679 135 q 534 11 594 37 q 398 -14 474 -14 q 270 11 329 -14 q 168 86 211 37 q 101 208 125 135 q 77 373 77 280 q 99 537 77 465 q 164 657 122 608 q 267 732 206 707 q 403 758 327 758 q 531 732 472 758 q 633 657 590 707 q 700 537 676 608 q 725 373 725 465 m 204 373 q 250 159 204 231 q 401 88 297 88 q 551 159 506 88 q 597 373 597 231 q 551 585 597 515 q 400 655 504 655 q 250 585 295 655 q 204 373 204 515 m 352 860 q 365 906 358 880 q 378 960 372 932 q 390 1014 385 987 q 399 1064 396 1041 l 534 1064 l 534 1049 q 518 1007 529 1033 q 492 951 507 980 q 459 892 476 921 q 425 842 441 863 l 352 842 l 352 860 "},"Ĕ":{x_min:135,x_max:650,ha:733,o:"m 650 0 l 135 0 l 135 992 l 650 992 l 650 880 l 261 880 l 261 574 l 624 574 l 624 462 l 261 462 l 261 111 l 650 111 l 650 0 m 601 1259 q 583 1183 598 1217 q 542 1123 568 1149 q 479 1084 516 1098 q 394 1071 442 1071 q 307 1084 344 1071 q 246 1122 270 1097 q 208 1181 221 1147 q 193 1259 195 1216 l 267 1259 q 279 1212 270 1229 q 305 1186 289 1194 q 344 1175 321 1177 q 397 1172 367 1172 q 443 1175 421 1172 q 483 1188 465 1178 q 512 1214 500 1197 q 526 1259 523 1231 l 601 1259 "},"ļ":{x_min:69,x_max:248,ha:359,o:"m 241 0 l 118 0 l 118 1055 l 241 1055 l 241 0 m 69 -288 q 85 -246 76 -271 q 102 -191 94 -220 q 116 -135 110 -163 q 125 -85 123 -107 l 248 -85 l 248 -98 q 233 -141 243 -115 q 207 -197 222 -167 q 173 -255 192 -226 q 135 -307 155 -284 l 69 -307 l 69 -288 "}," ":{x_min:0,x_max:0,ha:695},"Ѓ":{x_min:135,x_max:649,ha:682,o:"m 649 992 l 649 880 l 261 880 l 261 0 l 135 0 l 135 992 l 649 992 m 301 1089 q 331 1134 315 1108 q 363 1187 347 1160 q 394 1242 379 1215 q 419 1293 408 1269 l 568 1293 l 568 1278 q 535 1233 557 1260 q 488 1175 514 1205 q 434 1118 462 1146 q 383 1071 406 1089 l 301 1071 l 301 1089 "},"ò":{x_min:77,x_max:725,ha:802,o:"m 725 373 q 702 208 725 280 q 637 86 679 135 q 534 11 594 37 q 398 -14 474 -14 q 270 11 329 -14 q 168 86 211 37 q 101 208 125 135 q 77 373 77 280 q 99 537 77 465 q 164 657 122 608 q 267 732 206 707 q 403 758 327 758 q 531 732 472 758 q 633 657 590 707 q 700 537 676 608 q 725 373 725 465 m 204 373 q 250 159 204 231 q 401 88 297 88 q 551 159 506 88 q 597 373 597 231 q 551 585 597 515 q 400 655 504 655 q 250 585 295 655 q 204 373 204 515 m 507 842 l 425 842 q 373 889 401 860 q 319 946 345 917 q 272 1004 293 976 q 240 1049 250 1031 l 240 1064 l 388 1064 q 414 1013 399 1040 q 444 958 428 986 q 476 905 460 931 q 507 860 492 879 l 507 842 "},"ﬄ":{x_min:19,x_max:1155.4375,ha:1274,o:"m 441 656 l 274 656 l 274 0 l 151 0 l 151 656 l 19 656 l 19 704 l 151 749 l 151 814 q 166 934 151 886 q 210 1010 181 982 q 280 1051 238 1039 q 375 1063 322 1063 q 449 1055 415 1063 q 509 1037 482 1047 l 477 941 q 431 954 456 949 q 379 960 406 960 q 332 954 352 960 q 300 931 313 947 q 280 887 287 915 q 274 815 274 859 l 274 745 l 441 745 l 441 656 m 898 656 l 731 656 l 731 0 l 608 0 l 608 656 l 476 656 l 476 704 l 608 749 l 608 814 q 623 934 608 886 q 667 1010 638 982 q 737 1051 695 1039 q 832 1063 779 1063 q 906 1055 872 1063 q 966 1037 939 1047 l 934 941 q 888 954 913 949 q 836 960 863 960 q 789 954 809 960 q 757 931 770 947 q 737 887 744 915 q 731 815 731 859 l 731 745 l 898 745 l 898 656 m 1155 0 l 1032 0 l 1032 1055 l 1155 1055 l 1155 0 "},"^":{x_min:28,x_max:711,ha:739,o:"m 28 372 l 339 999 l 408 999 l 711 372 l 601 372 l 373 870 l 137 372 l 28 372 "},"ⁿ":{x_min:72,x_max:446,ha:515,o:"m 357 540 l 357 827 q 336 905 357 882 q 274 929 315 929 q 223 921 244 929 q 188 897 202 914 q 167 849 174 879 q 160 775 160 820 l 160 540 l 72 540 l 72 994 l 145 994 l 156 934 l 162 934 q 292 1003 205 1003 q 446 833 446 1003 l 446 540 l 357 540 "},"к":{x_min:118,x_max:676.25,ha:682,o:"m 516 745 l 649 745 l 369 387 l 676 0 l 536 0 l 241 377 l 241 0 l 118 0 l 118 745 l 241 745 l 241 383 l 516 745 "},"￼":{x_min:57,x_max:1346,ha:1389,o:"m 57 823 l 57 1030 l 262 1030 l 262 954 l 132 954 l 132 823 l 57 823 m 1139 954 l 1139 1030 l 1346 1030 l 1346 823 l 1272 823 l 1272 954 l 1139 954 m 57 -260 l 57 -54 l 132 -54 l 132 -186 l 262 -186 l 262 -260 l 57 -260 m 1139 -260 l 1139 -186 l 1272 -186 l 1272 -54 l 1346 -54 l 1346 -260 l 1139 -260 m 875 -260 l 875 -186 l 1060 -186 l 1060 -260 l 875 -260 m 345 -260 l 345 -186 l 528 -186 l 528 -260 l 345 -260 m 345 954 l 345 1030 l 528 1030 l 528 954 l 345 954 m 1346 26 l 1272 26 l 1272 210 l 1346 210 l 1346 26 m 1346 558 l 1272 558 l 1272 742 l 1346 742 l 1346 558 m 610 -260 l 610 -186 l 794 -186 l 794 -260 l 610 -260 m 132 26 l 57 26 l 57 210 l 132 210 l 132 26 m 610 954 l 610 1030 l 794 1030 l 794 954 l 610 954 m 875 954 l 875 1030 l 1060 1030 l 1060 954 l 875 954 m 132 291 l 57 291 l 57 476 l 132 476 l 132 291 m 132 558 l 57 558 l 57 742 l 132 742 l 132 558 m 1346 291 l 1272 291 l 1272 476 l 1346 476 l 1346 291 m 408 224 q 276 277 322 224 q 231 427 231 331 q 276 577 231 525 q 408 631 322 630 q 540 578 494 631 q 586 427 586 525 q 540 277 586 331 q 408 224 494 224 m 408 294 q 478 329 457 294 q 499 427 499 364 q 478 525 499 490 q 408 559 457 559 q 339 525 361 559 q 317 427 317 490 q 339 329 317 364 q 408 294 361 294 m 643 626 l 759 626 q 871 603 833 626 q 909 524 909 580 q 893 468 909 491 q 847 439 878 445 l 847 437 q 903 406 886 429 q 921 344 921 383 q 884 259 921 289 q 783 229 847 229 l 643 229 l 643 626 m 726 469 l 770 469 q 814 480 801 469 q 826 513 826 491 q 812 546 826 536 q 766 556 798 556 l 726 556 l 726 469 m 726 402 l 726 298 l 776 298 q 822 312 809 298 q 834 352 834 327 q 821 388 834 374 q 773 402 809 402 l 726 402 m 956 231 l 956 300 q 978 297 967 298 q 1002 295 989 295 q 1044 307 1028 295 q 1061 353 1061 319 l 1061 626 l 1146 626 l 1146 356 q 1110 258 1146 292 q 1011 225 1075 225 q 956 231 969 225 "},"ū":{x_min:111,x_max:700,ha:818,o:"m 600 0 l 582 99 l 575 99 q 534 48 558 70 q 483 13 511 27 q 424 -7 455 0 q 360 -14 393 -14 q 252 1 299 -14 q 174 50 205 17 q 126 135 142 83 q 111 258 111 186 l 111 745 l 234 745 l 234 264 q 270 132 234 176 q 381 88 306 88 q 474 106 436 88 q 534 158 511 123 q 566 242 556 192 q 576 357 576 292 l 576 745 l 700 745 l 700 0 l 600 0 m 214 943 l 604 943 l 604 842 l 214 842 l 214 943 "},"ˆ":{x_min:175,x_max:625,ha:802,o:"m 625 842 l 543 842 q 471 897 508 864 q 400 967 435 930 q 327 897 363 930 q 257 842 291 864 l 175 842 l 175 860 q 215 905 192 879 q 261 958 238 931 q 304 1013 284 986 q 334 1064 324 1040 l 465 1064 q 495 1013 475 1040 q 538 958 515 986 q 584 905 561 931 q 625 860 608 879 l 625 842 "},"Ẅ":{x_min:13.75,x_max:1214.25,ha:1228,o:"m 549 992 l 682 992 l 837 411 q 857 335 847 373 q 876 261 867 297 q 891 194 884 225 q 901 136 897 162 q 908 192 904 162 q 917 256 912 223 q 929 325 923 290 q 943 393 936 360 l 1079 992 l 1214 992 l 965 0 l 837 0 l 665 636 q 647 707 656 671 q 631 776 638 744 q 615 848 622 813 q 600 776 608 814 q 585 707 593 745 q 567 632 576 669 l 402 0 l 275 0 l 13 992 l 147 992 l 298 388 q 313 323 306 357 q 325 257 320 290 q 336 192 331 223 q 344 136 341 162 q 352 194 347 161 q 364 264 358 227 q 379 338 371 301 q 396 409 387 376 l 549 992 m 421 1174 q 439 1227 421 1211 q 486 1244 458 1244 q 532 1227 512 1244 q 551 1174 551 1210 q 532 1121 551 1138 q 486 1105 512 1105 q 439 1121 458 1105 q 421 1174 421 1138 m 675 1174 q 694 1227 675 1211 q 740 1244 713 1244 q 765 1239 753 1244 q 786 1227 777 1235 q 800 1206 795 1218 q 806 1174 806 1193 q 786 1121 806 1138 q 740 1105 766 1105 q 694 1121 713 1105 q 675 1174 675 1138 "},"č":{x_min:77,x_max:630,ha:643,o:"m 402 -14 q 274 7 334 -14 q 171 75 215 28 q 102 193 127 121 q 77 367 77 266 q 102 548 77 474 q 173 669 128 623 q 278 736 218 715 q 408 758 339 758 q 511 746 461 758 q 596 718 562 735 l 559 614 q 524 627 543 621 q 485 638 505 633 q 445 647 465 644 q 408 650 425 650 q 253 581 302 650 q 204 369 204 513 q 253 160 204 226 q 402 93 302 93 q 502 106 457 93 q 583 135 546 118 l 583 26 q 504 -3 546 6 q 402 -14 463 -14 m 630 1045 q 589 1000 613 1026 q 543 947 566 974 q 500 892 520 919 q 470 842 480 865 l 339 842 q 309 892 329 865 q 266 947 289 919 q 220 1000 243 974 q 180 1045 197 1026 l 180 1064 l 262 1064 q 332 1008 296 1041 q 405 937 368 975 q 476 1008 440 975 q 548 1064 513 1041 l 630 1064 l 630 1045 "},"’":{x_min:16,x_max:228,ha:243,o:"m 219 992 l 228 977 q 205 898 218 939 q 176 815 192 857 q 143 731 160 772 q 108 652 125 690 l 16 652 q 38 737 26 692 q 60 827 49 782 q 79 913 70 871 q 94 992 88 956 l 219 992 "},"Ν":{x_min:135,x_max:878,ha:1013,o:"m 878 0 l 724 0 l 253 821 l 248 821 q 255 717 252 768 q 259 624 257 673 q 261 538 261 576 l 261 0 l 135 0 l 135 992 l 288 992 l 757 174 l 762 174 q 757 276 759 226 q 755 321 756 298 q 753 366 754 343 q 752 410 752 389 q 751 449 751 431 l 751 992 l 878 992 l 878 0 "},"-":{x_min:56,x_max:392,ha:447,o:"m 56 315 l 56 429 l 392 429 l 392 315 l 56 315 "},Q:{x_min:85,x_max:945,ha:1030,o:"m 945 496 q 928 331 945 407 q 879 193 911 254 q 799 87 847 131 q 687 16 751 42 q 763 -95 717 -47 q 871 -184 810 -144 l 789 -281 q 660 -164 719 -231 q 567 -11 601 -97 q 541 -13 555 -12 q 515 -14 527 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 498 85 382 q 110 707 85 613 q 190 867 136 801 q 325 970 243 934 q 517 1007 406 1007 q 701 970 622 1007 q 835 867 781 934 q 917 706 890 800 q 945 496 945 612 m 218 497 q 236 330 218 404 q 290 204 253 255 q 382 124 326 152 q 515 97 438 97 q 648 124 593 97 q 741 204 704 152 q 794 330 777 255 q 811 497 811 404 q 794 664 811 590 q 741 789 777 738 q 649 868 705 840 q 517 895 594 895 q 383 868 439 895 q 290 789 327 840 q 236 664 253 738 q 218 497 218 590 "},"ј":{x_min:-46,x_max:252.96875,ha:359,o:"m 44 -334 q -9 -329 12 -334 q -46 -317 -30 -324 l -46 -217 q -10 -227 -28 -224 q 31 -231 8 -231 q 65 -226 50 -231 q 93 -208 81 -221 q 111 -172 105 -194 q 118 -116 118 -150 l 118 745 l 241 745 l 241 -107 q 229 -201 241 -159 q 193 -272 218 -243 q 132 -318 169 -302 q 44 -334 95 -334 m 108 945 q 129 1004 108 986 q 180 1023 149 1023 q 208 1018 195 1023 q 231 1004 221 1014 q 247 980 241 995 q 252 945 252 966 q 231 887 252 906 q 180 868 210 868 q 129 886 149 868 q 108 945 108 905 "},"ě":{x_min:77,x_max:673,ha:743,o:"m 412 -14 q 276 11 337 -14 q 170 84 214 36 q 101 203 125 132 q 77 366 77 274 q 99 531 77 458 q 162 654 121 604 q 259 731 202 705 q 384 758 316 758 q 505 733 451 758 q 595 665 558 709 q 653 560 633 621 q 673 423 673 498 l 673 346 l 204 346 q 259 155 207 216 q 413 93 311 93 q 477 97 448 93 q 534 107 507 100 q 587 123 561 113 q 639 145 613 133 l 639 35 q 586 13 612 22 q 533 -2 560 3 q 476 -11 505 -8 q 412 -14 446 -14 m 384 655 q 260 602 306 655 q 207 449 214 549 l 545 449 q 536 533 545 495 q 507 598 526 571 q 457 640 487 625 q 384 655 427 655 m 606 1045 q 565 1000 589 1026 q 519 947 542 974 q 476 892 496 919 q 446 842 456 865 l 315 842 q 285 892 305 865 q 242 947 265 919 q 196 1000 219 974 q 156 1045 173 1026 l 156 1064 l 238 1064 q 308 1008 272 1041 q 381 937 344 975 q 452 1008 416 975 q 524 1064 489 1041 l 606 1064 l 606 1045 "},"œ":{x_min:77,x_max:1194,ha:1264,o:"m 934 -14 q 777 23 846 -14 q 665 135 708 61 q 554 23 622 61 q 400 -14 487 -14 q 271 11 330 -14 q 168 86 211 37 q 101 208 125 135 q 77 373 77 280 q 99 537 77 465 q 164 657 122 608 q 267 732 207 707 q 404 758 328 758 q 553 720 486 758 q 662 610 619 682 q 765 720 702 682 q 906 758 827 758 q 1026 733 973 758 q 1117 665 1079 709 q 1174 560 1154 621 q 1194 423 1194 498 l 1194 346 l 727 346 q 782 155 730 216 q 935 93 833 93 q 999 97 970 93 q 1056 107 1028 100 q 1108 123 1083 113 q 1160 145 1134 133 l 1160 35 q 1107 13 1133 22 q 1054 -2 1081 3 q 997 -11 1027 -8 q 934 -14 968 -14 m 204 373 q 251 159 204 231 q 402 88 297 88 q 552 156 505 88 q 600 366 600 224 q 552 585 600 515 q 401 655 504 655 q 250 585 296 655 q 204 373 204 515 m 1066 449 q 1057 533 1066 495 q 1028 598 1048 571 q 979 640 1009 625 q 906 655 948 655 q 783 602 828 655 q 730 449 737 549 l 1066 449 "},"#":{x_min:35,x_max:863,ha:897,o:"m 666 606 l 623 382 l 814 382 l 814 290 l 605 290 l 550 0 l 450 0 l 507 290 l 310 290 l 254 0 l 157 0 l 209 290 l 35 290 l 35 382 l 228 382 l 272 606 l 87 606 l 87 699 l 289 699 l 345 992 l 444 992 l 389 699 l 587 699 l 644 992 l 742 992 l 685 699 l 863 699 l 863 606 l 666 606 m 327 382 l 524 382 l 568 606 l 371 606 l 327 382 "},"Џ":{x_min:135,x_max:826,ha:960,o:"m 826 0 l 546 0 l 546 -261 l 420 -261 l 420 0 l 135 0 l 135 992 l 261 992 l 261 111 l 699 111 l 699 992 l 826 992 l 826 0 "},"Å":{x_min:-.25,x_max:844.25,ha:844,o:"m 715 0 l 606 307 l 237 307 l 127 0 l 0 0 l 364 996 l 479 996 l 844 0 l 715 0 m 566 419 l 466 706 q 456 736 462 719 q 444 774 450 754 q 432 817 438 795 q 421 860 426 839 q 410 816 416 839 q 397 773 404 794 q 386 735 391 752 q 376 706 380 718 l 277 419 l 566 419 m 576 1074 q 564 1012 576 1039 q 531 965 552 984 q 482 936 510 946 q 420 927 453 927 q 358 936 386 927 q 310 965 330 946 q 279 1011 290 984 q 269 1073 269 1038 q 279 1134 269 1107 q 310 1180 290 1161 q 358 1209 330 1199 q 420 1219 386 1219 q 481 1209 453 1219 q 531 1180 510 1199 q 564 1135 552 1161 q 576 1074 576 1108 m 501 1073 q 479 1129 501 1109 q 422 1149 457 1149 q 365 1129 387 1149 q 343 1073 343 1109 q 363 1016 343 1036 q 422 996 383 996 q 479 1016 457 996 q 501 1073 501 1036 "},"ș":{x_min:61.15625,x_max:564,ha:627,o:"m 564 203 q 544 108 564 149 q 487 40 524 68 q 398 0 450 13 q 281 -14 346 -14 q 154 -2 207 -14 q 61 33 101 9 l 61 146 q 107 125 82 135 q 161 106 133 114 q 219 93 189 98 q 279 88 249 88 q 353 95 323 88 q 403 116 384 103 q 431 150 423 130 q 440 194 440 170 q 433 232 440 215 q 409 265 427 249 q 360 299 391 282 q 280 337 329 316 q 193 378 232 358 q 127 424 154 399 q 86 482 100 449 q 72 560 72 515 q 90 645 72 608 q 143 707 109 682 q 224 745 177 732 q 330 758 272 758 q 451 743 396 758 q 554 706 505 729 l 512 606 q 422 641 468 626 q 329 655 376 655 q 228 632 261 655 q 195 568 195 610 q 203 526 195 544 q 229 493 210 509 q 279 461 248 477 q 358 426 311 445 q 444 385 406 405 q 509 339 482 365 q 549 281 535 314 q 564 203 564 249 m 202 -288 q 218 -246 209 -271 q 235 -191 227 -220 q 249 -135 243 -163 q 258 -85 256 -107 l 381 -85 l 381 -98 q 366 -141 376 -115 q 340 -197 355 -167 q 306 -255 325 -226 q 268 -307 288 -284 l 202 -307 l 202 -288 "},"¸":{x_min:24,x_max:277,ha:285,o:"m 277 -194 q 229 -297 277 -260 q 79 -334 181 -334 q 49 -331 64 -334 q 24 -327 34 -329 l 24 -254 q 50 -257 34 -256 q 77 -258 67 -258 q 152 -247 125 -258 q 179 -208 179 -235 q 170 -186 179 -195 q 146 -169 161 -176 q 109 -157 131 -162 q 64 -147 88 -152 l 125 0 l 207 0 l 168 -78 q 211 -92 191 -83 q 245 -115 230 -101 q 268 -148 260 -128 q 277 -194 277 -168 "},"=":{x_min:69,x_max:696,ha:765,o:"m 69 577 l 69 679 l 696 679 l 696 577 l 69 577 m 69 300 l 69 402 l 696 402 l 696 300 l 69 300 "},"ρ":{x_min:111,x_max:725,ha:802,o:"m 725 373 q 703 208 725 280 q 642 86 682 135 q 546 11 602 37 q 418 -14 489 -14 q 319 1 368 -14 q 234 47 271 16 l 230 47 q 232 -13 231 17 q 234 -72 233 -39 q 234 -136 234 -105 l 234 -334 l 111 -334 l 111 373 q 133 537 111 465 q 195 657 155 608 q 293 732 236 707 q 422 758 351 758 q 543 732 488 758 q 639 657 598 707 q 702 537 679 608 q 725 373 725 465 m 417 655 q 280 589 324 655 q 234 386 236 522 l 234 156 q 319 105 271 121 q 419 88 368 88 q 555 159 514 88 q 597 373 597 231 q 555 585 597 515 q 417 655 512 655 "},"Ћ":{x_min:13,x_max:873,ha:977,o:"m 370 609 l 605 609 q 718 592 668 609 q 802 543 768 575 q 854 464 836 511 q 873 357 873 417 l 873 0 l 746 0 l 746 340 q 711 458 746 419 q 591 497 675 497 l 370 497 l 370 0 l 244 0 l 244 880 l 13 880 l 13 992 l 654 992 l 654 880 l 370 880 l 370 609 "},"ú":{x_min:111,x_max:700,ha:818,o:"m 600 0 l 582 99 l 575 99 q 534 48 558 70 q 483 13 511 27 q 424 -7 455 0 q 360 -14 393 -14 q 252 1 299 -14 q 174 50 205 17 q 126 135 142 83 q 111 258 111 186 l 111 745 l 234 745 l 234 264 q 270 132 234 176 q 381 88 306 88 q 474 106 436 88 q 534 158 511 123 q 566 242 556 192 q 576 357 576 292 l 576 745 l 700 745 l 700 0 l 600 0 m 331 860 q 361 905 345 879 q 393 958 377 931 q 424 1013 409 986 q 449 1064 438 1040 l 598 1064 l 598 1049 q 565 1004 587 1031 q 518 946 544 976 q 464 889 492 917 q 413 842 436 860 l 331 842 l 331 860 "},"˚":{x_min:248,x_max:555,ha:802,o:"m 555 989 q 543 927 555 954 q 510 880 531 899 q 461 851 489 861 q 399 842 432 842 q 337 851 365 842 q 289 880 309 861 q 258 926 269 899 q 248 988 248 953 q 258 1049 248 1022 q 289 1095 269 1076 q 337 1124 309 1114 q 399 1134 365 1134 q 460 1124 432 1134 q 510 1095 489 1114 q 543 1050 531 1076 q 555 989 555 1023 m 480 988 q 458 1044 480 1024 q 401 1064 436 1064 q 344 1044 366 1064 q 322 988 322 1024 q 342 931 322 951 q 401 911 362 911 q 458 931 436 911 q 480 988 480 951 "},"д":{x_min:28,x_max:732,ha:760,o:"m 732 -258 l 615 -258 l 615 0 l 144 0 l 144 -258 l 28 -258 l 28 102 l 85 102 q 163 242 130 167 q 220 401 197 318 q 254 571 243 484 q 267 745 266 658 l 630 745 l 630 102 l 732 102 l 732 -258 m 506 102 l 506 656 l 383 656 q 365 511 378 585 q 332 365 352 437 q 282 226 311 293 q 215 102 253 159 l 506 102 "},"¯":{x_min:-4,x_max:699,ha:695,o:"m 699 1055 l -4 1055 l -4 1150 l 699 1150 l 699 1055 "},u:{x_min:111,x_max:700,ha:818,o:"m 600 0 l 582 99 l 575 99 q 534 48 558 70 q 483 13 511 27 q 424 -7 455 0 q 360 -14 393 -14 q 252 1 299 -14 q 174 50 205 17 q 126 135 142 83 q 111 258 111 186 l 111 745 l 234 745 l 234 264 q 270 132 234 176 q 381 88 306 88 q 474 106 436 88 q 534 158 511 123 q 566 242 556 192 q 576 357 576 292 l 576 745 l 700 745 l 700 0 l 600 0 "},"З":{x_min:49,x_max:681,ha:757,o:"m 663 759 q 645 668 663 709 q 597 598 628 628 q 524 548 566 568 q 431 521 481 529 l 431 517 q 536 490 489 509 q 615 441 583 471 q 664 370 647 410 q 681 281 681 330 q 658 162 681 216 q 589 68 635 108 q 473 7 543 29 q 311 -14 404 -14 q 171 -2 236 -14 q 49 39 106 9 l 49 154 q 110 128 78 140 q 176 109 143 117 q 243 97 209 102 q 308 93 276 93 q 487 142 428 93 q 547 281 547 192 q 477 414 547 371 q 281 457 407 457 l 153 457 l 153 565 l 271 565 q 382 578 334 565 q 462 615 430 591 q 512 673 495 639 q 529 747 529 706 q 516 811 529 783 q 481 858 504 839 q 426 888 458 878 q 354 898 394 898 q 223 876 280 898 q 115 819 166 854 l 53 904 q 112 943 78 925 q 184 975 145 961 q 268 997 223 989 q 361 1006 312 1006 q 491 987 435 1006 q 585 936 547 969 q 643 858 624 903 q 663 759 663 812 "},"Α":{x_min:-.25,x_max:844.25,ha:844,o:"m 715 0 l 606 307 l 237 307 l 127 0 l 0 0 l 364 996 l 479 996 l 844 0 l 715 0 m 566 419 l 466 706 q 456 736 462 719 q 444 774 450 754 q 432 817 438 795 q 421 860 426 839 q 410 816 416 839 q 397 773 404 794 q 386 735 391 752 q 376 706 380 718 l 277 419 l 566 419 "},"⅝":{x_min:54,x_max:1011,ha:1051,o:"m 232 769 q 310 757 274 769 q 373 722 346 745 q 415 664 400 699 q 431 586 431 630 q 374 438 431 491 q 208 385 318 385 q 124 394 166 385 q 54 422 83 404 l 54 518 q 92 497 71 506 q 133 481 112 488 q 174 471 154 475 q 211 468 194 468 q 301 493 269 468 q 334 577 334 519 q 301 657 334 628 q 208 685 269 685 q 186 684 199 685 q 160 680 174 682 q 134 676 147 678 q 112 672 122 674 l 67 702 l 89 992 l 389 992 l 389 908 l 170 908 l 158 762 q 191 766 172 764 q 232 769 210 769 m 860 992 l 309 0 l 202 0 l 753 992 l 860 992 m 815 604 q 883 594 851 604 q 938 567 914 585 q 976 519 962 548 q 991 453 991 491 q 983 407 991 428 q 962 369 976 386 q 931 338 949 352 q 893 313 914 325 q 938 285 917 300 q 975 251 959 270 q 1001 209 991 233 q 1011 157 1011 186 q 996 87 1011 119 q 956 33 982 56 q 894 0 930 11 q 816 -13 858 -13 q 670 31 721 -13 q 620 153 620 75 q 628 205 620 182 q 651 247 636 228 q 684 281 665 266 q 724 307 703 295 q 690 335 705 321 q 662 368 674 350 q 644 407 650 386 q 638 453 638 428 q 652 519 638 491 q 691 566 667 547 q 748 594 716 585 q 815 604 780 604 m 716 155 q 741 93 716 116 q 814 70 766 70 q 888 93 863 70 q 914 155 914 116 q 906 190 914 174 q 885 219 899 206 q 854 242 872 232 q 813 262 835 253 l 802 266 q 738 219 760 244 q 716 155 716 193 m 813 520 q 755 502 776 520 q 734 449 734 484 q 741 417 734 431 q 757 392 747 404 q 783 371 768 380 q 815 353 798 361 q 846 370 831 360 q 871 390 860 379 q 887 416 881 402 q 894 449 894 430 q 872 502 894 484 q 813 520 850 520 "},"é":{x_min:77,x_max:673,ha:743,o:"m 412 -14 q 276 11 337 -14 q 170 84 214 36 q 101 203 125 132 q 77 366 77 274 q 99 531 77 458 q 162 654 121 604 q 259 731 202 705 q 384 758 316 758 q 505 733 451 758 q 595 665 558 709 q 653 560 633 621 q 673 423 673 498 l 673 346 l 204 346 q 259 155 207 216 q 413 93 311 93 q 477 97 448 93 q 534 107 507 100 q 587 123 561 113 q 639 145 613 133 l 639 35 q 586 13 612 22 q 533 -2 560 3 q 476 -11 505 -8 q 412 -14 446 -14 m 384 655 q 260 602 306 655 q 207 449 214 549 l 545 449 q 536 533 545 495 q 507 598 526 571 q 457 640 487 625 q 384 655 427 655 m 322 860 q 352 905 336 879 q 384 958 368 931 q 415 1013 400 986 q 440 1064 429 1040 l 589 1064 l 589 1049 q 556 1004 578 1031 q 509 946 535 976 q 455 889 483 917 q 404 842 427 860 l 322 842 l 322 860 "
},"Ş":{x_min:70.109375,x_max:657,ha:721,o:"m 657 264 q 633 147 657 199 q 566 59 610 95 q 460 4 523 23 q 320 -14 398 -14 q 179 -2 245 -14 q 70 32 114 9 l 70 153 q 122 131 93 142 q 184 112 151 120 q 251 99 216 104 q 319 93 285 93 q 479 134 427 93 q 530 252 530 176 q 521 316 530 289 q 486 366 511 343 q 420 410 461 389 q 316 456 379 431 q 212 508 256 480 q 139 572 168 537 q 96 652 110 607 q 83 754 83 697 q 104 860 83 813 q 165 939 126 907 q 259 989 205 972 q 380 1006 314 1006 q 525 990 460 1006 q 640 951 589 975 l 595 845 q 495 880 551 865 q 381 894 440 894 q 254 856 299 894 q 209 752 209 818 q 219 686 209 714 q 252 635 229 657 q 315 592 276 612 q 410 549 353 572 q 517 499 471 525 q 594 441 563 473 q 641 366 625 408 q 657 264 657 323 m 486 -194 q 438 -297 486 -260 q 288 -334 390 -334 q 258 -331 273 -334 q 233 -327 243 -329 l 233 -254 q 259 -257 243 -256 q 286 -258 276 -258 q 361 -247 334 -258 q 388 -208 388 -235 q 379 -186 388 -195 q 355 -169 370 -176 q 318 -157 340 -162 q 273 -147 297 -152 l 334 0 l 416 0 l 377 -78 q 420 -92 400 -83 q 454 -115 439 -101 q 477 -148 469 -128 q 486 -194 486 -168 "},B:{x_min:135,x_max:786,ha:863,o:"m 135 992 l 405 992 q 558 978 492 992 q 668 936 624 965 q 735 858 713 906 q 758 740 758 810 q 744 662 758 698 q 707 597 731 625 q 645 551 682 569 q 563 526 609 532 l 563 519 q 650 496 609 511 q 720 454 690 480 q 768 386 751 427 q 786 287 786 345 q 763 166 786 219 q 700 76 741 113 q 598 19 658 39 q 463 0 539 0 l 135 0 l 135 992 m 261 572 l 427 572 q 523 582 485 572 q 586 612 562 592 q 621 662 610 632 q 631 732 631 692 q 579 848 631 813 q 413 884 526 884 l 261 884 l 261 572 m 261 464 l 261 107 l 441 107 q 541 121 500 107 q 606 159 581 134 q 641 217 630 183 q 652 292 652 251 q 641 362 652 330 q 604 416 630 393 q 537 451 579 439 q 433 464 495 464 l 261 464 "},"…":{x_min:100,x_max:1017,ha:1117,o:"m 100 74 q 106 118 100 100 q 125 147 113 136 q 152 163 136 158 q 186 169 167 169 q 219 163 203 169 q 246 147 235 158 q 265 118 258 136 q 272 74 272 100 q 265 31 272 49 q 246 2 258 13 q 219 -14 235 -9 q 186 -20 203 -20 q 152 -14 167 -20 q 125 2 136 -9 q 106 31 113 13 q 100 74 100 49 m 473 74 q 479 118 473 100 q 498 147 486 136 q 525 163 509 158 q 559 169 540 169 q 592 163 576 169 q 619 147 608 158 q 638 118 631 136 q 645 74 645 100 q 638 31 645 49 q 619 2 631 13 q 592 -14 608 -9 q 559 -20 576 -20 q 525 -14 540 -20 q 498 2 509 -9 q 479 31 486 13 q 473 74 473 49 m 845 74 q 851 118 845 100 q 869 147 857 136 q 897 163 881 158 q 931 169 912 169 q 964 163 948 169 q 991 147 980 158 q 1010 118 1003 136 q 1017 74 1017 100 q 1010 31 1017 49 q 991 2 1003 13 q 964 -14 980 -9 q 931 -20 948 -20 q 869 2 894 -20 q 845 74 845 24 "},H:{x_min:135,x_max:839,ha:974,o:"m 839 0 l 712 0 l 712 462 l 261 462 l 261 0 l 135 0 l 135 992 l 261 992 l 261 574 l 712 574 l 712 992 l 839 992 l 839 0 "},"î":{x_min:-45,x_max:405,ha:359,o:"m 241 0 l 118 0 l 118 745 l 241 745 l 241 0 m 405 842 l 323 842 q 251 897 288 864 q 180 967 215 930 q 107 897 143 930 q 37 842 71 864 l -45 842 l -45 860 q -4 905 -27 879 q 41 958 18 931 q 84 1013 64 986 q 114 1064 104 1040 l 245 1064 q 275 1013 255 1040 q 318 958 295 986 q 364 905 341 931 q 405 860 388 879 l 405 842 "},"ν":{x_min:-.25,x_max:661,ha:718,o:"m 0 745 l 127 745 l 263 343 q 282 287 271 320 q 302 218 292 253 q 321 152 313 183 q 333 104 330 121 l 337 104 q 437 239 398 169 q 498 387 475 308 q 529 553 520 465 q 537 745 537 642 l 661 745 q 648 536 661 634 q 604 348 635 439 q 521 172 573 257 q 389 0 469 86 l 259 0 l 0 745 "},"Ό":{x_min:-16,x_max:1001,ha:1087,o:"m 1001 496 q 973 287 1001 382 q 891 126 946 193 q 757 22 837 59 q 571 -14 676 -14 q 380 22 461 -14 q 245 126 299 59 q 166 288 192 193 q 141 498 141 382 q 166 707 141 613 q 246 867 192 801 q 381 970 299 934 q 573 1007 462 1007 q 757 970 678 1007 q 891 867 837 934 q 973 706 946 800 q 1001 496 1001 612 m 274 497 q 292 330 274 404 q 346 204 309 255 q 438 124 382 152 q 571 97 494 97 q 704 124 649 97 q 797 204 760 152 q 850 330 833 255 q 867 497 867 404 q 850 664 867 590 q 797 789 833 738 q 705 868 761 840 q 573 895 650 895 q 439 868 495 895 q 346 789 383 840 q 292 664 309 738 q 274 497 274 590 m -16 789 q -2 835 -9 809 q 10 889 4 861 q 22 943 17 916 q 31 993 28 970 l 166 993 l 166 978 q 150 936 161 962 q 124 880 139 909 q 91 821 108 850 q 57 771 73 792 l -16 771 l -16 789 "},"−":{x_min:69,x_max:696,ha:765,o:"m 69 439 l 69 541 l 696 541 l 696 439 l 69 439 "},"⅜":{x_min:35,x_max:1011,ha:1051,o:"m 414 852 q 386 764 414 800 q 312 712 359 729 q 402 660 372 697 q 432 571 432 624 q 418 496 432 530 q 376 437 404 461 q 305 399 348 413 q 204 386 263 386 q 115 394 157 386 q 35 423 73 402 l 35 514 q 124 481 78 493 q 206 469 169 469 q 304 497 274 469 q 335 575 335 525 q 297 648 335 625 q 193 671 260 671 l 125 671 l 125 745 l 193 745 q 287 771 258 745 q 317 839 317 797 q 310 876 317 860 q 291 901 303 891 q 262 915 278 911 q 227 920 246 920 q 152 907 186 920 q 83 870 119 894 l 36 935 q 76 963 55 951 q 120 985 97 976 q 169 998 143 993 q 224 1004 194 1004 q 307 992 271 1004 q 366 961 342 981 q 402 913 390 940 q 414 852 414 885 m 860 992 l 309 0 l 202 0 l 753 992 l 860 992 m 815 604 q 883 594 851 604 q 938 567 914 585 q 976 519 962 548 q 991 453 991 491 q 983 407 991 428 q 962 369 976 386 q 931 338 949 352 q 893 313 914 325 q 938 285 917 300 q 975 251 959 270 q 1001 209 991 233 q 1011 157 1011 186 q 996 87 1011 119 q 956 33 982 56 q 894 0 930 11 q 816 -13 858 -13 q 670 31 721 -13 q 620 153 620 75 q 628 205 620 182 q 651 247 636 228 q 684 281 665 266 q 724 307 703 295 q 690 335 705 321 q 662 368 674 350 q 644 407 650 386 q 638 453 638 428 q 652 519 638 491 q 691 566 667 547 q 748 594 716 585 q 815 604 780 604 m 716 155 q 741 93 716 116 q 814 70 766 70 q 888 93 863 70 q 914 155 914 116 q 906 190 914 174 q 885 219 899 206 q 854 242 872 232 q 813 262 835 253 l 802 266 q 738 219 760 244 q 716 155 716 193 m 813 520 q 755 502 776 520 q 734 449 734 484 q 741 417 734 431 q 757 392 747 404 q 783 371 768 380 q 815 353 798 361 q 846 370 831 360 q 871 390 860 379 q 887 416 881 402 q 894 449 894 430 q 872 502 894 484 q 813 520 850 520 "},"ǰ":{x_min:-46,x_max:405,ha:359,o:"m 44 -334 q -9 -329 12 -334 q -46 -317 -30 -324 l -46 -217 q -10 -227 -28 -224 q 31 -231 8 -231 q 65 -226 50 -231 q 93 -208 81 -221 q 111 -172 105 -194 q 118 -116 118 -150 l 118 745 l 241 745 l 241 -107 q 229 -201 241 -159 q 193 -272 218 -243 q 132 -318 169 -302 q 44 -334 95 -334 m 405 1045 q 364 1000 388 1026 q 318 947 341 974 q 275 892 295 919 q 245 842 255 865 l 114 842 q 84 892 104 865 q 41 947 64 919 q -4 1000 18 974 q -45 1045 -27 1026 l -45 1064 l 37 1064 q 107 1008 71 1041 q 180 937 143 975 q 251 1008 215 975 q 323 1064 288 1041 l 405 1064 l 405 1045 "},"ā":{x_min:64,x_max:626,ha:737,o:"m 536 0 l 511 102 l 505 102 q 461 50 483 72 q 412 13 439 28 q 353 -7 386 0 q 278 -14 321 -14 q 193 0 232 -14 q 125 40 153 12 q 80 109 96 67 q 64 208 64 151 q 142 379 64 320 q 379 445 220 439 l 503 450 l 503 496 q 494 572 503 541 q 465 620 484 602 q 419 647 447 639 q 357 655 392 655 q 253 639 301 655 q 160 599 204 623 l 117 692 q 228 739 167 720 q 357 758 290 758 q 477 744 427 758 q 560 700 527 730 q 609 623 593 669 q 626 509 626 576 l 626 0 l 536 0 m 310 88 q 386 101 351 88 q 447 140 422 114 q 488 205 473 166 q 502 298 502 245 l 502 365 l 405 360 q 303 346 345 357 q 237 316 262 336 q 202 270 213 297 q 191 208 191 243 q 224 117 191 146 q 310 88 257 88 m 174 943 l 564 943 l 564 842 l 174 842 l 174 943 "},"ĵ":{x_min:-46,x_max:405,ha:359,o:"m 44 -334 q -9 -329 12 -334 q -46 -317 -30 -324 l -46 -217 q -10 -227 -28 -224 q 31 -231 8 -231 q 65 -226 50 -231 q 93 -208 81 -221 q 111 -172 105 -194 q 118 -116 118 -150 l 118 745 l 241 745 l 241 -107 q 229 -201 241 -159 q 193 -272 218 -243 q 132 -318 169 -302 q 44 -334 95 -334 m 405 842 l 323 842 q 251 897 288 864 q 180 967 215 930 q 107 897 143 930 q 37 842 71 864 l -45 842 l -45 860 q -4 905 -27 879 q 41 958 18 931 q 84 1013 64 986 q 114 1064 104 1040 l 245 1064 q 275 1013 255 1040 q 318 958 295 986 q 364 905 341 931 q 405 860 388 879 l 405 842 "},"Ĩ":{x_min:-8,x_max:480,ha:471,o:"m 414 0 l 55 0 l 55 69 l 172 96 l 172 895 l 55 922 l 55 992 l 414 992 l 414 922 l 298 895 l 298 96 l 414 69 l 414 0 m 336 1072 q 282 1083 309 1072 q 230 1110 256 1095 q 180 1136 204 1124 q 135 1148 156 1148 q 88 1130 104 1148 q 62 1070 72 1112 l -8 1070 q 6 1144 -4 1111 q 35 1201 17 1177 q 78 1237 53 1224 q 135 1250 103 1250 q 191 1238 163 1250 q 244 1211 218 1226 q 293 1185 270 1197 q 336 1173 317 1173 q 382 1191 367 1173 q 408 1251 398 1209 l 480 1251 q 465 1177 476 1210 q 436 1121 454 1144 q 393 1084 418 1097 q 336 1072 368 1072 "},"*":{x_min:55.3125,x_max:707.71875,ha:765,o:"m 450 1055 l 420 788 l 690 863 l 707 733 l 451 714 l 617 493 l 496 428 l 377 670 l 270 428 l 145 493 l 309 714 l 55 733 l 74 863 l 340 788 l 311 1055 l 450 1055 "},"ă":{x_min:64,x_max:626,ha:737,o:"m 536 0 l 511 102 l 505 102 q 461 50 483 72 q 412 13 439 28 q 353 -7 386 0 q 278 -14 321 -14 q 193 0 232 -14 q 125 40 153 12 q 80 109 96 67 q 64 208 64 151 q 142 379 64 320 q 379 445 220 439 l 503 450 l 503 496 q 494 572 503 541 q 465 620 484 602 q 419 647 447 639 q 357 655 392 655 q 253 639 301 655 q 160 599 204 623 l 117 692 q 228 739 167 720 q 357 758 290 758 q 477 744 427 758 q 560 700 527 730 q 609 623 593 669 q 626 509 626 576 l 626 0 l 536 0 m 310 88 q 386 101 351 88 q 447 140 422 114 q 488 205 473 166 q 502 298 502 245 l 502 365 l 405 360 q 303 346 345 357 q 237 316 262 336 q 202 270 213 297 q 191 208 191 243 q 224 117 191 146 q 310 88 257 88 m 574 1030 q 556 954 571 988 q 515 894 541 920 q 452 855 489 869 q 367 842 415 842 q 280 855 317 842 q 219 893 243 868 q 181 952 194 918 q 166 1030 168 987 l 240 1030 q 252 983 243 1000 q 278 957 262 965 q 317 946 294 948 q 370 943 340 943 q 416 946 394 943 q 456 959 438 949 q 485 985 473 968 q 499 1030 496 1002 l 574 1030 "},"Χ":{x_min:-.25,x_max:760.25,ha:760,o:"m 760 0 l 617 0 l 376 430 l 127 0 l 0 0 l 307 518 l 20 992 l 155 992 l 380 612 l 608 992 l 737 992 l 450 522 l 760 0 "},"†":{x_min:83,x_max:591.171875,ha:675,o:"m 591 670 l 366 691 l 404 0 l 257 0 l 294 691 l 83 670 l 83 793 l 294 772 l 257 1055 l 404 1055 l 366 772 l 591 793 l 591 670 "},"°":{x_min:83,x_max:512,ha:595,o:"m 83 791 q 100 874 83 835 q 145 942 117 913 q 213 989 174 972 q 297 1006 252 1006 q 380 989 341 1006 q 448 942 419 972 q 495 874 478 913 q 512 791 512 835 q 495 708 512 747 q 448 641 478 669 q 380 595 419 612 q 297 579 341 579 q 213 595 252 579 q 145 641 174 612 q 100 708 117 669 q 83 791 83 747 m 184 790 q 193 744 184 766 q 218 707 203 723 q 256 681 234 690 q 301 671 277 671 q 347 681 326 671 q 385 707 369 690 q 410 744 401 723 q 419 790 419 766 q 410 838 419 815 q 385 877 401 860 q 347 903 369 893 q 301 913 326 913 q 256 903 277 913 q 218 877 234 893 q 193 838 203 860 q 184 790 184 815 "},"Ξ":{x_min:56,x_max:682,ha:737,o:"m 139 574 l 599 574 l 599 462 l 139 462 l 139 574 m 84 992 l 654 992 l 654 880 l 84 880 l 84 992 m 682 111 l 682 0 l 56 0 l 56 111 l 682 111 "},"Ķ":{x_min:135,x_max:804.25,ha:804,o:"m 804 0 l 661 0 l 355 473 l 261 396 l 261 0 l 135 0 l 135 992 l 261 992 l 261 496 l 343 609 l 649 992 l 791 992 l 438 559 l 804 0 m 327 -288 q 343 -246 334 -271 q 360 -191 352 -220 q 374 -135 368 -163 q 383 -85 381 -107 l 506 -85 l 506 -98 q 491 -141 501 -115 q 465 -197 480 -167 q 431 -255 450 -226 q 393 -307 413 -284 l 327 -307 l 327 -288 "},"ŵ":{x_min:13.75,x_max:1022.25,ha:1036,o:"m 683 0 l 570 417 q 563 445 567 430 q 555 477 559 460 q 546 512 551 494 q 538 546 542 529 q 518 628 528 586 l 514 628 q 496 546 505 585 q 480 476 488 512 q 464 415 471 440 l 347 0 l 204 0 l 13 745 l 143 745 l 232 348 q 245 282 239 318 q 258 211 252 246 q 269 146 264 177 q 277 95 274 115 l 281 95 q 290 142 284 113 q 303 205 296 172 q 317 270 310 238 q 331 324 325 302 l 453 745 l 586 745 l 702 324 q 716 270 709 301 q 732 207 724 239 q 745 145 739 175 q 754 95 751 115 l 758 95 q 764 142 760 113 q 775 207 769 172 q 788 279 781 242 q 803 348 795 316 l 896 745 l 1022 745 l 829 0 l 683 0 m 743 842 l 661 842 q 589 897 626 864 q 518 967 553 930 q 445 897 481 930 q 375 842 409 864 l 293 842 l 293 860 q 333 905 310 879 q 379 958 356 931 q 422 1013 402 986 q 452 1064 442 1040 l 583 1064 q 613 1013 593 1040 q 656 958 633 986 q 702 905 679 931 q 743 860 726 879 l 743 842 "},"΄":{x_min:342,x_max:524,ha:802,o:"m 342 860 q 355 906 348 880 q 368 960 362 932 q 380 1014 375 987 q 389 1064 386 1041 l 524 1064 l 524 1049 q 508 1007 519 1033 q 482 951 497 980 q 449 892 466 921 q 415 842 431 863 l 342 842 l 342 860 "},"ǽ":{x_min:64,x_max:1088,ha:1157,o:"m 64 208 q 142 379 64 320 q 382 445 221 439 l 508 450 l 508 496 q 498 572 508 541 q 469 620 488 602 q 423 647 450 639 q 360 655 395 655 q 254 639 303 655 q 160 599 205 623 l 117 692 q 229 739 167 720 q 359 758 291 758 q 505 729 448 758 q 591 637 562 700 q 681 726 625 694 q 807 758 737 758 q 924 733 872 758 q 1013 665 976 709 q 1068 560 1049 622 q 1088 424 1088 499 l 1088 347 l 634 347 q 687 157 637 218 q 836 96 737 96 q 897 99 869 96 q 952 109 926 103 q 1004 126 979 116 q 1054 148 1029 135 l 1054 36 q 1002 13 1027 23 q 950 -2 977 4 q 895 -11 923 -8 q 833 -14 866 -14 q 672 24 740 -14 q 562 141 604 63 q 513 75 539 104 q 454 27 487 47 q 383 -3 422 7 q 293 -14 343 -14 q 202 0 244 -14 q 130 40 160 12 q 81 109 99 67 q 64 208 64 151 m 191 207 q 224 117 191 146 q 312 88 258 88 q 389 101 354 88 q 451 139 425 113 q 492 204 477 165 q 507 296 507 243 l 507 363 l 408 358 q 305 345 347 355 q 238 315 263 334 q 202 269 213 296 q 191 207 191 241 m 807 655 q 688 603 731 655 q 637 450 644 550 l 960 450 q 951 533 960 495 q 923 598 942 572 q 876 640 904 625 q 807 655 847 655 m 519 860 q 549 905 533 879 q 581 958 565 931 q 612 1013 597 986 q 637 1064 626 1040 l 786 1064 l 786 1049 q 753 1004 775 1031 q 706 946 732 976 q 652 889 680 917 q 601 842 624 860 l 519 842 l 519 860 "},"Β":{x_min:135,x_max:786,ha:863,o:"m 135 992 l 405 992 q 558 978 492 992 q 668 936 624 965 q 735 858 713 906 q 758 740 758 810 q 744 662 758 698 q 707 597 731 625 q 645 551 682 569 q 563 526 609 532 l 563 519 q 650 496 609 511 q 720 454 690 480 q 768 386 751 427 q 786 287 786 345 q 763 166 786 219 q 700 76 741 113 q 598 19 658 39 q 463 0 539 0 l 135 0 l 135 992 m 261 572 l 427 572 q 523 582 485 572 q 586 612 562 592 q 621 662 610 632 q 631 732 631 692 q 579 848 631 813 q 413 884 526 884 l 261 884 l 261 572 m 261 464 l 261 107 l 441 107 q 541 121 500 107 q 606 159 581 134 q 641 217 630 183 q 652 292 652 251 q 641 362 652 330 q 604 416 630 393 q 537 451 579 439 q 433 464 495 464 l 261 464 "},"Ļ":{x_min:135,x_max:649.4375,ha:682,o:"m 135 0 l 135 992 l 261 992 l 261 111 l 649 111 l 649 0 l 135 0 m 279 -288 q 295 -246 286 -271 q 312 -191 304 -220 q 326 -135 320 -163 q 335 -85 333 -107 l 458 -85 l 458 -98 q 443 -141 453 -115 q 417 -197 432 -167 q 383 -255 402 -226 q 345 -307 365 -284 l 279 -307 l 279 -288 "},"Õ":{x_min:85,x_max:945,ha:1031,o:"m 945 496 q 917 287 945 382 q 835 126 890 193 q 701 22 781 59 q 515 -14 620 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 498 85 382 q 110 707 85 613 q 190 867 136 801 q 325 970 243 934 q 517 1007 406 1007 q 701 970 622 1007 q 835 867 781 934 q 917 706 890 800 q 945 496 945 612 m 218 497 q 236 330 218 404 q 290 204 253 255 q 382 124 326 152 q 515 97 438 97 q 648 124 593 97 q 741 204 704 152 q 794 330 777 255 q 811 497 811 404 q 794 664 811 590 q 741 789 777 738 q 649 868 705 840 q 517 895 594 895 q 383 868 439 895 q 290 789 327 840 q 236 664 253 738 q 218 497 218 590 m 604 1072 q 550 1083 577 1072 q 498 1110 524 1095 q 448 1136 472 1124 q 403 1148 424 1148 q 356 1130 372 1148 q 330 1070 340 1112 l 260 1070 q 274 1144 263 1111 q 303 1201 285 1177 q 346 1237 321 1224 q 403 1250 371 1250 q 459 1238 431 1250 q 512 1211 486 1226 q 561 1185 538 1197 q 604 1173 585 1173 q 650 1191 635 1173 q 676 1251 666 1209 l 748 1251 q 733 1177 744 1210 q 704 1121 722 1144 q 661 1084 686 1097 q 604 1072 636 1072 "},"№":{x_min:135,x_max:1308,ha:1372,o:"m 807 0 l 653 0 l 253 821 l 248 821 q 255 717 252 768 q 259 624 257 673 q 261 538 261 576 l 261 0 l 135 0 l 135 992 l 288 992 l 686 174 l 690 174 q 685 276 688 226 q 683 321 684 298 q 682 366 682 343 q 681 410 681 389 q 680 449 680 431 l 680 992 l 807 992 l 807 0 m 1308 412 q 1294 309 1308 354 q 1254 234 1280 264 q 1190 187 1227 203 q 1107 171 1153 171 q 1028 187 1064 171 q 966 234 992 203 q 924 309 939 264 q 910 412 910 354 q 923 513 910 469 q 963 588 937 558 q 1027 635 990 619 q 1110 651 1064 651 q 1188 635 1152 651 q 1251 588 1225 619 q 1293 513 1278 558 q 1308 412 1308 469 m 1006 412 q 1031 294 1006 334 q 1109 254 1055 254 q 1187 294 1163 254 q 1211 412 1211 334 q 1187 529 1211 491 q 1109 567 1163 567 q 1031 529 1055 567 q 1006 412 1006 491 m 938 0 l 938 83 l 1275 83 l 1275 0 l 938 0 "},"χ":{x_min:-14.25,x_max:720,ha:728,o:"m 126 747 q 182 736 157 747 q 226 704 207 725 q 263 652 246 683 q 294 580 279 621 l 377 346 l 573 745 l 694 745 l 424 218 l 544 -107 q 564 -155 554 -132 q 586 -194 574 -177 q 617 -221 599 -211 q 660 -231 635 -231 q 693 -229 677 -231 q 720 -226 709 -228 l 720 -322 q 685 -330 705 -326 q 639 -334 666 -334 q 561 -321 593 -334 q 505 -284 529 -308 q 463 -226 481 -260 q 430 -147 446 -191 l 342 98 l 117 -334 l -14 -334 l 294 228 l 185 530 q 142 614 167 584 q 82 644 118 644 q 39 637 58 644 l 39 735 q 75 743 53 740 q 126 747 96 747 "},"ί":{x_min:111,x_max:428,ha:454,o:"m 234 743 l 234 220 q 255 121 234 154 q 326 88 277 88 q 353 89 338 88 q 383 93 368 91 q 409 97 397 95 q 428 102 421 100 l 428 8 q 405 0 419 3 q 375 -7 391 -4 q 341 -12 358 -10 q 307 -14 323 -14 q 229 -3 265 -14 q 167 34 193 7 q 125 105 140 60 q 111 219 111 150 l 111 743 l 234 743 m 134 860 q 147 906 140 880 q 160 960 154 932 q 172 1014 167 987 q 181 1064 178 1041 l 316 1064 l 316 1049 q 300 1007 311 1033 q 274 951 289 980 q 241 892 258 921 q 207 842 223 863 l 134 842 l 134 860 "},"Ζ":{x_min:56,x_max:693,ha:749,o:"m 693 0 l 56 0 l 56 97 l 537 880 l 70 880 l 70 992 l 679 992 l 679 894 l 197 111 l 693 111 l 693 0 "},"Ľ":{x_min:135,x_max:649.4375,ha:682,o:"m 135 0 l 135 992 l 261 992 l 261 111 l 649 111 l 649 0 l 135 0 m 439 787 q 451 834 445 808 q 463 887 457 860 q 473 942 468 915 q 480 992 478 969 l 603 992 l 603 978 q 588 934 598 961 q 564 879 577 908 q 534 820 550 850 q 504 770 519 791 l 439 770 l 439 787 "},"ť":{x_min:23,x_max:505,ha:471,o:"m 343 88 q 371 89 355 88 q 400 93 386 91 q 426 97 415 95 q 445 102 438 100 l 445 8 q 422 0 436 3 q 392 -7 409 -4 q 358 -12 376 -10 q 324 -14 341 -14 q 246 -3 282 -14 q 184 34 210 7 q 142 106 157 61 q 128 221 128 152 l 128 656 l 23 656 l 23 709 l 128 759 l 180 915 l 251 915 l 251 745 l 439 745 l 439 656 l 251 656 l 251 221 q 272 121 251 155 q 343 88 294 88 m 341 850 q 353 897 347 871 q 365 950 359 923 q 375 1005 370 978 q 382 1055 380 1032 l 505 1055 l 505 1041 q 490 997 500 1024 q 466 942 479 971 q 436 883 452 913 q 406 833 421 854 l 341 833 l 341 850 "},5:{x_min:89,x_max:688,ha:765,o:"m 369 608 q 494 589 436 608 q 596 534 552 570 q 663 443 639 497 q 688 317 688 388 q 664 178 688 240 q 596 74 641 116 q 484 8 550 31 q 330 -14 417 -14 q 262 -10 295 -14 q 197 0 228 -7 q 139 15 167 5 q 89 39 111 26 l 89 156 q 141 128 111 140 q 205 108 172 116 q 272 95 238 99 q 334 91 306 91 q 430 103 388 91 q 501 142 472 116 q 546 208 531 169 q 562 303 562 248 q 502 451 562 400 q 328 502 442 502 q 288 501 310 502 q 245 496 267 499 q 204 491 224 494 q 171 485 185 487 l 110 523 l 147 992 l 615 992 l 615 879 l 254 879 l 228 594 q 285 603 249 598 q 369 608 320 608 "},o:{x_min:77,x_max:725,ha:802,o:"m 725 373 q 702 208 725 280 q 637 86 679 135 q 534 11 594 37 q 398 -14 474 -14 q 270 11 329 -14 q 168 86 211 37 q 101 208 125 135 q 77 373 77 280 q 99 537 77 465 q 164 657 122 608 q 267 732 206 707 q 403 758 327 758 q 531 732 472 758 q 633 657 590 707 q 700 537 676 608 q 725 373 725 465 m 204 373 q 250 159 204 231 q 401 88 297 88 q 551 159 506 88 q 597 373 597 231 q 551 585 597 515 q 400 655 504 655 q 250 585 295 655 q 204 373 204 515 "},"Ѕ":{x_min:70.109375,x_max:657,ha:721,o:"m 657 264 q 633 147 657 199 q 566 59 610 95 q 460 4 523 23 q 320 -14 398 -14 q 179 -2 245 -14 q 70 32 114 9 l 70 153 q 122 131 93 142 q 184 112 151 120 q 251 99 216 104 q 319 93 285 93 q 479 134 427 93 q 530 252 530 176 q 521 316 530 289 q 486 366 511 343 q 420 410 461 389 q 316 456 379 431 q 212 508 256 480 q 139 572 168 537 q 96 652 110 607 q 83 754 83 697 q 104 860 83 813 q 165 939 126 907 q 259 989 205 972 q 380 1006 314 1006 q 525 990 460 1006 q 640 951 589 975 l 595 845 q 495 880 551 865 q 381 894 440 894 q 254 856 299 894 q 209 752 209 818 q 219 686 209 714 q 252 635 229 657 q 315 592 276 612 q 410 549 353 572 q 517 499 471 525 q 594 441 563 473 q 641 366 625 408 q 657 264 657 323 "},"�":{x_min:57.328125,x_max:1331.03125,ha:1389,o:"m 693 1055 l 1331 419 l 693 -216 l 57 419 l 693 1055 m 737 249 l 737 280 q 748 331 737 310 q 811 392 759 352 q 904 488 878 443 q 931 592 931 532 q 914 676 931 639 q 866 737 897 712 q 791 775 835 762 q 692 789 747 789 q 632 783 662 789 q 572 769 601 778 q 514 747 542 759 q 464 722 487 736 l 519 601 q 608 640 565 624 q 689 656 651 656 q 753 636 732 656 q 774 584 774 616 q 761 528 774 551 q 692 461 747 505 q 620 384 645 425 q 595 289 595 343 l 595 249 l 737 249 m 577 62 q 601 -4 577 20 q 672 -29 625 -29 q 742 -4 718 -29 q 767 62 767 20 q 742 130 767 105 q 672 155 718 155 q 601 130 625 155 q 577 62 577 105 "},d:{x_min:77,x_max:696,ha:814,o:"m 577 99 l 572 99 q 537 55 557 76 q 491 19 517 34 q 432 -5 465 3 q 359 -14 400 -14 q 244 10 296 -14 q 154 83 192 34 q 97 203 117 131 q 77 370 77 275 q 97 538 77 466 q 154 659 117 610 q 244 733 192 708 q 359 758 296 758 q 432 749 399 758 q 490 725 464 740 q 537 690 516 710 q 572 649 557 671 l 580 649 q 576 693 578 672 q 573 729 575 711 q 572 759 572 748 l 572 1055 l 696 1055 l 696 0 l 596 0 l 577 99 m 383 88 q 470 104 434 88 q 528 151 506 119 q 560 231 550 183 q 572 342 571 279 l 572 370 q 563 492 572 439 q 532 581 554 545 q 473 636 510 618 q 382 655 437 655 q 247 581 290 655 q 204 369 204 507 q 247 157 204 227 q 383 88 290 88 "},",":{x_min:43,x_max:256,ha:347,o:"m 245 161 l 256 145 q 233 67 246 108 q 204 -15 220 26 q 170 -99 188 -57 q 136 -179 153 -141 l 43 -179 q 63 -92 53 -137 q 82 -3 72 -48 q 98 82 91 40 q 111 161 106 125 l 245 161 "},'"':{x_min:90,x_max:468.609375,ha:558,o:"m 223 992 l 195 634 l 117 634 l 90 992 l 223 992 m 468 992 l 440 634 l 362 634 l 335 992 l 468 992 "},"ľ":{x_min:118,x_max:469,ha:359,o:"m 241 0 l 118 0 l 118 1055 l 241 1055 l 241 0 m 305 850 q 317 897 311 871 q 329 950 323 923 q 339 1005 334 978 q 346 1055 344 1032 l 469 1055 l 469 1041 q 454 997 464 1024 q 430 942 443 971 q 400 883 416 913 q 370 833 385 854 l 305 833 l 305 850 "},"ė":{x_min:77,x_max:673,ha:743,o:"m 412 -14 q 276 11 337 -14 q 170 84 214 36 q 101 203 125 132 q 77 366 77 274 q 99 531 77 458 q 162 654 121 604 q 259 731 202 705 q 384 758 316 758 q 505 733 451 758 q 595 665 558 709 q 653 560 633 621 q 673 423 673 498 l 673 346 l 204 346 q 259 155 207 216 q 413 93 311 93 q 477 97 448 93 q 534 107 507 100 q 587 123 561 113 q 639 145 613 133 l 639 35 q 586 13 612 22 q 533 -2 560 3 q 476 -11 505 -8 q 412 -14 446 -14 m 384 655 q 260 602 306 655 q 207 449 214 549 l 545 449 q 536 533 545 495 q 507 598 526 571 q 457 640 487 625 q 384 655 427 655 m 311 945 q 331 1004 311 986 q 382 1023 352 1023 q 411 1018 397 1023 q 434 1004 424 1014 q 449 980 443 995 q 455 945 455 966 q 434 887 455 906 q 382 868 412 868 q 331 886 352 868 q 311 945 311 905 "},"Í":{x_min:55.34375,x_max:441,ha:471,o:"m 414 0 l 55 0 l 55 69 l 172 96 l 172 895 l 55 922 l 55 992 l 414 992 l 414 922 l 298 895 l 298 96 l 414 69 l 414 0 m 174 1089 q 204 1134 188 1108 q 236 1187 220 1160 q 267 1242 252 1215 q 292 1293 281 1269 l 441 1293 l 441 1278 q 408 1233 430 1260 q 361 1175 387 1205 q 307 1118 335 1146 q 256 1071 279 1089 l 174 1071 l 174 1089 "},"Ú":{x_min:125,x_max:845,ha:970,o:"m 845 993 l 845 349 q 822 205 845 272 q 755 90 800 139 q 641 13 709 41 q 481 -14 573 -14 q 327 12 394 -14 q 216 86 261 38 q 148 202 171 134 q 125 352 125 269 l 125 991 l 251 991 l 251 346 q 309 162 251 227 q 487 97 368 97 q 591 115 548 97 q 663 167 635 133 q 704 246 690 200 q 718 347 718 292 l 718 993 l 845 993 m 401 1089 q 431 1134 415 1108 q 463 1187 447 1160 q 494 1242 479 1215 q 519 1293 508 1269 l 668 1293 l 668 1278 q 635 1233 657 1260 q 588 1175 614 1205 q 534 1118 562 1146 q 483 1071 506 1089 l 401 1071 l 401 1089 "}," ":{x_min:0,x_max:0,ha:278},"Ŷ":{x_min:-.25,x_max:731.25,ha:732,o:"m 364 490 l 595 992 l 731 992 l 428 386 l 428 0 l 302 0 l 302 379 l 0 992 l 137 992 l 364 490 m 592 1071 l 510 1071 q 438 1126 475 1093 q 367 1196 402 1159 q 294 1126 330 1159 q 224 1071 258 1093 l 142 1071 l 142 1089 q 182 1134 159 1108 q 228 1187 205 1160 q 271 1242 251 1215 q 301 1293 291 1269 l 432 1293 q 462 1242 442 1269 q 505 1187 482 1215 q 551 1134 528 1160 q 592 1089 575 1108 l 592 1071 "},"Ý":{x_min:-.25,x_max:731.25,ha:732,o:"m 364 490 l 595 992 l 731 992 l 428 386 l 428 0 l 302 0 l 302 379 l 0 992 l 137 992 l 364 490 m 299 1089 q 329 1134 313 1108 q 361 1187 345 1160 q 392 1242 377 1215 q 417 1293 406 1269 l 566 1293 l 566 1278 q 533 1233 555 1260 q 486 1175 512 1205 q 432 1118 460 1146 q 381 1071 404 1089 l 299 1071 l 299 1089 "},"ŝ":{x_min:61.15625,x_max:564,ha:627,o:"m 564 203 q 544 108 564 149 q 487 40 524 68 q 398 0 450 13 q 281 -14 346 -14 q 154 -2 207 -14 q 61 33 101 9 l 61 146 q 107 125 82 135 q 161 106 133 114 q 219 93 189 98 q 279 88 249 88 q 353 95 323 88 q 403 116 384 103 q 431 150 423 130 q 440 194 440 170 q 433 232 440 215 q 409 265 427 249 q 360 299 391 282 q 280 337 329 316 q 193 378 232 358 q 127 424 154 399 q 86 482 100 449 q 72 560 72 515 q 90 645 72 608 q 143 707 109 682 q 224 745 177 732 q 330 758 272 758 q 451 743 396 758 q 554 706 505 729 l 512 606 q 422 641 468 626 q 329 655 376 655 q 228 632 261 655 q 195 568 195 610 q 203 526 195 544 q 229 493 210 509 q 279 461 248 477 q 358 426 311 445 q 444 385 406 405 q 509 339 482 365 q 549 281 535 314 q 564 203 564 249 m 557 842 l 475 842 q 403 897 440 864 q 332 967 367 930 q 259 897 295 930 q 189 842 223 864 l 107 842 l 107 860 q 147 905 124 879 q 193 958 170 931 q 236 1013 216 986 q 266 1064 256 1040 l 397 1064 q 427 1013 407 1040 q 470 958 447 986 q 516 905 493 931 q 557 860 540 879 l 557 842 "}," ":{x_min:0,x_max:0,ha:1389},"ą":{x_min:64,x_max:646,ha:737,o:"m 536 0 l 511 102 l 505 102 q 461 50 483 72 q 412 13 439 28 q 353 -7 386 0 q 278 -14 321 -14 q 193 0 232 -14 q 125 40 153 12 q 80 109 96 67 q 64 208 64 151 q 142 379 64 320 q 379 445 220 439 l 503 450 l 503 496 q 494 572 503 541 q 465 620 484 602 q 419 647 447 639 q 357 655 392 655 q 253 639 301 655 q 160 599 204 623 l 117 692 q 228 739 167 720 q 357 758 290 758 q 477 744 427 758 q 560 700 527 730 q 609 623 593 669 q 626 509 626 576 l 626 0 l 536 0 m 310 88 q 386 101 351 88 q 447 140 422 114 q 488 205 473 166 q 502 298 502 245 l 502 365 l 405 360 q 303 346 345 357 q 237 316 262 336 q 202 270 213 297 q 191 208 191 243 q 224 117 191 146 q 310 88 257 88 m 527 -161 q 545 -206 527 -191 q 587 -220 563 -220 q 620 -218 604 -220 q 646 -214 636 -217 l 646 -291 q 606 -299 628 -296 q 565 -302 585 -302 q 463 -266 497 -302 q 430 -170 430 -231 q 439 -116 430 -142 q 465 -69 449 -91 q 498 -30 480 -48 q 534 0 517 -12 l 621 0 q 527 -161 527 -90 "},"​":{x_min:0,x_max:0,ha:0},"ã":{x_min:64,x_max:626,ha:737,o:"m 536 0 l 511 102 l 505 102 q 461 50 483 72 q 412 13 439 28 q 353 -7 386 0 q 278 -14 321 -14 q 193 0 232 -14 q 125 40 153 12 q 80 109 96 67 q 64 208 64 151 q 142 379 64 320 q 379 445 220 439 l 503 450 l 503 496 q 494 572 503 541 q 465 620 484 602 q 419 647 447 639 q 357 655 392 655 q 253 639 301 655 q 160 599 204 623 l 117 692 q 228 739 167 720 q 357 758 290 758 q 477 744 427 758 q 560 700 527 730 q 609 623 593 669 q 626 509 626 576 l 626 0 l 536 0 m 310 88 q 386 101 351 88 q 447 140 422 114 q 488 205 473 166 q 502 298 502 245 l 502 365 l 405 360 q 303 346 345 357 q 237 316 262 336 q 202 270 213 297 q 191 208 191 243 q 224 117 191 146 q 310 88 257 88 m 473 843 q 419 854 446 843 q 367 881 393 866 q 317 907 341 895 q 272 919 293 919 q 225 901 241 919 q 199 841 209 883 l 129 841 q 143 915 132 882 q 172 972 154 948 q 215 1008 190 995 q 272 1021 240 1021 q 328 1009 300 1021 q 381 982 355 997 q 430 956 407 968 q 473 944 454 944 q 519 962 504 944 q 545 1022 535 980 l 617 1022 q 602 948 613 981 q 573 892 591 915 q 530 855 555 868 q 473 843 505 843 "},"æ":{x_min:64,x_max:1088,ha:1157,o:"m 64 208 q 142 379 64 320 q 382 445 221 439 l 508 450 l 508 496 q 498 572 508 541 q 469 620 488 602 q 423 647 450 639 q 360 655 395 655 q 254 639 303 655 q 160 599 205 623 l 117 692 q 229 739 167 720 q 359 758 291 758 q 505 729 448 758 q 591 637 562 700 q 681 726 625 694 q 807 758 737 758 q 924 733 872 758 q 1013 665 976 709 q 1068 560 1049 622 q 1088 424 1088 499 l 1088 347 l 634 347 q 687 157 637 218 q 836 96 737 96 q 897 99 869 96 q 952 109 926 103 q 1004 126 979 116 q 1054 148 1029 135 l 1054 36 q 1002 13 1027 23 q 950 -2 977 4 q 895 -11 923 -8 q 833 -14 866 -14 q 672 24 740 -14 q 562 141 604 63 q 513 75 539 104 q 454 27 487 47 q 383 -3 422 7 q 293 -14 343 -14 q 202 0 244 -14 q 130 40 160 12 q 81 109 99 67 q 64 208 64 151 m 191 207 q 224 117 191 146 q 312 88 258 88 q 389 101 354 88 q 451 139 425 113 q 492 204 477 165 q 507 296 507 243 l 507 363 l 408 358 q 305 345 347 355 q 238 315 263 334 q 202 269 213 296 q 191 207 191 241 m 807 655 q 688 603 731 655 q 637 450 644 550 l 960 450 q 951 533 960 495 q 923 598 942 572 q 876 640 904 625 q 807 655 847 655 "},"ĩ":{x_min:-63,x_max:425,ha:359,o:"m 241 0 l 118 0 l 118 745 l 241 745 l 241 0 m 281 843 q 227 854 254 843 q 175 881 201 866 q 125 907 149 895 q 80 919 101 919 q 33 901 49 919 q 7 841 17 883 l -63 841 q -48 915 -59 882 q -19 972 -37 948 q 23 1008 -1 995 q 80 1021 48 1021 q 136 1009 108 1021 q 189 982 163 997 q 238 956 215 968 q 281 944 262 944 q 327 962 312 944 q 353 1022 343 980 l 425 1022 q 410 948 421 981 q 381 892 399 915 q 338 855 363 868 q 281 843 313 843 "},"~":{x_min:69,x_max:696,ha:765,o:"m 359 441 q 315 459 334 452 q 281 471 297 467 q 252 477 266 475 q 223 479 238 479 q 184 472 204 479 q 143 455 164 466 q 104 429 123 444 q 69 397 85 414 l 69 507 q 237 581 136 581 q 273 579 256 581 q 309 573 290 577 q 350 560 328 568 q 405 538 373 552 q 449 520 430 527 q 483 508 468 512 q 513 502 499 504 q 541 500 527 500 q 581 507 560 500 q 621 524 601 513 q 660 550 641 535 q 696 582 679 565 l 696 472 q 527 399 628 399 q 491 400 508 399 q 455 406 474 402 q 414 419 436 411 q 359 441 391 428 "},"ŀ":{x_min:118,x_max:457.46875,ha:416,o:"m 241 0 l 118 0 l 118 1055 l 241 1055 l 241 0 m 313 462 q 333 521 313 503 q 384 540 354 540 q 413 535 399 540 q 436 521 426 531 q 451 497 445 512 q 457 462 457 483 q 436 404 457 423 q 384 385 414 385 q 333 403 354 385 q 313 462 313 422 "},"Ċ":{x_min:85,x_max:798,ha:838,o:"m 538 894 q 406 867 465 894 q 305 788 347 839 q 241 662 264 736 q 218 496 218 588 q 238 326 218 400 q 298 200 258 251 q 398 123 338 150 q 538 97 458 97 q 652 108 598 97 q 760 135 707 120 l 760 26 q 707 8 733 15 q 651 -4 680 0 q 590 -11 622 -9 q 517 -14 557 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 497 85 382 q 114 703 85 609 q 201 864 144 796 q 343 968 258 931 q 538 1006 428 1006 q 677 991 611 1006 q 798 947 744 976 l 745 841 q 652 879 702 863 q 538 894 601 894 m 456 1174 q 476 1233 456 1215 q 527 1252 497 1252 q 556 1247 542 1252 q 579 1233 569 1243 q 594 1209 588 1224 q 600 1174 600 1195 q 579 1116 600 1135 q 527 1097 557 1097 q 476 1115 497 1097 q 456 1174 456 1134 "},"¡":{x_min:100,x_max:272.265625,ha:374,o:"m 144 458 l 226 458 l 261 -253 l 110 -253 l 144 458 m 272 663 q 265 619 272 637 q 247 590 259 601 q 220 574 235 579 q 186 569 204 569 q 152 574 168 569 q 125 590 137 579 q 106 619 113 601 q 100 663 100 637 q 106 706 100 688 q 125 735 113 724 q 152 752 137 747 q 186 758 168 758 q 220 752 204 758 q 247 735 235 747 q 265 706 259 724 q 272 663 272 688 "},"ẅ":{x_min:13.75,x_max:1022.25,ha:1036,o:"m 683 0 l 570 417 q 563 445 567 430 q 555 477 559 460 q 546 512 551 494 q 538 546 542 529 q 518 628 528 586 l 514 628 q 496 546 505 585 q 480 476 488 512 q 464 415 471 440 l 347 0 l 204 0 l 13 745 l 143 745 l 232 348 q 245 282 239 318 q 258 211 252 246 q 269 146 264 177 q 277 95 274 115 l 281 95 q 290 142 284 113 q 303 205 296 172 q 317 270 310 238 q 331 324 325 302 l 453 745 l 586 745 l 702 324 q 716 270 709 301 q 732 207 724 239 q 745 145 739 175 q 754 95 751 115 l 758 95 q 764 142 760 113 q 775 207 769 172 q 788 279 781 242 q 803 348 795 316 l 896 745 l 1022 745 l 829 0 l 683 0 m 325 945 q 343 998 325 982 q 390 1015 362 1015 q 436 998 416 1015 q 455 945 455 981 q 436 892 455 909 q 390 876 416 876 q 343 892 362 876 q 325 945 325 909 m 579 945 q 598 998 579 982 q 644 1015 617 1015 q 669 1010 657 1015 q 690 998 681 1006 q 704 977 699 989 q 710 945 710 964 q 690 892 710 909 q 644 876 670 876 q 598 892 617 876 q 579 945 579 909 "
},"К":{x_min:135,x_max:804.25,ha:804,o:"m 804 0 l 655 0 l 261 502 l 261 0 l 135 0 l 135 992 l 261 992 l 261 511 l 644 992 l 784 992 l 401 515 l 804 0 "},"Γ":{x_min:135,x_max:649,ha:682,o:"m 649 992 l 649 880 l 261 880 l 261 0 l 135 0 l 135 992 l 649 992 "},P:{x_min:135,x_max:729,ha:800,o:"m 729 701 q 710 582 729 639 q 648 482 691 525 q 536 412 606 438 q 362 386 465 386 l 261 386 l 261 0 l 135 0 l 135 992 l 380 992 q 537 972 471 992 q 645 916 602 953 q 708 825 688 879 q 729 701 729 770 m 261 493 l 347 493 q 456 504 410 493 q 533 539 503 515 q 579 601 564 563 q 595 695 595 640 q 540 837 595 791 q 368 884 485 884 l 261 884 l 261 493 "},"%":{x_min:69,x_max:1076,ha:1146,o:"m 169 695 q 193 527 169 583 q 271 471 217 471 q 377 695 377 471 q 271 917 377 917 q 193 862 217 917 q 169 695 169 807 m 478 695 q 465 564 478 622 q 428 465 453 505 q 364 404 403 425 q 271 383 325 383 q 184 404 222 383 q 120 465 146 425 q 81 564 94 505 q 69 695 69 622 q 80 826 69 769 q 117 924 92 884 q 180 984 142 963 q 271 1006 218 1006 q 360 984 322 1006 q 425 924 399 963 q 464 826 451 884 q 478 695 478 769 m 768 297 q 792 129 768 185 q 870 74 816 74 q 975 297 975 74 q 870 519 975 519 q 792 464 816 519 q 768 297 768 409 m 1076 298 q 1064 166 1076 224 q 1027 68 1052 108 q 963 7 1002 28 q 870 -14 924 -14 q 782 7 820 -14 q 719 68 744 28 q 680 166 693 108 q 668 298 668 224 q 679 428 668 371 q 716 526 691 486 q 779 586 741 565 q 870 608 817 608 q 959 586 921 608 q 1023 526 998 565 q 1062 428 1049 486 q 1076 298 1076 371 m 902 992 l 351 0 l 244 0 l 795 992 l 902 992 "},"ϖ":{x_min:11.828125,x_max:1106.265625,ha:1150,o:"m 374 -14 q 185 65 251 -14 q 119 310 119 145 q 125 392 119 349 q 142 477 131 434 q 167 562 152 520 q 199 642 182 604 l 11 642 l 11 691 l 102 745 l 1106 745 l 1106 642 l 941 642 q 970 562 957 604 q 992 477 983 520 q 1006 392 1001 434 q 1012 310 1012 349 q 945 65 1012 145 q 756 -14 879 -14 q 637 15 684 -14 q 569 106 590 45 l 562 106 q 493 15 541 45 q 374 -14 446 -14 m 321 642 q 293 565 306 605 q 269 484 279 525 q 252 401 258 442 q 246 320 246 359 q 256 208 246 253 q 284 137 266 164 q 327 99 302 110 q 382 88 352 88 q 436 102 413 88 q 474 140 459 116 q 496 198 489 165 q 504 270 504 231 l 504 390 l 627 390 l 627 270 q 660 135 627 182 q 748 88 693 88 q 803 99 778 88 q 846 137 828 110 q 874 208 865 164 q 884 320 884 253 q 879 401 884 359 q 865 484 874 442 q 845 565 857 525 q 819 642 833 605 l 321 642 "},_:{x_min:-3,x_max:574,ha:571,o:"m 574 -219 l -3 -219 l -3 -125 l 574 -125 l 574 -219 "},"ñ":{x_min:118,x_max:707,ha:818,o:"m 583 0 l 583 479 q 547 611 583 567 q 436 655 512 655 q 343 637 381 655 q 283 585 306 620 q 251 501 261 551 q 241 385 241 450 l 241 0 l 118 0 l 118 745 l 218 745 l 236 644 l 242 644 q 283 694 259 673 q 334 730 306 715 q 393 751 362 744 q 457 758 424 758 q 644 693 581 758 q 707 486 707 628 l 707 0 l 583 0 m 514 843 q 460 854 487 843 q 408 881 434 866 q 358 907 382 895 q 313 919 334 919 q 266 901 282 919 q 240 841 250 883 l 170 841 q 184 915 173 882 q 213 972 195 948 q 256 1008 231 995 q 313 1021 281 1021 q 369 1009 341 1021 q 422 982 396 997 q 471 956 448 968 q 514 944 495 944 q 560 962 545 944 q 586 1022 576 980 l 658 1022 q 643 948 654 981 q 614 892 632 915 q 571 855 596 868 q 514 843 546 843 "},"Ŕ":{x_min:135,x_max:803.25,ha:819,o:"m 261 410 l 261 0 l 135 0 l 135 992 l 376 992 q 642 922 556 992 q 729 710 729 852 q 712 607 729 651 q 668 531 695 563 q 605 479 640 500 q 533 444 570 458 l 803 0 l 654 0 l 416 410 l 261 410 m 261 517 l 371 517 q 473 529 431 517 q 543 564 516 541 q 582 623 570 588 q 595 704 595 658 q 581 787 595 753 q 540 842 567 821 q 469 874 512 864 q 368 884 426 884 l 261 884 l 261 517 m 324 1089 q 354 1134 338 1108 q 386 1187 370 1160 q 417 1242 402 1215 q 442 1293 431 1269 l 591 1293 l 591 1278 q 558 1233 580 1260 q 511 1175 537 1205 q 457 1118 485 1146 q 406 1071 429 1089 l 324 1071 l 324 1089 "},"‚":{x_min:43,x_max:256,ha:347,o:"m 246 161 l 256 145 q 233 67 246 108 q 204 -15 220 26 q 170 -99 188 -57 q 136 -179 153 -141 l 43 -179 q 66 -92 54 -137 q 88 -3 77 -48 q 107 82 98 40 q 122 161 116 125 l 246 161 "},"⅞":{x_min:77,x_max:1011,ha:1051,o:"m 141 397 l 363 908 l 77 908 l 77 992 l 460 992 l 460 924 l 243 397 l 141 397 m 804 992 l 253 0 l 146 0 l 697 992 l 804 992 m 815 604 q 883 594 851 604 q 938 567 914 585 q 976 519 962 548 q 991 453 991 491 q 983 407 991 428 q 962 369 976 386 q 931 338 949 352 q 893 313 914 325 q 938 285 917 300 q 975 251 959 270 q 1001 209 991 233 q 1011 157 1011 186 q 996 87 1011 119 q 956 33 982 56 q 894 0 930 11 q 816 -13 858 -13 q 670 31 721 -13 q 620 153 620 75 q 628 205 620 182 q 651 247 636 228 q 684 281 665 266 q 724 307 703 295 q 690 335 705 321 q 662 368 674 350 q 644 407 650 386 q 638 453 638 428 q 652 519 638 491 q 691 566 667 547 q 748 594 716 585 q 815 604 780 604 m 716 155 q 741 93 716 116 q 814 70 766 70 q 888 93 863 70 q 914 155 914 116 q 906 190 914 174 q 885 219 899 206 q 854 242 872 232 q 813 262 835 253 l 802 266 q 738 219 760 244 q 716 155 716 193 m 813 520 q 755 502 776 520 q 734 449 734 484 q 741 417 734 431 q 757 392 747 404 q 783 371 768 380 q 815 353 798 361 q 846 370 831 360 q 871 390 860 379 q 887 416 881 402 q 894 449 894 430 q 872 502 894 484 q 813 520 850 520 "},"Æ":{x_min:-1.25,x_max:1101,ha:1184,o:"m 1101 0 l 585 0 l 585 307 l 262 307 l 124 0 l -1 0 l 443 992 l 1101 992 l 1101 880 l 711 880 l 711 574 l 1075 574 l 1075 462 l 711 462 l 711 111 l 1101 111 l 1101 0 m 311 419 l 585 419 l 585 880 l 512 880 l 311 419 "},"₣":{x_min:65,x_max:694,ha:765,o:"m 310 271 l 503 271 l 503 163 l 310 163 l 310 0 l 184 0 l 184 163 l 65 163 l 65 271 l 184 271 l 184 992 l 694 992 l 694 880 l 310 880 l 310 531 l 668 531 l 668 419 l 310 419 l 310 271 "},"Ū":{x_min:125,x_max:845,ha:970,o:"m 845 993 l 845 349 q 822 205 845 272 q 755 90 800 139 q 641 13 709 41 q 481 -14 573 -14 q 327 12 394 -14 q 216 86 261 38 q 148 202 171 134 q 125 352 125 269 l 125 991 l 251 991 l 251 346 q 309 162 251 227 q 487 97 368 97 q 591 115 548 97 q 663 167 635 133 q 704 246 690 200 q 718 347 718 292 l 718 993 l 845 993 m 290 1172 l 680 1172 l 680 1071 l 290 1071 l 290 1172 "},"ы":{x_min:118,x_max:922,ha:1040,o:"m 241 439 l 401 439 q 613 386 544 439 q 683 227 683 333 q 667 133 683 175 q 616 61 651 91 q 528 15 582 31 q 398 0 475 0 l 118 0 l 118 745 l 241 745 l 241 439 m 922 0 l 798 0 l 798 745 l 922 745 l 922 0 m 241 336 l 241 102 l 388 102 q 457 108 426 102 q 511 127 488 113 q 546 164 534 141 q 559 219 559 186 q 548 275 559 252 q 515 311 537 297 q 461 330 493 325 q 386 336 429 336 l 241 336 "},"ѓ":{x_min:118,x_max:527,ha:555,o:"m 527 642 l 241 642 l 241 0 l 118 0 l 118 745 l 527 745 l 527 642 m 236 860 q 266 905 250 879 q 298 958 282 931 q 329 1013 314 986 q 354 1064 343 1040 l 503 1064 l 503 1049 q 470 1004 492 1031 q 423 946 449 976 q 369 889 397 917 q 318 842 341 860 l 236 842 l 236 860 "},"Œ":{x_min:85,x_max:1153,ha:1236,o:"m 1153 0 l 639 0 q 578 -10 609 -6 q 515 -14 548 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 498 85 382 q 110 707 85 613 q 190 867 136 801 q 325 970 243 934 q 516 1007 406 1007 q 640 992 583 1007 l 1153 992 l 1153 880 l 764 880 l 764 574 l 1127 574 l 1127 462 l 764 462 l 764 111 l 1153 111 l 1153 0 m 517 895 q 383 868 439 895 q 290 789 327 840 q 236 664 253 738 q 218 497 218 590 q 236 330 218 404 q 290 204 253 255 q 382 124 326 152 q 515 97 438 97 q 581 103 551 97 q 638 119 612 109 l 638 873 q 582 890 612 884 q 517 895 551 895 "},"΅":{x_min:187,x_max:614,ha:802,o:"m 346 959 q 361 1005 353 980 q 378 1057 370 1030 q 393 1112 386 1084 q 406 1164 401 1139 l 547 1164 l 547 1150 q 518 1102 534 1128 q 483 1049 502 1076 q 443 994 464 1022 q 401 942 423 967 l 346 942 l 346 959 m 187 945 q 201 998 187 982 q 236 1015 215 1015 q 254 1010 245 1015 q 270 998 263 1006 q 280 977 276 989 q 284 945 284 964 q 269 892 284 909 q 236 876 255 876 q 201 892 215 876 q 187 945 187 909 m 516 945 q 530 998 516 982 q 565 1015 544 1015 q 583 1010 574 1015 q 599 998 592 1006 q 609 977 605 989 q 614 945 614 964 q 599 892 614 909 q 565 876 584 876 q 530 892 544 876 q 516 945 516 909 "},"Ą":{x_min:-.25,x_max:844.25,ha:844,o:"m 715 0 l 606 307 l 237 307 l 127 0 l 0 0 l 364 996 l 479 996 l 844 0 l 715 0 m 566 419 l 466 706 q 456 736 462 719 q 444 774 450 754 q 432 817 438 795 q 421 860 426 839 q 410 816 416 839 q 397 773 404 794 q 386 735 391 752 q 376 706 380 718 l 277 419 l 566 419 m 706 -161 q 724 -206 706 -191 q 766 -220 742 -220 q 799 -218 783 -220 q 825 -214 815 -217 l 825 -291 q 785 -299 807 -296 q 744 -302 764 -302 q 642 -266 676 -302 q 609 -170 609 -231 q 618 -116 609 -142 q 644 -69 628 -91 q 677 -30 659 -48 q 713 0 696 -12 l 800 0 q 706 -161 706 -90 "},"Њ":{x_min:135,x_max:1224,ha:1295,o:"m 1224 290 q 1203 170 1224 224 q 1140 79 1183 117 q 1031 20 1097 41 q 874 0 965 0 l 656 0 l 656 462 l 261 462 l 261 0 l 135 0 l 135 992 l 261 992 l 261 574 l 656 574 l 656 992 l 782 992 l 782 574 l 856 574 q 1030 551 959 574 q 1143 490 1100 529 q 1205 400 1186 452 q 1224 290 1224 349 m 782 107 l 862 107 q 1035 152 979 107 q 1090 290 1090 197 q 1074 370 1090 337 q 1028 424 1059 403 q 951 453 997 444 q 841 462 904 462 l 782 462 l 782 107 "},"›":{x_min:56,x_max:343.5,ha:400,o:"m 343 356 l 134 78 l 56 130 l 216 367 l 56 603 l 134 656 l 343 375 l 343 356 "},"ћ":{x_min:12.1875,x_max:707,ha:818,o:"m 583 0 l 583 451 q 547 583 583 539 q 436 627 512 627 q 343 609 381 627 q 283 557 306 592 q 251 473 261 523 q 241 357 241 422 l 241 0 l 118 0 l 118 843 l 12 843 l 12 932 l 118 932 l 118 1055 l 241 1055 l 241 932 l 498 932 l 498 843 l 241 843 l 241 715 l 236 616 l 242 616 q 283 666 259 645 q 334 702 306 687 q 393 723 362 716 q 457 730 424 730 q 644 665 581 730 q 707 458 707 600 l 707 0 l 583 0 "},"<":{x_min:69,x_max:696,ha:765,o:"m 696 161 l 69 448 l 69 517 l 696 844 l 696 735 l 197 488 l 696 270 l 696 161 "},"¬":{x_min:69,x_max:696,ha:765,o:"m 696 541 l 696 178 l 594 178 l 594 439 l 69 439 l 69 541 l 696 541 "},t:{x_min:23,x_max:445,ha:471,o:"m 343 88 q 371 89 355 88 q 400 93 386 91 q 426 97 415 95 q 445 102 438 100 l 445 8 q 422 0 436 3 q 392 -7 409 -4 q 358 -12 376 -10 q 324 -14 341 -14 q 246 -3 282 -14 q 184 34 210 7 q 142 106 157 61 q 128 221 128 152 l 128 656 l 23 656 l 23 709 l 128 759 l 180 915 l 251 915 l 251 745 l 439 745 l 439 656 l 251 656 l 251 221 q 272 121 251 155 q 343 88 294 88 "},"Ц":{x_min:135,x_max:945,ha:973,o:"m 826 111 l 945 111 l 945 -261 l 818 -261 l 818 0 l 135 0 l 135 992 l 261 992 l 261 111 l 699 111 l 699 992 l 826 992 l 826 111 "},"ù":{x_min:111,x_max:700,ha:818,o:"m 600 0 l 582 99 l 575 99 q 534 48 558 70 q 483 13 511 27 q 424 -7 455 0 q 360 -14 393 -14 q 252 1 299 -14 q 174 50 205 17 q 126 135 142 83 q 111 258 111 186 l 111 745 l 234 745 l 234 264 q 270 132 234 176 q 381 88 306 88 q 474 106 436 88 q 534 158 511 123 q 566 242 556 192 q 576 357 576 292 l 576 745 l 700 745 l 700 0 l 600 0 m 471 842 l 389 842 q 337 889 365 860 q 283 946 309 917 q 236 1004 257 976 q 204 1049 214 1031 l 204 1064 l 352 1064 q 378 1013 363 1040 q 408 958 392 986 q 440 905 424 931 q 471 860 456 879 l 471 842 "},"ï":{x_min:-13,x_max:372,ha:359,o:"m 241 0 l 118 0 l 118 745 l 241 745 l 241 0 m -13 945 q 5 998 -13 982 q 52 1015 24 1015 q 98 998 78 1015 q 117 945 117 981 q 98 892 117 909 q 52 876 78 876 q 5 892 24 876 q -13 945 -13 909 m 241 945 q 260 998 241 982 q 306 1015 279 1015 q 331 1010 319 1015 q 352 998 343 1006 q 366 977 361 989 q 372 945 372 964 q 352 892 372 909 q 306 876 332 876 q 260 892 279 876 q 241 945 241 909 "},"Ф":{x_min:71,x_max:994,ha:1065,o:"m 468 1006 l 594 1006 l 594 884 l 643 884 q 801 852 735 884 q 910 768 867 820 q 973 649 953 716 q 994 514 994 583 q 985 429 994 472 q 959 343 977 385 q 913 264 942 301 q 844 199 885 227 q 749 155 803 171 q 626 139 694 139 l 594 139 l 594 -14 l 468 -14 l 468 139 l 436 139 q 314 155 368 139 q 220 199 260 171 q 151 264 179 227 q 105 343 122 301 q 79 429 87 385 q 71 514 71 472 q 91 649 71 583 q 154 768 112 716 q 262 852 197 820 q 418 884 328 884 l 468 884 l 468 1006 m 594 246 l 611 246 q 721 266 674 246 q 798 322 768 286 q 844 408 829 358 q 860 517 860 458 q 846 617 860 570 q 804 700 832 665 q 734 755 776 735 q 632 776 691 776 l 594 776 l 594 246 m 468 776 l 429 776 q 329 755 371 776 q 259 700 287 735 q 217 617 231 665 q 204 517 204 570 q 219 408 204 458 q 265 322 235 358 q 342 266 295 286 q 450 246 388 246 l 468 246 l 468 776 "},"Ò":{x_min:85,x_max:945,ha:1031,o:"m 945 496 q 917 287 945 382 q 835 126 890 193 q 701 22 781 59 q 515 -14 620 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 498 85 382 q 110 707 85 613 q 190 867 136 801 q 325 970 243 934 q 517 1007 406 1007 q 701 970 622 1007 q 835 867 781 934 q 917 706 890 800 q 945 496 945 612 m 218 497 q 236 330 218 404 q 290 204 253 255 q 382 124 326 152 q 515 97 438 97 q 648 124 593 97 q 741 204 704 152 q 794 330 777 255 q 811 497 811 404 q 794 664 811 590 q 741 789 777 738 q 649 868 705 840 q 517 895 594 895 q 383 868 439 895 q 290 789 327 840 q 236 664 253 738 q 218 497 218 590 m 591 1071 l 509 1071 q 457 1118 485 1089 q 403 1175 429 1146 q 356 1233 377 1205 q 324 1278 334 1260 l 324 1293 l 472 1293 q 498 1242 483 1269 q 528 1187 512 1215 q 560 1134 544 1160 q 591 1089 576 1108 l 591 1071 "},I:{x_min:55.34375,x_max:414.8125,ha:471,o:"m 414 0 l 55 0 l 55 69 l 172 96 l 172 895 l 55 922 l 55 992 l 414 992 l 414 922 l 298 895 l 298 96 l 414 69 l 414 0 "},"˝":{x_min:151,x_max:649,ha:802,o:"m 151 860 q 181 905 165 879 q 213 958 197 931 q 243 1013 229 986 q 269 1064 258 1040 l 404 1064 l 404 1049 q 371 1004 393 1031 q 324 946 350 976 q 270 889 298 917 q 219 842 243 860 l 151 842 l 151 860 m 397 860 q 427 905 411 879 q 459 958 443 931 q 489 1013 475 986 q 514 1064 504 1040 l 649 1064 l 649 1049 q 616 1004 638 1031 q 569 946 595 976 q 515 889 543 917 q 464 842 488 860 l 397 842 l 397 860 "},"·":{x_min:100,x_max:272,ha:372,o:"m 100 490 q 106 534 100 516 q 125 563 113 552 q 152 579 136 574 q 186 585 167 585 q 219 579 203 585 q 246 563 235 574 q 265 534 258 552 q 272 490 272 516 q 265 447 272 465 q 246 418 258 430 q 219 401 235 406 q 186 396 203 396 q 152 401 167 396 q 125 418 136 406 q 106 447 113 430 q 100 490 100 465 "},"¿":{x_min:46,x_max:567,ha:591,o:"m 401 458 l 401 432 q 395 362 401 393 q 376 304 390 331 q 341 251 363 276 q 285 196 319 225 q 229 146 252 169 q 191 100 206 123 q 169 50 176 76 q 162 -12 162 23 q 172 -72 162 -45 q 202 -118 183 -99 q 250 -148 221 -138 q 317 -159 279 -159 q 425 -141 374 -159 q 523 -100 476 -124 l 567 -199 q 447 -247 511 -227 q 318 -267 383 -267 q 204 -249 254 -267 q 118 -199 153 -232 q 64 -120 83 -167 q 46 -14 46 -73 q 54 67 46 32 q 79 133 62 102 q 120 192 95 163 q 179 252 145 220 q 231 305 211 283 q 263 349 252 328 q 280 393 275 370 q 284 445 284 415 l 284 458 l 401 458 m 433 663 q 426 619 433 637 q 408 590 420 601 q 380 574 396 579 q 346 569 365 569 q 313 574 329 569 q 286 590 298 579 q 267 619 274 601 q 260 663 260 637 q 267 706 260 688 q 286 735 274 724 q 313 752 298 747 q 346 758 329 758 q 380 752 365 758 q 408 735 396 747 q 426 706 420 724 q 433 663 433 688 "},"ſ":{x_min:118,x_max:476,ha:399,o:"m 118 0 l 118 814 q 133 934 118 886 q 177 1010 148 982 q 248 1051 206 1039 q 343 1063 290 1063 q 416 1055 383 1063 q 476 1037 450 1047 l 444 941 q 398 954 423 949 q 347 960 374 960 q 300 954 320 960 q 267 931 280 947 q 247 887 254 915 q 241 814 241 858 l 241 0 l 118 0 "},"Ђ":{x_min:13,x_max:873,ha:977,o:"m 628 -14 q 572 -9 596 -14 q 532 2 548 -5 l 532 111 q 574 101 551 105 q 624 97 597 97 q 667 103 646 97 q 707 127 689 110 q 735 174 724 144 q 746 250 746 203 l 746 340 q 711 458 746 419 q 591 497 675 497 l 370 497 l 370 0 l 244 0 l 244 880 l 13 880 l 13 992 l 654 992 l 654 880 l 370 880 l 370 609 l 605 609 q 718 592 668 609 q 802 543 768 575 q 854 464 836 511 q 873 356 873 417 l 873 263 q 855 140 873 192 q 804 53 837 87 q 727 2 772 19 q 628 -14 682 -14 "},"ű":{x_min:111,x_max:704,ha:818,o:"m 600 0 l 582 99 l 575 99 q 534 48 558 70 q 483 13 511 27 q 424 -7 455 0 q 360 -14 393 -14 q 252 1 299 -14 q 174 50 205 17 q 126 135 142 83 q 111 258 111 186 l 111 745 l 234 745 l 234 264 q 270 132 234 176 q 381 88 306 88 q 474 106 436 88 q 534 158 511 123 q 566 242 556 192 q 576 357 576 292 l 576 745 l 700 745 l 700 0 l 600 0 m 206 860 q 236 905 220 879 q 268 958 252 931 q 298 1013 284 986 q 324 1064 313 1040 l 459 1064 l 459 1049 q 426 1004 448 1031 q 379 946 405 976 q 325 889 353 917 q 274 842 298 860 l 206 842 l 206 860 m 452 860 q 482 905 466 879 q 514 958 498 931 q 544 1013 530 986 q 569 1064 559 1040 l 704 1064 l 704 1049 q 671 1004 693 1031 q 624 946 650 976 q 570 889 598 917 q 519 842 543 860 l 452 842 l 452 860 "},"Ǽ":{x_min:-1.25,x_max:1101,ha:1184,o:"m 1101 0 l 585 0 l 585 307 l 262 307 l 124 0 l -1 0 l 443 992 l 1101 992 l 1101 880 l 711 880 l 711 574 l 1075 574 l 1075 462 l 711 462 l 711 111 l 1101 111 l 1101 0 m 311 419 l 585 419 l 585 880 l 512 880 l 311 419 m 639 1089 q 669 1134 653 1108 q 701 1187 685 1160 q 732 1242 717 1215 q 757 1293 746 1269 l 906 1293 l 906 1278 q 873 1233 895 1260 q 826 1175 852 1205 q 772 1118 800 1146 q 721 1071 744 1089 l 639 1071 l 639 1089 "},"φ":{x_min:77,x_max:893,ha:970,o:"m 417 -334 l 417 -12 q 280 14 343 -8 q 173 83 218 36 q 102 201 127 129 q 77 376 77 274 q 87 484 77 432 q 117 582 98 535 q 163 671 136 629 q 220 751 189 713 l 315 686 q 269 616 290 651 q 232 542 247 581 q 208 462 217 504 q 200 371 200 419 q 217 244 200 296 q 264 160 235 193 q 334 111 294 127 q 417 90 373 95 l 417 500 q 472 692 417 627 q 626 758 528 758 q 737 730 687 758 q 821 654 786 703 q 874 538 855 606 q 893 387 893 469 q 864 212 893 286 q 786 90 835 139 q 674 16 738 41 q 540 -12 610 -8 l 540 -334 l 417 -334 m 765 386 q 755 502 765 452 q 727 586 745 552 q 684 638 709 621 q 631 655 660 655 q 596 647 613 655 q 567 622 580 640 q 547 574 555 604 q 540 501 540 545 l 540 90 q 630 115 588 95 q 701 171 671 135 q 748 261 731 207 q 765 386 765 314 "},";":{x_min:43,x_max:272,ha:372,o:"m 245 161 l 256 145 q 233 67 246 108 q 204 -15 220 26 q 170 -99 188 -57 q 136 -179 153 -141 l 43 -179 q 63 -92 53 -137 q 82 -3 72 -48 q 98 82 91 40 q 111 161 106 125 l 245 161 m 100 669 q 106 714 100 696 q 125 743 113 732 q 152 759 136 754 q 186 764 167 764 q 219 759 203 764 q 246 743 235 754 q 265 714 258 732 q 272 669 272 696 q 265 626 272 644 q 246 597 258 609 q 219 580 235 585 q 186 575 203 575 q 152 580 167 575 q 125 597 136 585 q 106 626 113 609 q 100 669 100 644 "},"Ș":{x_min:70.109375,x_max:657,ha:721,o:"m 657 264 q 633 147 657 199 q 566 59 610 95 q 460 4 523 23 q 320 -14 398 -14 q 179 -2 245 -14 q 70 32 114 9 l 70 153 q 122 131 93 142 q 184 112 151 120 q 251 99 216 104 q 319 93 285 93 q 479 134 427 93 q 530 252 530 176 q 521 316 530 289 q 486 366 511 343 q 420 410 461 389 q 316 456 379 431 q 212 508 256 480 q 139 572 168 537 q 96 652 110 607 q 83 754 83 697 q 104 860 83 813 q 165 939 126 907 q 259 989 205 972 q 380 1006 314 1006 q 525 990 460 1006 q 640 951 589 975 l 595 845 q 495 880 551 865 q 381 894 440 894 q 254 856 299 894 q 209 752 209 818 q 219 686 209 714 q 252 635 229 657 q 315 592 276 612 q 410 549 353 572 q 517 499 471 525 q 594 441 563 473 q 641 366 625 408 q 657 264 657 323 m 249 -288 q 265 -246 256 -271 q 282 -191 274 -220 q 296 -135 290 -163 q 305 -85 303 -107 l 428 -85 l 428 -98 q 413 -141 423 -115 q 387 -197 402 -167 q 353 -255 372 -226 q 315 -307 335 -284 l 249 -307 l 249 -288 "},"Ġ":{x_min:85,x_max:858,ha:958,o:"m 530 524 l 858 524 l 858 36 q 782 15 820 24 q 704 0 744 5 q 620 -10 664 -7 q 526 -14 576 -14 q 337 21 419 -14 q 199 123 255 57 q 114 284 143 189 q 85 497 85 378 q 117 708 85 613 q 211 868 149 802 q 363 970 272 934 q 569 1006 453 1006 q 713 991 644 1006 q 842 947 782 976 l 793 837 q 741 859 769 849 q 683 877 713 869 q 621 890 653 885 q 559 894 590 894 q 412 867 476 894 q 306 788 349 839 q 240 662 263 736 q 218 496 218 588 q 237 334 218 407 q 296 208 255 261 q 401 126 336 155 q 556 97 465 97 q 610 98 585 97 q 656 103 635 100 q 695 109 677 106 q 731 116 714 113 l 731 412 l 530 412 l 530 524 m 464 1174 q 484 1233 464 1215 q 535 1252 505 1252 q 564 1247 550 1252 q 587 1233 577 1243 q 602 1209 596 1224 q 608 1174 608 1195 q 587 1116 608 1135 q 535 1097 565 1097 q 484 1115 505 1097 q 464 1174 464 1134 "},6:{x_min:77,x_max:701,ha:765,o:"m 77 423 q 84 565 77 494 q 109 700 91 636 q 158 821 127 765 q 237 918 189 877 q 352 982 285 959 q 509 1006 419 1006 q 538 1005 522 1006 q 569 1002 553 1004 q 600 998 585 1001 q 626 992 614 996 l 626 884 q 573 896 602 892 q 514 900 543 900 q 407 886 453 900 q 327 845 361 872 q 271 783 294 819 q 234 703 248 747 q 213 609 220 659 q 205 505 207 559 l 213 505 q 245 551 226 530 q 290 588 265 572 q 348 612 316 603 q 420 621 380 621 q 536 600 484 621 q 624 542 588 580 q 681 447 661 503 q 701 319 701 391 q 680 180 701 242 q 619 75 659 118 q 524 9 580 32 q 400 -14 469 -14 q 273 12 332 -14 q 170 93 213 38 q 102 229 127 147 q 77 423 77 311 m 399 91 q 473 105 440 91 q 531 147 506 118 q 568 218 555 175 q 581 320 581 261 q 570 405 581 367 q 537 469 559 442 q 481 509 514 495 q 403 524 448 524 q 321 508 358 524 q 257 466 283 492 q 216 408 231 441 q 202 343 202 376 q 214 253 202 298 q 251 172 227 208 q 313 113 276 136 q 399 91 350 91 "},n:{x_min:118,x_max:707,ha:818,o:"m 583 0 l 583 479 q 547 611 583 567 q 436 655 512 655 q 343 637 381 655 q 283 585 306 620 q 251 501 261 551 q 241 385 241 450 l 241 0 l 118 0 l 118 745 l 218 745 l 236 644 l 242 644 q 283 694 259 673 q 334 730 306 715 q 393 751 362 744 q 457 758 424 758 q 644 693 581 758 q 707 486 707 628 l 707 0 l 583 0 "},"ά":{x_min:77,x_max:792.984375,ha:814,o:"m 383 88 q 470 104 434 88 q 528 153 506 120 q 560 238 550 186 q 572 360 571 289 l 572 370 q 563 492 572 439 q 532 581 554 545 q 473 636 510 618 q 382 655 437 655 q 247 581 290 655 q 204 369 204 507 q 247 157 204 227 q 383 88 290 88 m 359 -14 q 244 10 296 -14 q 154 83 192 34 q 97 203 117 131 q 77 370 77 275 q 97 538 77 466 q 156 659 118 610 q 249 733 194 708 q 372 758 304 758 q 497 729 448 758 q 579 644 546 701 l 587 644 q 605 695 594 667 q 633 745 616 723 l 730 745 q 716 687 723 722 q 705 610 710 651 q 698 527 701 569 q 696 446 696 484 l 696 162 q 712 104 696 121 q 752 87 729 87 q 775 89 762 87 q 792 93 787 91 l 792 3 q 760 -8 782 -2 q 715 -14 738 -14 q 668 -8 689 -14 q 630 10 647 -3 q 601 45 613 23 q 580 99 588 66 l 572 99 q 537 55 557 76 q 491 19 517 34 q 432 -5 465 3 q 359 -14 400 -14 m 359 860 q 372 906 365 880 q 385 960 379 932 q 397 1014 392 987 q 406 1064 403 1041 l 541 1064 l 541 1049 q 525 1007 536 1033 q 499 951 514 980 q 466 892 483 921 q 432 842 448 863 l 359 842 l 359 860 "},"ϊ":{x_min:14,x_max:428,ha:454,o:"m 234 743 l 234 220 q 255 121 234 154 q 326 88 277 88 q 353 89 338 88 q 383 93 368 91 q 409 97 397 95 q 428 102 421 100 l 428 8 q 405 0 419 3 q 375 -7 391 -4 q 341 -12 358 -10 q 307 -14 323 -14 q 229 -3 265 -14 q 167 34 193 7 q 125 105 140 60 q 111 219 111 150 l 111 743 l 234 743 m 14 945 q 32 998 14 982 q 79 1015 51 1015 q 125 998 105 1015 q 144 945 144 981 q 125 892 144 909 q 79 876 105 876 q 32 892 51 876 q 14 945 14 909 m 268 945 q 287 998 268 982 q 333 1015 306 1015 q 358 1010 346 1015 q 379 998 370 1006 q 393 977 388 989 q 399 945 399 964 q 379 892 399 909 q 333 876 359 876 q 287 892 306 876 q 268 945 268 909 "},"\ufeff":{x_min:0,x_max:0,ha:0},"ģ":{x_min:25,x_max:692.484375,ha:720,o:"m 692 745 l 692 668 l 559 649 q 591 588 578 625 q 604 504 604 551 q 588 409 604 453 q 539 333 572 365 q 459 283 507 301 q 348 266 412 266 q 319 266 333 266 q 294 268 304 266 q 271 253 282 261 q 251 233 260 244 q 236 208 242 222 q 230 178 230 194 q 238 148 230 159 q 260 130 246 136 q 293 122 274 124 q 333 120 312 120 l 453 120 q 560 104 516 120 q 631 61 603 88 q 670 -2 658 34 q 683 -80 683 -38 q 660 -186 683 -139 q 593 -266 638 -233 q 478 -316 547 -298 q 314 -334 408 -334 q 187 -319 241 -334 q 96 -278 132 -305 q 42 -213 60 -251 q 25 -128 25 -175 q 38 -57 25 -87 q 73 -4 51 -26 q 125 32 96 17 q 187 53 155 46 q 140 94 158 66 q 122 159 122 122 q 143 231 122 201 q 212 291 165 262 q 158 324 182 303 q 118 373 134 346 q 92 433 101 401 q 83 500 83 466 q 99 608 83 561 q 150 689 116 656 q 233 740 183 722 q 348 758 282 758 q 400 754 373 758 q 445 745 427 750 l 692 745 m 141 -126 q 150 -173 141 -151 q 179 -211 159 -195 q 232 -235 199 -226 q 314 -245 265 -245 q 503 -205 440 -245 q 566 -92 566 -166 q 558 -41 566 -61 q 531 -10 550 -21 q 482 4 512 0 q 407 8 451 8 l 287 8 q 238 3 263 8 q 190 -17 212 -2 q 155 -58 169 -32 q 141 -126 141 -84 m 206 504 q 242 388 206 426 q 344 350 278 350 q 446 388 411 350 q 480 506 480 426 q 445 629 480 590 q 343 669 410 669 q 241 628 277 669 q 206 504 206 587 m 467 1045 q 450 1003 458 1028 q 433 948 441 977 q 418 892 424 920 q 410 842 412 864 l 288 842 l 288 856 q 302 898 291 872 q 328 954 312 925 q 362 1012 343 983 q 400 1064 381 1041 l 467 1064 l 467 1045 "},"∂":{x_min:66,x_max:734,ha:807,o:"m 734 633 q 723 485 734 561 q 690 336 712 408 q 633 201 668 264 q 552 89 599 137 q 446 13 506 41 q 312 -14 386 -14 q 192 8 240 -14 q 117 68 145 30 q 77 153 89 105 q 66 254 66 202 q 73 342 66 294 q 98 438 81 390 q 142 530 115 486 q 209 609 170 575 q 299 664 247 643 q 417 685 351 685 q 529 658 479 685 q 609 584 578 631 q 610 611 610 597 q 610 633 610 626 q 563 831 610 762 q 424 899 516 899 q 380 895 403 899 q 334 883 357 891 q 289 865 311 876 q 249 841 268 854 l 249 959 q 288 975 266 968 q 336 989 311 983 q 389 998 362 995 q 441 1002 415 1002 q 582 971 525 1002 q 671 890 638 941 q 719 773 705 839 q 734 633 734 706 m 319 88 q 387 103 355 88 q 446 145 418 118 q 496 207 473 171 q 537 285 519 243 q 567 373 555 327 q 586 465 580 419 q 566 516 580 492 q 532 557 552 540 q 487 585 512 575 q 434 596 462 596 q 358 579 392 596 q 296 535 323 563 q 250 471 270 507 q 218 397 230 435 q 199 321 205 359 q 193 251 193 283 q 200 186 193 216 q 222 135 207 157 q 261 100 238 113 q 319 88 285 88 "},"κ":{x_min:118,x_max:684.25,ha:689,o:"m 545 0 l 315 331 l 241 276 l 241 0 l 118 0 l 118 745 l 241 745 l 241 554 q 239 479 241 513 q 236 418 238 444 q 230 364 233 388 l 319 483 l 526 745 l 665 745 l 394 412 l 684 0 l 545 0 "},"‡":{x_min:84,x_max:606.171875,ha:689,o:"m 380 336 l 606 357 l 606 235 l 380 256 l 418 0 l 271 0 l 308 256 l 84 235 l 84 357 l 308 336 l 277 532 l 308 718 l 84 697 l 84 820 l 308 799 l 271 1055 l 418 1055 l 380 799 l 606 820 l 606 697 l 380 718 l 412 532 l 380 336 "},"ň":{x_min:118,x_max:707,ha:818,o:"m 583 0 l 583 479 q 547 611 583 567 q 436 655 512 655 q 343 637 381 655 q 283 585 306 620 q 251 501 261 551 q 241 385 241 450 l 241 0 l 118 0 l 118 745 l 218 745 l 236 644 l 242 644 q 283 694 259 673 q 334 730 306 715 q 393 751 362 744 q 457 758 424 758 q 644 693 581 758 q 707 486 707 628 l 707 0 l 583 0 m 634 1045 q 593 1000 617 1026 q 547 947 570 974 q 504 892 524 919 q 474 842 484 865 l 343 842 q 313 892 333 865 q 270 947 293 919 q 224 1000 247 974 q 184 1045 201 1026 l 184 1064 l 266 1064 q 336 1008 300 1041 q 409 937 372 975 q 480 1008 444 975 q 552 1064 517 1041 l 634 1064 l 634 1045 "},"√":{x_min:25,x_max:828.25,ha:762,o:"m 424 -10 l 334 -10 l 147 522 l 25 522 l 25 615 l 226 615 l 381 165 l 729 1150 l 828 1150 l 424 -10 "},"ę":{x_min:77,x_max:673,ha:743,o:"m 412 -14 q 276 11 337 -14 q 170 84 214 36 q 101 203 125 132 q 77 366 77 274 q 99 531 77 458 q 162 654 121 604 q 259 731 202 705 q 384 758 316 758 q 505 733 451 758 q 595 665 558 709 q 653 560 633 621 q 673 423 673 498 l 673 346 l 204 346 q 259 155 207 216 q 413 93 311 93 q 477 97 448 93 q 534 107 507 100 q 587 123 561 113 q 639 145 613 133 l 639 35 q 586 13 612 22 q 533 -2 560 3 q 476 -11 505 -8 q 412 -14 446 -14 m 384 655 q 260 602 306 655 q 207 449 214 549 l 545 449 q 536 533 545 495 q 507 598 526 571 q 457 640 487 625 q 384 655 427 655 m 506 -140 q 524 -185 506 -170 q 566 -199 542 -199 q 599 -197 583 -199 q 625 -193 615 -196 l 625 -270 q 585 -278 607 -275 q 544 -281 564 -281 q 442 -245 476 -281 q 409 -149 409 -210 q 418 -95 409 -121 q 444 -48 428 -70 q 477 -9 459 -27 q 513 21 496 8 l 600 21 q 506 -140 506 -69 "},"į":{x_min:47,x_max:263,ha:359,o:"m 241 0 l 118 0 l 118 745 l 241 745 l 241 0 m 108 945 q 129 1004 108 986 q 180 1023 149 1023 q 208 1018 195 1023 q 231 1004 221 1014 q 247 980 241 995 q 252 945 252 966 q 231 887 252 906 q 180 868 210 868 q 129 886 149 868 q 108 945 108 905 m 144 -161 q 162 -206 144 -191 q 204 -220 180 -220 q 237 -218 221 -220 q 263 -214 253 -217 l 263 -291 q 223 -299 245 -296 q 182 -302 202 -302 q 80 -266 114 -302 q 47 -170 47 -231 q 56 -116 47 -142 q 82 -69 66 -91 q 115 -30 97 -48 q 151 0 134 -12 l 238 0 q 144 -161 144 -90 "},"Τ":{x_min:14,x_max:706,ha:721,o:"m 423 0 l 297 0 l 297 880 l 14 880 l 14 992 l 706 992 l 706 880 l 423 880 l 423 0 "},"≈":{x_min:69,x_max:696,ha:765,o:"m 359 300 q 315 318 334 311 q 281 330 297 326 q 252 336 266 334 q 223 338 238 338 q 184 331 204 338 q 143 314 164 325 q 104 288 123 303 q 69 256 85 273 l 69 366 q 237 440 136 440 q 273 438 256 440 q 309 432 290 436 q 350 419 328 427 q 405 397 373 411 q 449 379 430 386 q 483 367 468 371 q 513 361 499 363 q 541 359 527 359 q 581 366 560 359 q 621 383 601 372 q 660 409 641 394 q 696 441 679 424 l 696 331 q 527 258 628 258 q 491 259 508 258 q 455 265 474 261 q 414 278 436 270 q 359 300 391 287 m 359 578 q 315 596 334 589 q 281 608 297 604 q 252 614 266 612 q 223 616 238 616 q 184 609 204 616 q 143 592 164 603 q 104 566 123 581 q 69 533 85 551 l 69 643 q 237 718 136 718 q 273 716 256 718 q 309 709 290 714 q 350 696 328 705 q 405 674 373 688 q 449 656 430 664 q 483 645 468 649 q 513 639 499 641 q 541 637 527 637 q 581 644 560 637 q 621 661 601 650 q 660 687 641 672 q 696 719 679 702 l 696 609 q 527 536 630 536 q 491 537 508 536 q 455 543 474 539 q 414 556 436 548 q 359 578 391 565 "},"ΐ":{x_min:-19,x_max:428,ha:454,o:"m 234 743 l 234 220 q 255 121 234 154 q 326 88 277 88 q 353 89 338 88 q 383 93 368 91 q 409 97 397 95 q 428 102 421 100 l 428 8 q 405 0 419 3 q 375 -7 391 -4 q 341 -12 358 -10 q 307 -14 323 -14 q 229 -3 265 -14 q 167 34 193 7 q 125 105 140 60 q 111 219 111 150 l 111 743 l 234 743 m 140 959 q 155 1005 147 980 q 172 1057 164 1030 q 187 1112 180 1084 q 200 1164 195 1139 l 341 1164 l 341 1150 q 312 1102 328 1128 q 277 1049 296 1076 q 237 994 258 1022 q 195 942 217 967 l 140 942 l 140 959 m -19 945 q -4 998 -19 982 q 30 1015 9 1015 q 48 1010 39 1015 q 64 998 57 1006 q 74 977 70 989 q 78 945 78 964 q 63 892 78 909 q 30 876 49 876 q -4 892 9 876 q -19 945 -19 909 m 310 945 q 324 998 310 982 q 359 1015 338 1015 q 377 1010 368 1015 q 393 998 386 1006 q 403 977 399 989 q 408 945 408 964 q 393 892 408 909 q 359 876 378 876 q 324 892 338 876 q 310 945 310 909 "},"ĸ":{x_min:118,x_max:684.25,ha:689,o:"m 545 0 l 315 331 l 241 276 l 241 0 l 118 0 l 118 745 l 241 745 l 241 554 q 239 479 241 513 q 236 418 238 444 q 230 364 233 388 l 319 483 l 526 745 l 665 745 l 394 412 l 684 0 l 545 0 "},g:{x_min:25,x_max:692.484375,ha:720,o:"m 692 745 l 692 668 l 559 649 q 591 588 578 625 q 604 504 604 551 q 588 409 604 453 q 539 333 572 365 q 459 283 507 301 q 348 266 412 266 q 319 266 333 266 q 294 268 304 266 q 271 253 282 261 q 251 233 260 244 q 236 208 242 222 q 230 178 230 194 q 238 148 230 159 q 260 130 246 136 q 293 122 274 124 q 333 120 312 120 l 453 120 q 560 104 516 120 q 631 61 603 88 q 670 -2 658 34 q 683 -80 683 -38 q 660 -186 683 -139 q 593 -266 638 -233 q 478 -316 547 -298 q 314 -334 408 -334 q 187 -319 241 -334 q 96 -278 132 -305 q 42 -213 60 -251 q 25 -128 25 -175 q 38 -57 25 -87 q 73 -4 51 -26 q 125 32 96 17 q 187 53 155 46 q 140 94 158 66 q 122 159 122 122 q 143 231 122 201 q 212 291 165 262 q 158 324 182 303 q 118 373 134 346 q 92 433 101 401 q 83 500 83 466 q 99 608 83 561 q 150 689 116 656 q 233 740 183 722 q 348 758 282 758 q 400 754 373 758 q 445 745 427 750 l 692 745 m 141 -126 q 150 -173 141 -151 q 179 -211 159 -195 q 232 -235 199 -226 q 314 -245 265 -245 q 503 -205 440 -245 q 566 -92 566 -166 q 558 -41 566 -61 q 531 -10 550 -21 q 482 4 512 0 q 407 8 451 8 l 287 8 q 238 3 263 8 q 190 -17 212 -2 q 155 -58 169 -32 q 141 -126 141 -84 m 206 504 q 242 388 206 426 q 344 350 278 350 q 446 388 411 350 q 480 506 480 426 q 445 629 480 590 q 343 669 410 669 q 241 628 277 669 q 206 504 206 587 "
},"ǿ":{x_min:78,x_max:727,ha:802,o:"m 727 373 q 704 208 727 280 q 639 86 681 135 q 536 11 596 37 q 400 -14 475 -14 q 249 21 315 -14 l 202 -52 l 113 -1 l 168 87 q 101 208 125 135 q 78 373 78 280 q 100 537 78 465 q 165 657 123 608 q 268 732 207 707 q 404 758 329 758 q 485 748 447 758 q 557 719 524 738 l 603 793 l 692 743 l 638 655 q 703 535 680 606 q 727 373 727 464 m 205 373 q 211 271 205 316 q 233 192 218 227 l 503 631 q 457 649 483 643 q 401 655 432 655 q 251 585 297 655 q 205 373 205 515 m 599 373 q 573 548 599 481 l 302 110 q 348 93 323 99 q 403 88 372 88 q 553 159 507 88 q 599 373 599 231 m 321 860 q 351 905 335 879 q 383 958 367 931 q 414 1013 399 986 q 439 1064 428 1040 l 588 1064 l 588 1049 q 555 1004 577 1031 q 508 946 534 976 q 454 889 482 917 q 403 842 426 860 l 321 842 l 321 860 "},"²":{x_min:33,x_max:421.734375,ha:460,o:"m 421 397 l 33 397 l 33 472 l 175 627 q 238 697 214 669 q 277 749 263 726 q 295 791 290 771 q 301 834 301 811 q 278 899 301 878 q 219 920 255 920 q 152 903 184 920 q 90 860 120 886 l 37 924 q 118 981 73 958 q 219 1004 164 1004 q 293 992 260 1004 q 349 960 326 981 q 385 907 372 938 q 398 837 398 876 q 387 774 398 803 q 356 715 376 744 q 307 655 336 686 q 239 587 277 624 l 129 480 l 421 480 l 421 397 "},"Ã":{x_min:-.25,x_max:844.25,ha:844,o:"m 715 0 l 606 307 l 237 307 l 127 0 l 0 0 l 364 996 l 479 996 l 844 0 l 715 0 m 566 419 l 466 706 q 456 736 462 719 q 444 774 450 754 q 432 817 438 795 q 421 860 426 839 q 410 816 416 839 q 397 773 404 794 q 386 735 391 752 q 376 706 380 718 l 277 419 l 566 419 m 523 1072 q 469 1083 496 1072 q 417 1110 443 1095 q 367 1136 391 1124 q 322 1148 343 1148 q 275 1130 291 1148 q 249 1070 259 1112 l 179 1070 q 193 1144 182 1111 q 222 1201 204 1177 q 265 1237 240 1224 q 322 1250 290 1250 q 378 1238 350 1250 q 431 1211 405 1226 q 480 1185 457 1197 q 523 1173 504 1173 q 569 1191 554 1173 q 595 1251 585 1209 l 667 1251 q 652 1177 663 1210 q 623 1121 641 1144 q 580 1084 605 1097 q 523 1072 555 1072 "},"Ј":{x_min:-125,x_max:251.15625,ha:376,o:"m -19 -264 q -80 -259 -54 -264 q -125 -247 -106 -255 l -125 -139 q -75 -149 -101 -145 q -18 -152 -48 -152 q 32 -146 6 -152 q 78 -122 57 -139 q 112 -76 99 -105 q 125 0 125 -46 l 125 992 l 251 992 l 251 13 q 231 -109 251 -57 q 175 -196 211 -162 q 90 -247 140 -230 q -19 -264 40 -264 "},"©":{x_min:68,x_max:1088,ha:1156,o:"m 604 713 q 531 698 563 713 q 477 655 499 683 q 444 587 455 627 q 433 495 433 546 q 443 402 433 443 q 473 334 453 361 q 526 291 494 306 q 604 277 559 277 q 638 279 620 277 q 676 286 657 281 q 714 295 695 290 q 751 307 734 301 l 751 218 q 718 205 734 211 q 683 194 701 199 q 645 187 665 189 q 600 185 624 185 q 479 207 531 185 q 393 271 428 229 q 342 370 359 312 q 325 497 325 427 q 343 622 325 566 q 397 719 361 679 q 484 783 432 760 q 604 806 536 806 q 692 794 647 806 q 777 763 736 783 l 734 677 q 666 704 699 694 q 604 713 633 713 m 68 495 q 86 631 68 566 q 137 753 104 696 q 217 856 170 809 q 320 936 264 903 q 442 987 377 969 q 578 1006 507 1006 q 713 987 648 1006 q 835 936 778 969 q 938 856 892 903 q 1018 753 985 809 q 1069 631 1051 696 q 1088 495 1088 566 q 1069 359 1088 425 q 1018 238 1051 294 q 938 134 985 181 q 835 55 892 88 q 713 3 778 21 q 578 -14 648 -14 q 442 3 507 -14 q 320 55 377 21 q 217 134 264 88 q 137 238 170 181 q 86 359 104 294 q 68 495 68 425 m 141 496 q 176 326 141 405 q 269 187 210 247 q 408 94 329 128 q 578 59 487 59 q 747 94 668 59 q 886 187 826 128 q 979 326 945 247 q 1014 496 1014 405 q 979 665 1014 586 q 886 804 945 744 q 747 897 826 863 q 578 932 668 932 q 408 897 487 932 q 269 804 329 863 q 176 665 210 744 q 141 496 141 586 "},"≥":{x_min:69,x_max:696,ha:765,o:"m 69 270 l 569 488 l 69 734 l 69 844 l 696 517 l 696 448 l 69 161 l 69 270 m 69 0 l 69 101 l 696 101 l 696 0 l 69 0 "},"Ă":{x_min:-.25,x_max:844.25,ha:844,o:"m 715 0 l 606 307 l 237 307 l 127 0 l 0 0 l 364 996 l 479 996 l 844 0 l 715 0 m 566 419 l 466 706 q 456 736 462 719 q 444 774 450 754 q 432 817 438 795 q 421 860 426 839 q 410 816 416 839 q 397 773 404 794 q 386 735 391 752 q 376 706 380 718 l 277 419 l 566 419 m 626 1259 q 608 1183 623 1217 q 567 1123 593 1149 q 504 1084 541 1098 q 419 1071 467 1071 q 332 1084 369 1071 q 271 1122 295 1097 q 233 1181 246 1147 q 218 1259 220 1216 l 292 1259 q 304 1212 295 1229 q 330 1186 314 1194 q 369 1175 346 1177 q 422 1172 392 1172 q 468 1175 446 1172 q 508 1188 490 1178 q 537 1214 525 1197 q 551 1259 548 1231 l 626 1259 "},"ґ":{x_min:118,x_max:527,ha:555,o:"m 527 656 l 241 656 l 241 0 l 118 0 l 118 745 l 403 745 l 403 961 l 527 961 l 527 656 "},"ÿ":{x_min:6.75,x_max:672.25,ha:679,o:"m 6 745 l 134 745 l 280 329 q 300 272 290 301 q 318 212 310 242 q 333 154 327 182 q 341 103 339 126 l 346 103 q 356 149 349 120 q 373 211 364 178 q 392 276 382 244 q 409 330 402 308 l 544 745 l 672 745 l 377 -96 q 336 -195 358 -152 q 285 -270 314 -239 q 217 -317 256 -300 q 123 -334 177 -334 q 62 -330 88 -334 q 18 -322 36 -326 l 18 -223 q 54 -229 32 -226 q 99 -231 75 -231 q 156 -223 132 -231 q 197 -201 179 -216 q 227 -164 215 -186 q 250 -115 240 -142 l 289 -6 l 6 745 m 155 945 q 173 998 155 982 q 220 1015 192 1015 q 266 998 246 1015 q 285 945 285 981 q 266 892 285 909 q 220 876 246 876 q 173 892 192 876 q 155 945 155 909 m 409 945 q 428 998 409 982 q 474 1015 447 1015 q 499 1010 487 1015 q 520 998 511 1006 q 534 977 529 989 q 540 945 540 964 q 520 892 540 909 q 474 876 500 876 q 428 892 447 876 q 409 945 409 909 "},"Ł":{x_min:20,x_max:649.4375,ha:682,o:"m 135 458 l 135 992 l 261 992 l 261 537 l 415 635 l 468 550 l 261 420 l 261 111 l 649 111 l 649 0 l 135 0 l 135 341 l 69 301 l 20 385 l 135 458 "}," ":{x_min:0,x_max:0,ha:372},"∫":{x_min:10.578125,x_max:524.65625,ha:538,o:"m 435 1055 q 484 1051 458 1055 q 524 1042 509 1048 l 524 944 q 491 956 512 950 q 446 962 471 962 q 389 948 412 962 q 354 913 367 935 q 335 862 340 891 q 330 803 330 834 l 330 -92 q 313 -202 330 -156 q 265 -276 296 -247 q 193 -320 235 -306 q 101 -334 151 -334 q 51 -330 77 -334 q 10 -321 26 -326 l 10 -224 q 45 -235 24 -230 q 89 -241 66 -241 q 147 -228 124 -241 q 185 -194 171 -215 q 205 -143 199 -172 q 212 -82 212 -115 l 212 814 q 227 923 212 878 q 273 998 243 969 q 343 1041 302 1027 q 435 1055 384 1055 "},"\\":{x_min:15.75,x_max:505.375,ha:518,o:"m 136 992 l 505 0 l 384 0 l 15 992 l 136 992 "},"Ì":{x_min:42,x_max:414.8125,ha:471,o:"m 414 0 l 55 0 l 55 69 l 172 96 l 172 895 l 55 922 l 55 992 l 414 992 l 414 922 l 298 895 l 298 96 l 414 69 l 414 0 m 309 1071 l 227 1071 q 175 1118 203 1089 q 121 1175 147 1146 q 74 1233 95 1205 q 42 1278 52 1260 l 42 1293 l 190 1293 q 216 1242 201 1269 q 246 1187 230 1215 q 278 1134 262 1160 q 309 1089 294 1108 l 309 1071 "},"ъ":{x_min:28,x_max:865,ha:942,o:"m 395 439 l 582 439 q 795 386 726 439 q 865 227 865 333 q 849 133 865 175 q 798 61 833 91 q 710 15 764 31 q 580 0 656 0 l 272 0 l 272 642 l 28 642 l 28 745 l 395 745 l 395 439 m 741 219 q 730 275 741 252 q 697 311 719 297 q 643 330 675 325 q 567 336 610 336 l 395 336 l 395 102 l 570 102 q 638 108 607 102 q 693 127 670 113 q 728 164 715 141 q 741 219 741 186 "},"ς":{x_min:77,x_max:596,ha:632,o:"m 204 351 q 213 245 204 286 q 248 177 223 204 q 315 135 272 151 q 424 104 358 119 q 504 78 472 94 q 556 42 536 62 q 584 -1 576 22 q 593 -54 593 -25 q 585 -114 593 -84 q 567 -172 578 -144 q 541 -225 555 -200 q 511 -272 526 -250 l 396 -272 q 426 -225 412 -250 q 451 -177 440 -201 q 469 -129 463 -152 q 476 -87 476 -107 q 471 -61 476 -74 q 450 -37 466 -48 q 403 -15 434 -25 q 321 5 373 -4 q 224 37 269 15 q 147 99 180 59 q 95 200 114 139 q 77 349 77 261 q 101 530 77 454 q 170 657 126 607 q 275 733 215 708 q 408 758 336 758 q 511 746 461 758 q 596 718 562 735 l 559 614 q 524 627 543 621 q 485 638 505 633 q 445 647 465 644 q 408 650 425 650 q 315 630 354 650 q 252 573 276 611 q 216 479 227 535 q 204 351 204 423 "},"Ē":{x_min:135,x_max:650,ha:733,o:"m 650 0 l 135 0 l 135 992 l 650 992 l 650 880 l 261 880 l 261 574 l 624 574 l 624 462 l 261 462 l 261 111 l 650 111 l 650 0 m 199 1172 l 589 1172 l 589 1071 l 199 1071 l 199 1172 "},"!":{x_min:100,x_max:272.265625,ha:374,o:"m 228 280 l 146 280 l 112 992 l 262 992 l 228 280 m 100 74 q 106 118 100 100 q 125 147 113 136 q 152 163 136 158 q 186 169 167 169 q 219 163 203 169 q 247 147 235 158 q 265 118 258 136 q 272 74 272 100 q 265 31 272 49 q 247 2 258 13 q 219 -14 235 -9 q 186 -20 203 -20 q 152 -14 167 -20 q 125 2 136 -9 q 106 31 113 13 q 100 74 100 49 "},"ç":{x_min:77,x_max:596,ha:643,o:"m 402 -14 q 274 7 334 -14 q 171 75 215 28 q 102 193 127 121 q 77 367 77 266 q 102 548 77 474 q 173 669 128 623 q 278 736 218 715 q 408 758 339 758 q 511 746 461 758 q 596 718 562 735 l 559 614 q 524 627 543 621 q 485 638 505 633 q 445 647 465 644 q 408 650 425 650 q 253 581 302 650 q 204 369 204 513 q 253 160 204 226 q 402 93 302 93 q 502 106 457 93 q 583 135 546 118 l 583 26 q 504 -3 546 6 q 402 -14 463 -14 m 495 -194 q 447 -297 495 -260 q 297 -334 399 -334 q 267 -331 282 -334 q 242 -327 252 -329 l 242 -254 q 268 -257 252 -256 q 295 -258 285 -258 q 370 -247 343 -258 q 397 -208 397 -235 q 388 -186 397 -195 q 364 -169 379 -176 q 327 -157 349 -162 q 282 -147 306 -152 l 343 0 l 425 0 l 386 -78 q 429 -92 409 -83 q 463 -115 448 -101 q 486 -148 478 -128 q 495 -194 495 -168 "},"Й":{x_min:136,x_max:879,ha:1013,o:"m 136 992 l 262 992 l 262 449 q 261 410 262 431 q 260 366 261 389 q 259 321 260 343 q 257 276 258 298 q 251 174 254 226 l 256 174 l 725 992 l 879 992 l 879 0 l 752 0 l 752 538 q 754 624 752 576 q 759 717 756 673 q 765 821 762 768 l 760 821 l 289 0 l 136 0 l 136 992 m 754 1287 q 733 1193 749 1234 q 685 1126 716 1153 q 605 1084 653 1098 q 489 1071 557 1071 q 372 1084 420 1071 q 295 1124 324 1097 q 251 1192 265 1151 q 234 1287 237 1232 l 349 1287 q 361 1219 352 1245 q 388 1178 371 1193 q 430 1158 405 1163 q 492 1152 456 1152 q 547 1159 522 1152 q 590 1181 572 1166 q 620 1222 608 1197 q 635 1287 631 1248 l 754 1287 "},"Б":{x_min:135,x_max:729,ha:800,o:"m 729 290 q 708 170 729 224 q 645 79 688 117 q 537 20 602 41 q 380 0 471 0 l 135 0 l 135 992 l 669 992 l 669 880 l 261 880 l 261 574 l 362 574 q 536 551 465 574 q 648 490 606 529 q 710 400 691 452 q 729 290 729 349 m 261 107 l 368 107 q 540 152 485 107 q 595 290 595 197 q 579 370 595 337 q 533 424 564 403 q 456 453 503 444 q 347 462 410 462 l 261 462 l 261 107 "},"đ":{x_min:77,x_max:801.796875,ha:814,o:"m 577 99 l 572 99 q 537 55 557 76 q 491 19 517 34 q 432 -5 465 3 q 359 -14 400 -14 q 244 9 296 -14 q 154 80 192 33 q 97 196 117 127 q 77 356 77 265 q 97 517 77 447 q 154 634 117 587 q 244 705 192 681 q 359 730 296 730 q 432 721 399 730 q 490 698 464 713 q 537 663 516 683 q 572 622 557 643 l 580 622 q 576 666 578 645 q 573 703 575 684 q 572 733 572 722 l 572 843 l 316 843 l 316 932 l 572 932 l 572 1055 l 696 1055 l 696 932 l 801 932 l 801 843 l 696 843 l 696 0 l 596 0 l 577 99 m 383 88 q 470 103 434 88 q 528 148 506 118 q 560 223 550 178 q 572 329 571 268 l 572 356 q 563 472 572 422 q 532 557 554 523 q 473 609 510 592 q 382 627 437 627 q 247 557 290 627 q 204 354 204 487 q 247 154 204 220 q 383 88 290 88 "},"ċ":{x_min:77,x_max:596,ha:643,o:"m 402 -14 q 274 7 334 -14 q 171 75 215 28 q 102 193 127 121 q 77 367 77 266 q 102 548 77 474 q 173 669 128 623 q 278 736 218 715 q 408 758 339 758 q 511 746 461 758 q 596 718 562 735 l 559 614 q 524 627 543 621 q 485 638 505 633 q 445 647 465 644 q 408 650 425 650 q 253 581 302 650 q 204 369 204 513 q 253 160 204 226 q 402 93 302 93 q 502 106 457 93 q 583 135 546 118 l 583 26 q 504 -3 546 6 q 402 -14 463 -14 m 317 945 q 337 1004 317 986 q 388 1023 358 1023 q 417 1018 403 1023 q 440 1004 430 1014 q 455 980 449 995 q 461 945 461 966 q 440 887 461 906 q 388 868 418 868 q 337 886 358 868 q 317 945 317 905 "},"Ā":{x_min:-.25,x_max:844.25,ha:844,o:"m 715 0 l 606 307 l 237 307 l 127 0 l 0 0 l 364 996 l 479 996 l 844 0 l 715 0 m 566 419 l 466 706 q 456 736 462 719 q 444 774 450 754 q 432 817 438 795 q 421 860 426 839 q 410 816 416 839 q 397 773 404 794 q 386 735 391 752 q 376 706 380 718 l 277 419 l 566 419 m 227 1172 l 617 1172 l 617 1071 l 227 1071 l 227 1172 "},"Ẃ":{x_min:13.75,x_max:1214.25,ha:1228,o:"m 549 992 l 682 992 l 837 411 q 857 335 847 373 q 876 261 867 297 q 891 194 884 225 q 901 136 897 162 q 908 192 904 162 q 917 256 912 223 q 929 325 923 290 q 943 393 936 360 l 1079 992 l 1214 992 l 965 0 l 837 0 l 665 636 q 647 707 656 671 q 631 776 638 744 q 615 848 622 813 q 600 776 608 814 q 585 707 593 745 q 567 632 576 669 l 402 0 l 275 0 l 13 992 l 147 992 l 298 388 q 313 323 306 357 q 325 257 320 290 q 336 192 331 223 q 344 136 341 162 q 352 194 347 161 q 364 264 358 227 q 379 338 371 301 q 396 409 387 376 l 549 992 m 549 1089 q 579 1134 563 1108 q 611 1187 595 1160 q 642 1242 627 1215 q 667 1293 656 1269 l 816 1293 l 816 1278 q 783 1233 805 1260 q 736 1175 762 1205 q 682 1118 710 1146 q 631 1071 654 1089 l 549 1071 l 549 1089 "},"ø":{x_min:78,x_max:727,ha:802,o:"m 727 373 q 704 208 727 280 q 639 86 681 135 q 536 11 596 37 q 400 -14 475 -14 q 249 21 315 -14 l 202 -52 l 113 -1 l 168 87 q 101 208 125 135 q 78 373 78 280 q 100 537 78 465 q 165 657 123 608 q 268 732 207 707 q 404 758 329 758 q 485 748 447 758 q 557 719 524 738 l 603 793 l 692 743 l 638 655 q 703 535 680 606 q 727 373 727 464 m 205 373 q 211 271 205 316 q 233 192 218 227 l 503 631 q 457 649 483 643 q 401 655 432 655 q 251 585 297 655 q 205 373 205 515 m 599 373 q 573 548 599 481 l 302 110 q 348 93 323 99 q 403 88 372 88 q 553 159 507 88 q 599 373 599 231 "},"â":{x_min:64,x_max:626,ha:737,o:"m 536 0 l 511 102 l 505 102 q 461 50 483 72 q 412 13 439 28 q 353 -7 386 0 q 278 -14 321 -14 q 193 0 232 -14 q 125 40 153 12 q 80 109 96 67 q 64 208 64 151 q 142 379 64 320 q 379 445 220 439 l 503 450 l 503 496 q 494 572 503 541 q 465 620 484 602 q 419 647 447 639 q 357 655 392 655 q 253 639 301 655 q 160 599 204 623 l 117 692 q 228 739 167 720 q 357 758 290 758 q 477 744 427 758 q 560 700 527 730 q 609 623 593 669 q 626 509 626 576 l 626 0 l 536 0 m 310 88 q 386 101 351 88 q 447 140 422 114 q 488 205 473 166 q 502 298 502 245 l 502 365 l 405 360 q 303 346 345 357 q 237 316 262 336 q 202 270 213 297 q 191 208 191 243 q 224 117 191 146 q 310 88 257 88 m 605 842 l 523 842 q 451 897 488 864 q 380 967 415 930 q 307 897 343 930 q 237 842 271 864 l 155 842 l 155 860 q 195 905 172 879 q 241 958 218 931 q 284 1013 264 986 q 314 1064 304 1040 l 445 1064 q 475 1013 455 1040 q 518 958 495 986 q 564 905 541 931 q 605 860 588 879 l 605 842 "},"}":{x_min:36,x_max:451,ha:492,o:"m 153 214 q 193 328 153 286 q 311 383 233 369 l 311 391 q 193 446 233 405 q 153 559 153 488 l 153 783 q 145 836 153 815 q 122 868 137 857 q 84 885 106 880 q 36 890 63 889 l 36 992 q 132 980 87 991 q 208 944 176 968 q 258 883 240 920 q 277 793 277 846 l 277 567 q 288 507 277 531 q 321 467 299 483 q 376 445 343 452 q 451 439 408 439 l 451 337 q 321 307 366 337 q 277 208 277 278 l 277 -19 q 258 -110 277 -73 q 208 -172 240 -148 q 132 -208 176 -196 q 36 -220 87 -219 l 36 -118 q 84 -113 63 -117 q 122 -96 106 -108 q 145 -64 137 -84 q 153 -10 153 -43 l 153 214 "},"Δ":{x_min:25,x_max:765,ha:789,o:"m 765 84 l 765 0 l 25 0 l 25 90 l 330 992 l 457 992 l 765 84 m 393 852 q 367 745 381 802 q 333 626 352 688 l 158 111 l 631 111 l 457 622 q 419 745 435 688 q 393 852 403 802 "},"‰":{x_min:69,x_max:1555,ha:1624,o:"m 169 695 q 193 527 169 583 q 271 471 217 471 q 377 695 377 471 q 271 917 377 917 q 193 862 217 917 q 169 695 169 807 m 478 695 q 465 564 478 622 q 428 465 453 505 q 364 404 403 425 q 271 383 325 383 q 184 404 222 383 q 120 465 146 425 q 81 564 94 505 q 69 695 69 622 q 80 826 69 769 q 117 924 92 884 q 180 984 142 963 q 271 1006 218 1006 q 360 984 322 1006 q 425 924 399 963 q 464 826 451 884 q 478 695 478 769 m 769 297 q 793 129 769 185 q 871 74 817 74 q 976 297 976 74 q 871 519 976 519 q 793 464 817 519 q 769 297 769 409 m 1077 298 q 1065 166 1077 224 q 1028 68 1053 108 q 964 7 1003 28 q 871 -14 925 -14 q 783 7 821 -14 q 720 68 745 28 q 681 166 694 108 q 669 298 669 224 q 680 428 669 371 q 717 526 692 486 q 780 586 742 565 q 871 608 818 608 q 960 586 922 608 q 1024 526 999 565 q 1063 428 1050 486 q 1077 298 1077 371 m 903 992 l 352 0 l 245 0 l 796 992 l 903 992 m 1247 297 q 1271 129 1247 185 q 1349 74 1295 74 q 1454 297 1454 74 q 1349 519 1454 519 q 1271 464 1295 519 q 1247 297 1247 409 m 1555 298 q 1543 166 1555 224 q 1506 68 1531 108 q 1442 7 1481 28 q 1349 -14 1403 -14 q 1261 7 1299 -14 q 1198 68 1223 28 q 1159 166 1172 108 q 1147 298 1147 224 q 1158 428 1147 371 q 1195 526 1170 486 q 1258 586 1220 565 q 1349 608 1296 608 q 1438 586 1399 608 q 1502 526 1477 565 q 1541 428 1528 486 q 1555 298 1555 371 "},"Ä":{x_min:-.25,x_max:844.25,ha:844,o:"m 715 0 l 606 307 l 237 307 l 127 0 l 0 0 l 364 996 l 479 996 l 844 0 l 715 0 m 566 419 l 466 706 q 456 736 462 719 q 444 774 450 754 q 432 817 438 795 q 421 860 426 839 q 410 816 416 839 q 397 773 404 794 q 386 735 391 752 q 376 706 380 718 l 277 419 l 566 419 m 230 1174 q 248 1227 230 1211 q 295 1244 267 1244 q 341 1227 321 1244 q 360 1174 360 1210 q 341 1121 360 1138 q 295 1105 321 1105 q 248 1121 267 1105 q 230 1174 230 1138 m 484 1174 q 503 1227 484 1211 q 549 1244 522 1244 q 574 1239 562 1244 q 595 1227 586 1235 q 609 1206 604 1218 q 615 1174 615 1193 q 595 1121 615 1138 q 549 1105 575 1105 q 503 1121 522 1105 q 484 1174 484 1138 "},"ř":{x_min:78,x_max:528,ha:554,o:"m 439 758 q 483 756 459 758 q 526 751 508 754 l 509 637 q 470 643 490 640 q 433 645 450 645 q 355 628 390 645 q 294 578 320 610 q 255 501 269 546 q 241 401 241 456 l 241 0 l 118 0 l 118 745 l 218 745 l 233 608 l 238 608 q 274 664 255 637 q 318 712 294 691 q 372 745 342 732 q 439 758 402 758 m 528 1045 q 487 1000 511 1026 q 441 947 464 974 q 398 892 418 919 q 368 842 378 865 l 237 842 q 207 892 227 865 q 164 947 187 919 q 118 1000 141 974 q 78 1045 95 1026 l 78 1064 l 160 1064 q 230 1008 194 1041 q 303 937 266 975 q 374 1008 338 975 q 446 1064 411 1041 l 528 1064 l 528 1045 "},"—":{x_min:56,x_max:1333,ha:1389,o:"m 56 315 l 56 429 l 1333 429 l 1333 315 l 56 315 "},N:{x_min:135,x_max:878,ha:1013,o:"m 878 0 l 724 0 l 253 821 l 248 821 q 255 717 252 768 q 259 624 257 673 q 261 538 261 576 l 261 0 l 135 0 l 135 992 l 288 992 l 757 174 l 762 174 q 757 276 759 226 q 755 321 756 298 q 753 366 754 343 q 752 410 752 389 q 751 449 751 431 l 751 992 l 878 992 l 878 0 "},"⁄":{x_min:-239.25,x_max:418.25,ha:180,o:"m 418 992 l -132 0 l -239 0 l 311 992 l 418 992 "},2:{x_min:65,x_max:683.34375,ha:765,o:"m 683 0 l 65 0 l 65 105 l 301 364 q 392 464 352 419 q 460 553 432 510 q 503 640 488 596 q 518 736 518 684 q 507 806 518 775 q 474 857 495 836 q 423 890 452 879 q 358 900 394 900 q 242 874 294 900 q 144 808 190 849 l 75 889 q 133 935 102 913 q 200 972 164 956 q 276 996 236 987 q 360 1006 316 1006 q 478 987 425 1006 q 567 935 530 969 q 623 851 603 900 q 644 740 644 802 q 626 630 644 683 q 576 528 608 578 q 501 426 545 477 q 406 320 457 375 l 216 118 l 216 112 l 683 112 l 683 0 "},"М":{x_min:135,x_max:1074,ha:1209,o:"m 544 0 l 253 868 l 248 868 q 255 768 252 818 q 259 678 257 726 q 261 593 261 631 l 261 0 l 135 0 l 135 992 l 331 992 l 601 183 l 605 183 l 886 992 l 1074 992 l 1074 0 l 947 0 l 947 601 q 949 682 947 637 q 952 769 950 728 q 957 867 955 817 l 951 867 l 648 0 l 544 0 "},"Ó":{x_min:85,x_max:945,ha:1031,o:"m 945 496 q 917 287 945 382 q 835 126 890 193 q 701 22 781 59 q 515 -14 620 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 498 85 382 q 110 707 85 613 q 190 867 136 801 q 325 970 243 934 q 517 1007 406 1007 q 701 970 622 1007 q 835 867 781 934 q 917 706 890 800 q 945 496 945 612 m 218 497 q 236 330 218 404 q 290 204 253 255 q 382 124 326 152 q 515 97 438 97 q 648 124 593 97 q 741 204 704 152 q 794 330 777 255 q 811 497 811 404 q 794 664 811 590 q 741 789 777 738 q 649 868 705 840 q 517 895 594 895 q 383 868 439 895 q 290 789 327 840 q 236 664 253 738 q 218 497 218 590 m 441 1089 q 471 1134 455 1108 q 503 1187 487 1160 q 534 1242 519 1215 q 559 1293 548 1269 l 708 1293 l 708 1278 q 675 1233 697 1260 q 628 1175 654 1205 q 574 1118 602 1146 q 523 1071 546 1089 l 441 1071 l 441 1089 "},"˜":{x_min:175,x_max:663,ha:802,o:"m 519 843 q 465 854 492 843 q 413 881 439 866 q 363 907 387 895 q 318 919 339 919 q 271 901 287 919 q 245 841 255 883 l 175 841 q 189 915 178 882 q 218 972 200 948 q 261 1008 236 995 q 318 1021 286 1021 q 374 1009 346 1021 q 427 982 401 997 q 476 956 453 968 q 519 944 500 944 q 565 962 550 944 q 591 1022 581 980 l 663 1022 q 648 948 659 981 q 619 892 637 915 q 576 855 601 868 q 519 843 551 843 "}," ":{x_min:0,x_max:0,ha:695},"ˇ":{x_min:175,x_max:625,ha:802,o:"m 625 1045 q 584 1000 608 1026 q 538 947 561 974 q 495 892 515 919 q 465 842 475 865 l 334 842 q 304 892 324 865 q 261 947 284 919 q 215 1000 238 974 q 175 1045 192 1026 l 175 1064 l 257 1064 q 327 1008 291 1041 q 400 937 363 975 q 471 1008 435 975 q 543 1064 508 1041 l 625 1064 l 625 1045 "},"ų":{x_min:111,x_max:710,ha:818,o:"m 600 0 l 582 99 l 575 99 q 534 48 558 70 q 483 13 511 27 q 424 -7 455 0 q 360 -14 393 -14 q 252 1 299 -14 q 174 50 205 17 q 126 135 142 83 q 111 258 111 186 l 111 745 l 234 745 l 234 264 q 270 132 234 176 q 381 88 306 88 q 474 106 436 88 q 534 158 511 123 q 566 242 556 192 q 576 357 576 292 l 576 745 l 700 745 l 700 0 l 600 0 m 591 -161 q 609 -206 591 -191 q 651 -220 627 -220 q 684 -218 668 -220 q 710 -214 700 -217 l 710 -291 q 670 -299 692 -296 q 629 -302 649 -302 q 527 -266 561 -302 q 494 -170 494 -231 q 503 -116 494 -142 q 529 -69 513 -91 q 562 -30 544 -48 q 598 0 581 -12 l 685 0 q 591 -161 591 -90 "},"Ў":{x_min:16.75,x_max:813.25,ha:813,o:"m 813 992 l 522 289 q 468 172 496 227 q 402 75 440 116 q 311 10 364 34 q 183 -14 258 -14 q 117 -8 148 -14 q 62 6 87 -3 l 62 131 q 117 106 87 116 q 183 97 147 97 q 246 105 219 97 q 297 130 274 112 q 338 178 319 149 q 376 250 357 207 l 16 992 l 155 992 l 415 440 q 422 425 418 433 q 428 408 425 417 q 434 391 431 399 q 440 377 437 383 l 441 377 q 447 394 443 383 q 455 416 451 404 q 462 437 458 427 q 468 451 466 447 l 679 992 l 813 992 m 684 1287 q 663 1193 679 1234 q 615 1126 646 1153 q 535 1084 583 1098 q 419 1071 487 1071 q 302 1084 350 1071 q 225 1124 254 1097 q 181 1192 195 1151 q 164 1287 167 1232 l 279 1287 q 291 1219 282 1245 q 318 1178 301 1193 q 360 1158 335 1163 q 422 1152 386 1152 q 477 1159 452 1152 q 520 1181 502 1166 q 550 1222 538 1197 q 565 1287 561 1248 l 684 1287 "},"Ŭ":{x_min:125,x_max:845,ha:970,o:"m 845 993 l 845 349 q 822 205 845 272 q 755 90 800 139 q 641 13 709 41 q 481 -14 573 -14 q 327 12 394 -14 q 216 86 261 38 q 148 202 171 134 q 125 352 125 269 l 125 991 l 251 991 l 251 346 q 309 162 251 227 q 487 97 368 97 q 591 115 548 97 q 663 167 635 133 q 704 246 690 200 q 718 347 718 292 l 718 993 l 845 993 m 689 1259 q 671 1183 686 1217 q 630 1123 656 1149 q 567 1084 604 1098 q 482 1071 530 1071 q 395 1084 432 1071 q 334 1122 358 1097 q 296 1181 309 1147 q 281 1259 283 1216 l 355 1259 q 367 1212 358 1229 q 393 1186 377 1194 q 432 1175 409 1177 q 485 1172 455 1172 q 531 1175 509 1172 q 571 1188 553 1178 q 600 1214 588 1197 q 614 1259 611 1231 l 689 1259 "},"ĝ":{x_min:25,x_max:692.484375,ha:720,o:"m 692 745 l 692 668 l 559 649 q 591 588 578 625 q 604 504 604 551 q 588 409 604 453 q 539 333 572 365 q 459 283 507 301 q 348 266 412 266 q 319 266 333 266 q 294 268 304 266 q 271 253 282 261 q 251 233 260 244 q 236 208 242 222 q 230 178 230 194 q 238 148 230 159 q 260 130 246 136 q 293 122 274 124 q 333 120 312 120 l 453 120 q 560 104 516 120 q 631 61 603 88 q 670 -2 658 34 q 683 -80 683 -38 q 660 -186 683 -139 q 593 -266 638 -233 q 478 -316 547 -298 q 314 -334 408 -334 q 187 -319 241 -334 q 96 -278 132 -305 q 42 -213 60 -251 q 25 -128 25 -175 q 38 -57 25 -87 q 73 -4 51 -26 q 125 32 96 17 q 187 53 155 46 q 140 94 158 66 q 122 159 122 122 q 143 231 122 201 q 212 291 165 262 q 158 324 182 303 q 118 373 134 346 q 92 433 101 401 q 83 500 83 466 q 99 608 83 561 q 150 689 116 656 q 233 740 183 722 q 348 758 282 758 q 400 754 373 758 q 445 745 427 750 l 692 745 m 141 -126 q 150 -173 141 -151 q 179 -211 159 -195 q 232 -235 199 -226 q 314 -245 265 -245 q 503 -205 440 -245 q 566 -92 566 -166 q 558 -41 566 -61 q 531 -10 550 -21 q 482 4 512 0 q 407 8 451 8 l 287 8 q 238 3 263 8 q 190 -17 212 -2 q 155 -58 169 -32 q 141 -126 141 -84 m 206 504 q 242 388 206 426 q 344 350 278 350 q 446 388 411 350 q 480 506 480 426 q 445 629 480 590 q 343 669 410 669 q 241 628 277 669 q 206 504 206 587 m 586 842 l 504 842 q 432 897 469 864 q 361 967 396 930 q 288 897 324 930 q 218 842 252 864 l 136 842 l 136 860 q 176 905 153 879 q 222 958 199 931 q 265 1013 245 986 q 295 1064 285 1040 l 426 1064 q 456 1013 436 1040 q 499 958 476 986 q 545 905 522 931 q 586 860 569 879 l 586 842 "},"Ω":{x_min:53.0625,x_max:980.9375,ha:1031,o:"m 517 895 q 384 872 439 895 q 292 805 328 849 q 239 699 256 762 q 222 556 222 636 q 234 425 222 488 q 273 304 246 362 q 345 194 301 246 q 455 99 390 143 l 455 0 l 53 0 l 53 111 l 321 111 q 229 189 271 143 q 155 292 186 235 q 106 416 124 349 q 89 559 89 484 q 116 743 89 661 q 198 884 143 826 q 332 975 252 943 q 517 1007 412 1007 q 701 975 622 1007 q 835 884 781 943 q 917 743 890 826 q 945 559 945 661 q 927 416 945 484 q 878 292 909 349 q 805 189 847 235 q 712 111 762 143 l 980 111 l 980 0 l 579 0 l 579 99 q 688 194 643 143 q 760 304 732 246 q 799 425 787 362 q 811 556 811 488 q 794 699 811 636 q 741 805 777 762 q 649 872 705 849 q 517 895 594 895 "},s:{x_min:61.15625,x_max:564,ha:627,o:"m 564 203 q 544 108 564 149 q 487 40 524 68 q 398 0 450 13 q 281 -14 346 -14 q 154 -2 207 -14 q 61 33 101 9 l 61 146 q 107 125 82 135 q 161 106 133 114 q 219 93 189 98 q 279 88 249 88 q 353 95 323 88 q 403 116 384 103 q 431 150 423 130 q 440 194 440 170 q 433 232 440 215 q 409 265 427 249 q 360 299 391 282 q 280 337 329 316 q 193 378 232 358 q 127 424 154 399 q 86 482 100 449 q 72 560 72 515 q 90 645 72 608 q 143 707 109 682 q 224 745 177 732 q 330 758 272 758 q 451 743 396 758 q 554 706 505 729 l 512 606 q 422 641 468 626 q 329 655 376 655 q 228 632 261 655 q 195 568 195 610 q 203 526 195 544 q 229 493 210 509 q 279 461 248 477 q 358 426 311 445 q 444 385 406 405 q 509 339 482 365 q 549 281 535 314 q 564 203 564 249 "},"?":{x_min:25,x_max:546,ha:591,o:"m 191 280 l 191 305 q 196 375 191 343 q 214 433 201 406 q 250 486 227 460 q 306 541 272 512 q 362 592 339 569 q 400 638 385 614 q 422 688 415 661 q 429 751 429 715 q 419 811 429 784 q 389 857 408 838 q 341 887 370 876 q 274 898 312 898 q 166 880 217 898 q 67 839 115 862 l 25 937 q 143 985 79 965 q 273 1006 207 1006 q 386 988 336 1006 q 472 938 437 971 q 527 858 508 906 q 546 752 546 811 q 537 671 546 707 q 512 605 529 635 q 471 546 495 574 q 412 485 446 517 q 360 432 380 455 q 328 388 339 409 q 311 344 316 366 q 307 292 307 322 l 307 280 l 191 280 m 158 74 q 164 118 158 100 q 183 147 171 136 q 210 163 194 158 q 244 169 225 169 q 277 163 261 169 q 305 147 293 158 q 323 118 316 136 q 330 74 330 100 q 323 31 330 49 q 305 2 316 13 q 277 -14 293 -9 q 244 -20 261 -20 q 210 -14 225 -20 q 183 2 194 -9 q 164 31 171 13 q 158 74 158 49 "},"Ņ":{x_min:135,x_max:878,ha:1013,o:"m 878 0 l 724 0 l 253 821 l 248 821 q 255 717 252 768 q 259 624 257 673 q 261 538 261 576 l 261 0 l 135 0 l 135 992 l 288 992 l 757 174 l 762 174 q 757 276 759 226 q 755 321 756 298 q 753 366 754 343 q 752 410 752 389 q 751 449 751 431 l 751 992 l 878 992 l 878 0 m 396 -288 q 412 -246 403 -271 q 429 -191 421 -220 q 443 -135 437 -163 q 452 -85 450 -107 l 575 -85 l 575 -98 q 560 -141 570 -115 q 534 -197 549 -167 q 500 -255 519 -226 q 462 -307 482 -284 l 396 -307 l 396 -288 "},"Ī":{x_min:41,x_max:431,ha:471,o:"m 414 0 l 55 0 l 55 69 l 172 96 l 172 895 l 55 922 l 55 992 l 414 992 l 414 922 l 298 895 l 298 96 l 414 69 l 414 0 m 41 1172 l 431 1172 l 431 1071 l 41 1071 l 41 1172 "},"Μ":{x_min:135,x_max:1074,ha:1209,o:"m 544 0 l 253 868 l 248 868 q 255 768 252 818 q 259 678 257 726 q 261 593 261 631 l 261 0 l 135 0 l 135 992 l 331 992 l 601 183 l 605 183 l 886 992 l 1074 992 l 1074 0 l 947 0 l 947 601 q 949 682 947 637 q 952 769 950 728 q 957 867 955 817 l 951 867 l 648 0 l 544 0 "},"•":{x_min:102,x_max:421,ha:522,o:"m 102 507 q 114 589 102 555 q 147 644 126 623 q 198 675 169 666 q 261 685 227 685 q 323 675 294 685 q 374 644 352 666 q 408 589 395 623 q 421 507 421 555 q 408 425 421 459 q 374 370 395 392 q 323 339 352 349 q 261 329 294 329 q 198 339 227 329 q 147 370 169 349 q 114 425 126 392 q 102 507 102 459 "},"н":{x_min:118,x_max:735,ha:853,o:"m 241 745 l 241 436 l 611 436 l 611 745 l 735 745 l 735 0 l 611 0 l 611 333 l 241 333 l 241 0 l 118 0 l 118 745 l 241 745 "},"(":{x_min:56,x_max:376.34375,ha:418,o:"m 56 380 q 68 547 56 465 q 105 708 80 630 q 168 857 130 785 q 259 992 207 928 l 376 992 q 232 704 281 861 q 183 381 183 547 q 196 221 183 301 q 232 64 208 141 q 292 -84 256 -12 q 375 -220 328 -156 l 259 -220 q 168 -89 207 -158 q 105 57 130 -19 q 68 214 80 133 q 56 380 56 296 "},"◊":{x_min:74,x_max:737,ha:810,o:"m 737 499 l 430 0 l 379 0 l 74 498 l 379 1000 l 430 1000 l 737 499 m 618 499 l 405 898 l 175 499 l 405 101 l 618 499 "},"α":{x_min:77,x_max:792.984375,ha:814,o:"m 383 88 q 470 104 434 88 q 528 153 506 120 q 560 238 550 186 q 572 360 571 289 l 572 370 q 563 492 572 439 q 532 581 554 545 q 473 636 510 618 q 382 655 437 655 q 247 581 290 655 q 204 369 204 507 q 247 157 204 227 q 383 88 290 88 m 359 -14 q 244 10 296 -14 q 154 83 192 34 q 97 203 117 131 q 77 370 77 275 q 97 538 77 466 q 156 659 118 610 q 249 733 194 708 q 372 758 304 758 q 497 729 448 758 q 579 644 546 701 l 587 644 q 605 695 594 667 q 633 745 616 723 l 730 745 q 716 687 723 722 q 705 610 710 651 q 698 527 701 569 q 696 446 696 484 l 696 162 q 712 104 696 121 q 752 87 729 87 q 775 89 762 87 q 792 93 787 91 l 792 3 q 760 -8 782 -2 q 715 -14 738 -14 q 668 -8 689 -14 q 630 10 647 -3 q 601 45 613 23 q 580 99 588 66 l 572 99 q 537 55 557 76 q 491 19 517 34 q 432 -5 465 3 q 359 -14 400 -14 "},"Ħ":{x_min:.03125,x_max:973.953125,ha:974,o:"m 135 827 l 135 992 l 261 992 l 261 827 l 712 827 l 712 992 l 839 992 l 839 827 l 973 827 l 973 719 l 839 719 l 839 0 l 712 0 l 712 462 l 261 462 l 261 0 l 135 0 l 135 719 l 0 719 l 0 827 l 135 827 m 712 574 l 712 719 l 261 719 l 261 574 l 712 574 "},"м":{x_min:118,x_max:879,ha:997,o:"m 879 0 l 762 0 l 762 608 q 752 575 758 594 q 740 535 747 555 q 728 497 733 515 q 717 466 722 479 l 543 0 l 453 0 l 278 466 q 269 492 275 475 q 257 528 264 508 q 245 569 251 548 q 234 608 239 591 l 234 0 l 118 0 l 118 745 l 274 745 l 450 272 q 465 226 458 248 q 479 183 473 203 q 490 145 485 162 q 498 118 495 128 q 506 146 502 129 q 517 182 511 162 q 531 224 523 202 q 546 269 538 246 l 724 745 l 879 745 l 879 0 "},"з":{x_min:45.859375,x_max:577,ha:639,o:"m 250 439 q 326 445 292 439 q 385 464 360 451 q 423 499 409 477 q 436 551 436 520 q 397 629 436 603 q 284 655 357 655 q 192 642 235 655 q 96 606 148 629 l 54 706 q 107 729 81 720 q 161 745 133 739 q 219 754 189 751 q 286 758 250 758 q 393 745 344 758 q 477 707 442 732 q 533 645 513 682 q 553 561 553 608 q 543 501 553 527 q 516 455 533 475 q 475 421 499 435 q 422 398 451 407 l 422 390 q 480 366 452 381 q 529 328 508 351 q 564 275 551 306 q 577 202 577 245 q 559 117 577 157 q 504 48 541 77 q 411 2 467 19 q 278 -14 354 -14 q 144 -1 204 -14 q 45 33 85 10 l 45 146 q 92 125 66 135 q 147 106 118 114 q 209 93 176 98 q 276 88 242 88 q 346 94 313 88 q 402 114 378 100 q 439 152 425 129 q 453 210 453 176 q 408 305 453 274 q 270 336 363 336 l 184 336 l 184 439 l 250 439 "},"Ґ":{x_min:135,x_max:649,ha:682,o:"m 522 992 l 522 1196 l 649 1196 l 649 880 l 261 880 l 261 0 l 135 0 l 135 992 l 522 992 "},"Û":{x_min:125,x_max:845,ha:970,o:"m 845 993 l 845 349 q 822 205 845 272 q 755 90 800 139 q 641 13 709 41 q 481 -14 573 -14 q 327 12 394 -14 q 216 86 261 38 q 148 202 171 134 q 125 352 125 269 l 125 991 l 251 991 l 251 346 q 309 162 251 227 q 487 97 368 97 q 591 115 548 97 q 663 167 635 133 q 704 246 690 200 q 718 347 718 292 l 718 993 l 845 993 m 708 1071 l 626 1071 q 554 1126 591 1093 q 483 1196 518 1159 q 410 1126 446 1159 q 340 1071 374 1093 l 258 1071 l 258 1089 q 298 1134 275 1108 q 344 1187 321 1160 q 387 1242 367 1215 q 417 1293 407 1269 l 548 1293 q 578 1242 558 1269 q 621 1187 598 1215 q 667 1134 644 1160 q 708 1089 691 1108 l 708 1071 "
},"і":{x_min:108.5,x_max:252.96875,ha:359,o:"m 241 0 l 118 0 l 118 745 l 241 745 l 241 0 m 108 945 q 129 1004 108 986 q 180 1023 149 1023 q 208 1018 195 1023 q 231 1004 221 1014 q 247 980 241 995 q 252 945 252 966 q 231 887 252 906 q 180 868 210 868 q 129 886 149 868 q 108 945 108 905 "},V:{x_min:-.25,x_max:789.25,ha:789,o:"m 654 992 l 789 992 l 457 0 l 330 0 l 0 992 l 133 992 l 333 362 q 367 243 353 301 q 393 136 381 186 q 419 243 403 186 q 455 367 434 301 l 654 992 "},"Ŗ":{x_min:135,x_max:803.25,ha:819,o:"m 261 410 l 261 0 l 135 0 l 135 992 l 376 992 q 642 922 556 992 q 729 710 729 852 q 712 607 729 651 q 668 531 695 563 q 605 479 640 500 q 533 444 570 458 l 803 0 l 654 0 l 416 410 l 261 410 m 261 517 l 371 517 q 473 529 431 517 q 543 564 516 541 q 582 623 570 588 q 595 704 595 658 q 581 787 595 753 q 540 842 567 821 q 469 874 512 864 q 368 884 426 884 l 261 884 l 261 517 m 330 -288 q 346 -246 337 -271 q 363 -191 355 -220 q 377 -135 371 -163 q 386 -85 384 -107 l 509 -85 l 509 -98 q 494 -141 504 -115 q 468 -197 483 -167 q 434 -255 453 -226 q 396 -307 416 -284 l 330 -307 l 330 -288 "},"@":{x_min:74,x_max:1129,ha:1203,o:"m 1129 496 q 1122 411 1129 453 q 1103 330 1116 369 q 1071 259 1091 292 q 1026 202 1052 226 q 967 163 1000 177 q 895 150 934 150 q 840 160 865 150 q 797 187 815 170 q 769 226 780 204 q 753 272 757 248 l 751 272 q 720 224 738 246 q 678 185 702 202 q 623 159 654 168 q 557 150 593 150 q 465 169 505 150 q 396 222 424 188 q 354 304 369 256 q 340 411 340 353 q 360 536 340 479 q 417 635 380 594 q 509 699 455 676 q 629 723 562 723 q 690 720 659 723 q 748 712 720 717 q 799 702 776 708 q 838 691 823 696 l 823 408 q 822 384 822 393 q 822 369 822 375 q 822 361 822 364 q 822 357 822 359 q 829 297 822 321 q 847 261 836 274 q 873 242 859 247 q 903 237 888 237 q 958 258 935 237 q 998 314 982 278 q 1022 396 1014 349 q 1030 497 1030 444 q 1001 668 1030 593 q 920 795 972 743 q 798 873 869 846 q 644 900 727 900 q 442 862 529 900 q 295 757 354 825 q 205 597 236 690 q 175 395 175 505 q 201 213 175 292 q 280 79 228 134 q 409 -2 332 25 q 585 -30 486 -30 q 667 -25 627 -30 q 745 -12 707 -20 q 816 6 783 -4 q 880 28 850 16 l 880 -67 q 748 -108 821 -93 q 587 -123 675 -123 q 370 -88 465 -123 q 209 12 275 -53 q 108 173 143 78 q 74 390 74 269 q 114 628 74 517 q 228 819 154 738 q 407 945 302 899 q 644 992 513 992 q 838 957 749 992 q 992 859 927 923 q 1093 703 1057 795 q 1129 496 1129 611 m 448 408 q 482 277 448 318 q 574 237 517 237 q 638 252 612 237 q 682 296 665 268 q 708 363 699 324 q 719 449 716 402 l 729 621 q 683 631 710 626 q 629 635 657 635 q 544 615 578 635 q 488 564 510 596 q 458 491 467 532 q 448 408 448 450 "},"ʼ":{x_min:16,x_max:228,ha:243,o:"m 219 992 l 228 977 q 205 898 218 939 q 176 815 192 857 q 143 731 160 772 q 108 652 125 690 l 16 652 q 38 737 26 692 q 60 827 49 782 q 79 913 70 871 q 94 992 88 956 l 219 992 "},"℅":{x_min:96,x_max:1016,ha:1112,o:"m 874 992 l 325 0 l 218 0 l 767 992 l 874 992 m 1016 227 q 1000 127 1016 170 q 958 55 985 84 q 893 10 931 25 q 809 -5 855 -5 q 729 10 766 -5 q 664 55 691 25 q 620 127 636 84 q 605 227 605 170 q 619 326 605 283 q 661 398 634 369 q 727 443 689 428 q 811 459 765 459 q 891 443 853 459 q 956 398 928 428 q 1000 326 984 369 q 1016 227 1016 283 m 705 228 q 711 164 705 193 q 729 114 716 135 q 762 82 742 93 q 811 70 782 70 q 859 82 839 70 q 891 114 879 93 q 909 164 904 135 q 915 228 915 193 q 909 291 915 263 q 891 340 904 320 q 859 372 879 361 q 811 383 839 383 q 762 372 782 383 q 729 340 742 361 q 711 291 716 320 q 705 228 705 263 m 320 534 q 233 546 274 534 q 161 587 192 559 q 113 658 131 615 q 96 763 96 702 q 113 872 96 827 q 163 945 131 917 q 236 986 194 973 q 327 999 278 999 q 395 991 362 999 q 451 973 429 984 l 429 901 q 380 916 408 910 q 328 923 351 923 q 228 884 259 923 q 196 764 196 844 q 326 609 196 609 q 390 615 360 609 q 444 631 420 620 l 444 559 q 386 540 420 546 q 320 534 353 534 "},i:{x_min:108.5,x_max:252.96875,ha:359,o:"m 241 0 l 118 0 l 118 745 l 241 745 l 241 0 m 108 945 q 129 1004 108 986 q 180 1023 149 1023 q 208 1018 195 1023 q 231 1004 221 1014 q 247 980 241 995 q 252 945 252 966 q 231 887 252 906 q 180 868 210 868 q 129 886 149 868 q 108 945 108 905 "},"ќ":{x_min:118,x_max:676.25,ha:682,o:"m 516 745 l 649 745 l 369 387 l 676 0 l 536 0 l 241 377 l 241 0 l 118 0 l 118 745 l 241 745 l 241 383 l 516 745 m 272 860 q 302 905 286 879 q 334 958 318 931 q 365 1013 350 986 q 390 1064 379 1040 l 539 1064 l 539 1049 q 506 1004 528 1031 q 459 946 485 976 q 405 889 433 917 q 354 842 377 860 l 272 842 l 272 860 "},"≤":{x_min:69,x_max:696,ha:765,o:"m 696 161 l 69 448 l 69 517 l 696 844 l 696 735 l 197 488 l 696 270 l 696 161 m 69 0 l 69 101 l 696 101 l 696 0 l 69 0 "},"ё":{x_min:77,x_max:673,ha:743,o:"m 412 -14 q 276 11 337 -14 q 170 84 214 36 q 101 203 125 132 q 77 366 77 274 q 99 531 77 458 q 162 654 121 604 q 259 731 202 705 q 384 758 316 758 q 505 733 451 758 q 595 665 558 709 q 653 560 633 621 q 673 423 673 498 l 673 346 l 204 346 q 259 155 207 216 q 413 93 311 93 q 477 97 448 93 q 534 107 507 100 q 587 123 561 113 q 639 145 613 133 l 639 35 q 586 13 612 22 q 533 -2 560 3 q 476 -11 505 -8 q 412 -14 446 -14 m 384 655 q 260 602 306 655 q 207 449 214 549 l 545 449 q 536 533 545 495 q 507 598 526 571 q 457 640 487 625 q 384 655 427 655 m 183 945 q 201 998 183 982 q 248 1015 220 1015 q 294 998 274 1015 q 313 945 313 981 q 294 892 313 909 q 248 876 274 876 q 201 892 220 876 q 183 945 183 909 m 437 945 q 456 998 437 982 q 502 1015 475 1015 q 527 1010 515 1015 q 548 998 539 1006 q 562 977 557 989 q 568 945 568 964 q 548 892 568 909 q 502 876 528 876 q 456 892 475 876 q 437 945 437 909 "},"υ":{x_min:111,x_max:736,ha:819,o:"m 409 -14 q 264 13 322 -14 q 172 87 206 40 q 124 199 138 135 q 111 337 111 263 l 111 745 l 234 745 l 234 345 q 245 239 234 286 q 278 158 256 192 q 335 106 300 125 q 417 88 370 88 q 564 167 516 88 q 612 412 612 245 q 609 503 612 461 q 601 585 606 545 q 587 664 595 625 q 569 745 580 703 l 693 745 q 711 664 703 703 q 725 585 719 626 q 733 501 730 545 q 736 406 736 457 q 653 88 736 190 q 409 -14 570 -14 "},"ĕ":{x_min:77,x_max:673,ha:743,o:"m 412 -14 q 276 11 337 -14 q 170 84 214 36 q 101 203 125 132 q 77 366 77 274 q 99 531 77 458 q 162 654 121 604 q 259 731 202 705 q 384 758 316 758 q 505 733 451 758 q 595 665 558 709 q 653 560 633 621 q 673 423 673 498 l 673 346 l 204 346 q 259 155 207 216 q 413 93 311 93 q 477 97 448 93 q 534 107 507 100 q 587 123 561 113 q 639 145 613 133 l 639 35 q 586 13 612 22 q 533 -2 560 3 q 476 -11 505 -8 q 412 -14 446 -14 m 384 655 q 260 602 306 655 q 207 449 214 549 l 545 449 q 536 533 545 495 q 507 598 526 571 q 457 640 487 625 q 384 655 427 655 m 589 1030 q 571 954 586 988 q 530 894 556 920 q 467 855 504 869 q 382 842 430 842 q 295 855 332 842 q 234 893 258 868 q 196 952 209 918 q 181 1030 183 987 l 255 1030 q 267 983 258 1000 q 293 957 277 965 q 332 946 309 948 q 385 943 355 943 q 431 946 409 943 q 471 959 453 949 q 500 985 488 968 q 514 1030 511 1002 l 589 1030 "},"ﬃ":{x_min:19,x_max:1166.96875,ha:1274,o:"m 441 656 l 274 656 l 274 0 l 151 0 l 151 656 l 19 656 l 19 704 l 151 749 l 151 814 q 166 934 151 886 q 210 1010 181 982 q 280 1051 238 1039 q 375 1063 322 1063 q 449 1055 415 1063 q 509 1037 482 1047 l 477 941 q 431 954 456 949 q 379 960 406 960 q 332 954 352 960 q 300 931 313 947 q 280 887 287 915 q 274 815 274 859 l 274 745 l 441 745 l 441 656 m 898 656 l 731 656 l 731 0 l 608 0 l 608 656 l 476 656 l 476 704 l 608 749 l 608 814 q 623 934 608 886 q 667 1010 638 982 q 737 1051 695 1039 q 832 1063 779 1063 q 906 1055 872 1063 q 966 1037 939 1047 l 934 941 q 888 954 913 949 q 836 960 863 960 q 789 954 809 960 q 757 931 770 947 q 737 887 744 915 q 731 815 731 859 l 731 745 l 898 745 l 898 656 m 1155 0 l 1032 0 l 1032 745 l 1155 745 l 1155 0 m 1022 945 q 1043 1004 1022 986 q 1094 1023 1063 1023 q 1122 1018 1109 1023 q 1145 1004 1135 1014 q 1161 980 1155 995 q 1166 945 1166 966 q 1145 887 1166 906 q 1094 868 1124 868 q 1043 886 1063 868 q 1022 945 1022 905 "},"ż":{x_min:56,x_max:556.21875,ha:612,o:"m 556 0 l 56 0 l 56 80 l 418 656 l 78 656 l 78 745 l 544 745 l 544 650 l 189 88 l 556 88 l 556 0 m 248 945 q 268 1004 248 986 q 319 1023 289 1023 q 348 1018 334 1023 q 371 1004 361 1014 q 386 980 380 995 q 392 945 392 966 q 371 887 392 906 q 319 868 349 868 q 268 886 289 868 q 248 945 248 905 "},"Э":{x_min:40,x_max:740,ha:825,o:"m 301 894 q 186 879 237 894 q 93 841 136 863 l 40 947 q 159 991 93 976 q 299 1006 226 1006 q 491 969 409 1006 q 629 866 574 932 q 712 710 684 801 q 740 513 740 620 q 712 294 740 392 q 628 128 684 197 q 489 22 572 59 q 294 -14 405 -14 q 222 -11 255 -14 q 160 -4 189 -9 q 104 8 131 0 q 52 26 78 15 l 52 135 q 159 108 105 120 q 274 97 214 97 q 520 191 436 97 q 609 462 605 285 l 179 462 l 179 574 l 606 574 q 576 708 600 649 q 512 809 551 768 q 419 873 473 851 q 301 894 366 894 "},"ő":{x_min:77,x_max:725,ha:802,o:"m 725 373 q 702 208 725 280 q 637 86 679 135 q 534 11 594 37 q 398 -14 474 -14 q 270 11 329 -14 q 168 86 211 37 q 101 208 125 135 q 77 373 77 280 q 99 537 77 465 q 164 657 122 608 q 267 732 206 707 q 403 758 327 758 q 531 732 472 758 q 633 657 590 707 q 700 537 676 608 q 725 373 725 465 m 204 373 q 250 159 204 231 q 401 88 297 88 q 551 159 506 88 q 597 373 597 231 q 551 585 597 515 q 400 655 504 655 q 250 585 295 655 q 204 373 204 515 m 199 860 q 229 905 213 879 q 261 958 245 931 q 291 1013 277 986 q 317 1064 306 1040 l 452 1064 l 452 1049 q 419 1004 441 1031 q 372 946 398 976 q 318 889 346 917 q 267 842 291 860 l 199 842 l 199 860 m 445 860 q 475 905 459 879 q 507 958 491 931 q 537 1013 523 986 q 562 1064 552 1040 l 697 1064 l 697 1049 q 664 1004 686 1031 q 617 946 643 976 q 563 889 591 917 q 512 842 536 860 l 445 842 l 445 860 "},"Ŏ":{x_min:85,x_max:945,ha:1031,o:"m 945 496 q 917 287 945 382 q 835 126 890 193 q 701 22 781 59 q 515 -14 620 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 498 85 382 q 110 707 85 613 q 190 867 136 801 q 325 970 243 934 q 517 1007 406 1007 q 701 970 622 1007 q 835 867 781 934 q 917 706 890 800 q 945 496 945 612 m 218 497 q 236 330 218 404 q 290 204 253 255 q 382 124 326 152 q 515 97 438 97 q 648 124 593 97 q 741 204 704 152 q 794 330 777 255 q 811 497 811 404 q 794 664 811 590 q 741 789 777 738 q 649 868 705 840 q 517 895 594 895 q 383 868 439 895 q 290 789 327 840 q 236 664 253 738 q 218 497 218 590 m 720 1259 q 702 1183 717 1217 q 661 1123 687 1149 q 598 1084 635 1098 q 513 1071 561 1071 q 426 1084 463 1071 q 365 1122 389 1097 q 327 1181 340 1147 q 312 1259 314 1216 l 386 1259 q 398 1212 389 1229 q 424 1186 408 1194 q 463 1175 440 1177 q 516 1172 486 1172 q 562 1175 540 1172 q 602 1188 584 1178 q 631 1214 619 1197 q 645 1259 642 1231 l 720 1259 "},"ю":{x_min:118,x_max:1047,ha:1124,o:"m 1047 373 q 1025 208 1047 280 q 962 86 1003 135 q 864 11 922 37 q 734 -14 806 -14 q 613 8 668 -14 q 518 75 558 31 q 455 184 478 119 q 426 333 431 248 l 241 333 l 241 0 l 118 0 l 118 745 l 241 745 l 241 436 l 428 436 q 459 574 434 514 q 523 675 483 634 q 617 736 563 715 q 739 758 672 758 q 862 732 805 758 q 959 657 918 707 q 1023 537 1000 608 q 1047 373 1047 465 m 555 373 q 598 159 555 231 q 737 88 641 88 q 876 159 834 88 q 919 373 919 231 q 876 585 919 515 q 736 655 833 655 q 598 585 640 655 q 555 373 555 515 "},"İ":{x_min:55.34375,x_max:414.8125,ha:471,o:"m 414 0 l 55 0 l 55 69 l 172 96 l 172 895 l 55 922 l 55 992 l 414 992 l 414 922 l 298 895 l 298 96 l 414 69 l 414 0 m 163 1174 q 183 1233 163 1215 q 234 1252 204 1252 q 263 1247 249 1252 q 286 1233 276 1243 q 301 1209 295 1224 q 307 1174 307 1195 q 286 1116 307 1135 q 234 1097 264 1097 q 183 1115 204 1097 q 163 1174 163 1134 "},"Ě":{x_min:135,x_max:650,ha:733,o:"m 650 0 l 135 0 l 135 992 l 650 992 l 650 880 l 261 880 l 261 574 l 624 574 l 624 462 l 261 462 l 261 111 l 650 111 l 650 0 m 620 1274 q 579 1229 603 1255 q 533 1176 556 1203 q 490 1121 510 1148 q 460 1071 470 1094 l 329 1071 q 299 1121 319 1094 q 256 1176 279 1148 q 210 1229 233 1203 q 170 1274 187 1255 l 170 1293 l 252 1293 q 322 1237 286 1270 q 395 1166 358 1204 q 466 1237 430 1204 q 538 1293 503 1270 l 620 1293 l 620 1274 "},"‹":{x_min:55.5,x_max:344,ha:400,o:"m 55 375 l 264 656 l 344 603 l 183 367 l 344 130 l 264 78 l 55 356 l 55 375 "},"ķ":{x_min:118,x_max:684.25,ha:689,o:"m 233 384 l 324 500 l 522 745 l 665 745 l 394 422 l 684 0 l 542 0 l 315 341 l 241 286 l 241 0 l 118 0 l 118 1055 l 241 1055 l 241 571 l 230 384 l 233 384 m 271 -288 q 287 -246 278 -271 q 304 -191 296 -220 q 318 -135 312 -163 q 327 -85 325 -107 l 450 -85 l 450 -98 q 435 -141 445 -115 q 409 -197 424 -167 q 375 -255 394 -226 q 337 -307 357 -284 l 271 -307 l 271 -288 "},"ì":{x_min:-23,x_max:244,ha:359,o:"m 241 0 l 118 0 l 118 745 l 241 745 l 241 0 m 244 842 l 162 842 q 110 889 138 860 q 56 946 82 917 q 9 1004 30 976 q -23 1049 -12 1031 l -23 1064 l 125 1064 q 151 1013 136 1040 q 181 958 165 986 q 213 905 197 931 q 244 860 229 879 l 244 842 "},"±":{x_min:69.515625,x_max:696.203125,ha:765,o:"m 332 439 l 69 439 l 69 541 l 332 541 l 332 804 l 433 804 l 433 541 l 696 541 l 696 439 l 433 439 l 433 178 l 332 178 l 332 439 m 69 0 l 69 101 l 696 101 l 696 0 l 69 0 "},"|":{x_min:332,x_max:433.734375,ha:765,o:"m 332 1055 l 433 1055 l 433 -334 l 332 -334 l 332 1055 "},"§":{x_min:82.140625,x_max:585,ha:675,o:"m 93 550 q 101 612 93 584 q 125 661 110 640 q 159 698 139 683 q 198 723 178 713 q 121 788 149 749 q 93 883 93 826 q 111 958 93 925 q 164 1014 130 991 q 245 1050 198 1037 q 351 1063 293 1063 q 470 1048 417 1063 q 572 1011 523 1034 l 534 915 q 442 947 490 934 q 346 960 394 960 q 244 941 279 960 q 209 886 209 922 q 217 852 209 868 q 245 822 226 837 q 297 791 264 807 q 377 755 329 775 q 464 714 426 736 q 529 666 503 692 q 570 606 556 639 q 585 531 585 573 q 577 467 585 496 q 555 415 569 438 q 525 376 542 392 q 489 348 508 359 q 560 285 535 322 q 585 195 585 248 q 564 110 585 147 q 508 46 544 72 q 419 6 471 20 q 301 -7 366 -7 q 175 4 228 -7 q 82 40 122 16 l 82 151 q 129 130 103 140 q 184 112 155 120 q 243 100 213 104 q 303 95 274 95 q 382 103 351 95 q 433 124 414 111 q 460 154 452 137 q 468 190 468 171 q 462 224 468 209 q 439 254 456 239 q 389 286 421 269 q 305 323 357 302 q 215 365 254 344 q 148 412 176 386 q 107 471 121 438 q 93 550 93 505 m 209 563 q 218 517 209 538 q 248 476 228 495 q 302 437 269 456 q 383 398 335 419 l 406 388 q 428 409 417 397 q 448 437 439 421 q 462 472 457 453 q 468 514 468 491 q 459 561 468 539 q 429 603 451 583 q 372 642 408 623 q 282 682 336 662 q 256 666 268 676 q 232 640 243 655 q 215 605 222 625 q 209 563 209 586 "},"џ":{x_min:118,x_max:706,ha:825,o:"m 241 102 l 582 102 l 582 745 l 706 745 l 706 0 l 479 0 l 479 -258 l 356 -258 l 356 0 l 118 0 l 118 745 l 241 745 l 241 102 "},"љ":{x_min:11,x_max:1054,ha:1131,o:"m 611 439 l 771 439 q 985 386 916 439 q 1054 227 1054 333 q 1038 133 1054 175 q 988 61 1022 91 q 900 15 954 31 q 769 0 846 0 l 488 0 l 488 642 l 351 642 q 315 342 337 466 q 259 139 293 218 q 181 25 226 61 q 75 -10 135 -10 q 39 -8 56 -10 q 11 -2 22 -6 l 11 82 q 44 78 26 78 q 111 118 81 78 q 165 241 141 158 q 205 448 188 323 q 235 745 222 574 l 611 745 l 611 439 m 930 219 q 919 275 930 252 q 886 311 908 297 q 832 330 864 325 q 756 336 799 336 l 611 336 l 611 102 l 759 102 q 828 108 796 102 q 882 127 859 113 q 917 164 904 141 q 930 219 930 186 "},q:{x_min:77,x_max:696,ha:814,o:"m 383 88 q 470 104 434 88 q 528 151 506 119 q 560 231 550 183 q 572 342 571 279 l 572 370 q 563 492 572 439 q 532 581 554 545 q 473 636 510 618 q 382 655 437 655 q 247 581 290 655 q 204 369 204 507 q 247 157 204 227 q 383 88 290 88 m 359 -14 q 244 10 296 -14 q 154 83 192 34 q 97 203 117 131 q 77 370 77 275 q 97 538 77 466 q 154 659 117 610 q 244 733 192 708 q 359 758 296 758 q 432 748 399 758 q 490 724 464 739 q 536 688 516 709 q 572 644 556 667 l 577 644 l 596 745 l 696 745 l 696 -334 l 572 -334 l 572 -16 q 573 16 572 -3 q 576 54 575 36 q 580 99 578 76 l 572 99 q 537 55 557 76 q 491 19 517 34 q 432 -5 465 3 q 359 -14 400 -14 "},"˳":{x_min:78,x_max:385,ha:463,o:"m 385 -229 q 373 -291 385 -264 q 340 -338 361 -319 q 291 -367 319 -357 q 229 -377 262 -377 q 167 -367 195 -377 q 119 -338 139 -357 q 88 -292 99 -319 q 78 -231 78 -265 q 88 -169 78 -196 q 119 -123 99 -142 q 167 -94 139 -104 q 229 -85 195 -85 q 290 -94 262 -85 q 340 -123 319 -104 q 373 -168 361 -142 q 385 -229 385 -195 m 310 -231 q 288 -174 310 -194 q 231 -154 265 -154 q 174 -174 196 -154 q 152 -231 152 -194 q 172 -287 152 -267 q 231 -307 192 -307 q 288 -287 265 -307 q 310 -231 310 -267 "},"ή":{x_min:118,x_max:707,ha:818,o:"m 583 -334 l 583 479 q 547 611 583 567 q 436 655 512 655 q 343 637 381 655 q 283 585 306 620 q 251 501 261 551 q 241 385 241 450 l 241 0 l 118 0 l 118 745 l 218 745 l 236 644 l 242 644 q 283 694 259 673 q 334 730 306 715 q 393 751 362 744 q 457 758 424 758 q 644 693 581 758 q 707 486 707 628 l 707 -334 l 583 -334 m 388 860 q 401 906 394 880 q 414 960 408 932 q 426 1014 421 987 q 435 1064 432 1041 l 570 1064 l 570 1049 q 554 1007 565 1033 q 528 951 543 980 q 495 892 512 921 q 461 842 477 863 l 388 842 l 388 860 "},"Ж":{x_min:2.75,x_max:1129.25,ha:1132,o:"m 372 511 l 12 992 l 151 992 l 505 511 l 505 992 l 631 992 l 631 511 l 980 992 l 1119 992 l 764 511 l 1129 0 l 986 0 l 631 502 l 631 0 l 505 0 l 505 502 l 145 0 l 2 0 l 372 511 "},"®":{x_min:68,x_max:1088,ha:1156,o:"m 506 521 l 554 521 q 641 545 615 521 q 668 616 668 569 q 640 686 668 666 q 553 706 612 706 l 506 706 l 506 521 m 776 617 q 767 559 776 584 q 743 513 758 533 q 709 480 728 494 q 669 458 689 467 q 749 326 714 384 q 779 277 765 301 q 804 235 793 254 q 822 205 816 216 l 829 194 l 707 194 l 569 429 l 506 429 l 506 194 l 398 194 l 398 799 l 555 799 q 723 754 669 799 q 776 617 776 710 m 68 495 q 86 631 68 566 q 137 753 104 696 q 217 856 170 809 q 320 936 264 903 q 442 987 377 969 q 578 1006 507 1006 q 713 987 648 1006 q 835 936 778 969 q 938 856 892 903 q 1018 753 985 809 q 1069 631 1051 696 q 1088 495 1088 566 q 1069 359 1088 425 q 1018 238 1051 294 q 938 134 985 181 q 835 55 892 88 q 713 3 778 21 q 578 -14 648 -14 q 442 3 507 -14 q 320 55 377 21 q 217 134 264 88 q 137 238 170 181 q 86 359 104 294 q 68 495 68 425 m 141 496 q 176 326 141 405 q 269 187 210 247 q 408 94 329 128 q 578 59 487 59 q 747 94 668 59 q 886 187 826 128 q 979 326 945 247 q 1014 496 1014 405 q 979 665 1014 586 q 886 804 945 744 q 747 897 826 863 q 578 932 668 932 q 408 897 487 932 q 269 804 329 863 q 176 665 210 744 q 141 496 141 586 "},"Н":{x_min:135,x_max:839,ha:974,o:"m 839 0 l 712 0 l 712 462 l 261 462 l 261 0 l 135 0 l 135 992 l 261 992 l 261 574 l 712 574 l 712 992 l 839 992 l 839 0 "},"Ε":{x_min:135,x_max:650,ha:733,o:"m 650 0 l 135 0 l 135 992 l 650 992 l 650 880 l 261 880 l 261 574 l 624 574 l 624 462 l 261 462 l 261 111 l 650 111 l 650 0 "},"₧":{x_min:102,x_max:992,ha:1042,o:"m 908 82 q 931 84 918 82 q 955 87 943 85 q 977 92 966 89 q 992 97 987 95 l 992 6 q 948 -7 976 0 q 878 -14 921 -14 q 812 -2 842 -14 q 760 32 782 8 q 725 91 738 56 q 713 175 713 127 l 713 477 l 607 477 l 607 534 l 713 588 l 758 717 l 833 717 l 833 574 l 974 574 l 974 477 l 833 477 l 833 187 q 850 109 833 135 q 908 82 868 82 m 616 701 q 598 582 616 639 q 538 482 580 525 q 426 412 496 438 q 253 386 357 386 l 221 386 l 221 0 l 102 0 l 102 992 l 272 992 q 428 972 363 992 q 534 916 493 953 q 596 825 576 879 q 616 701 616 770 m 221 491 l 239 491 q 349 502 302 491 q 428 537 397 513 q 474 600 459 561 q 490 695 490 639 q 434 839 490 792 q 260 886 378 886 l 221 886 l 221 491 "},"л":{x_min:11,x_max:640,ha:758,o:"m 640 0 l 516 0 l 516 642 l 352 642 q 316 342 338 466 q 260 139 293 218 q 181 25 227 61 q 76 -10 136 -10 q 39 -8 56 -10 q 11 -2 22 -6 l 11 82 q 44 78 26 78 q 112 118 82 78 q 165 241 142 158 q 206 448 189 323 q 236 745 223 574 l 640 745 l 640 0 "},"σ":{x_min:77,x_max:784.6875,ha:817,o:"m 725 342 q 703 201 725 267 q 641 88 682 136 q 539 13 600 40 q 398 -14 478 -14 q 267 9 326 -14 q 165 80 207 33 q 100 196 123 127 q 77 355 77 265 q 103 535 77 461 q 178 656 129 609 q 296 723 226 702 q 453 745 366 745 l 784 745 l 784 642 l 604 642 q 651 583 629 614 q 689 514 673 551 q 715 435 706 477 q 725 342 725 393 m 204 356 q 215 249 204 298 q 250 164 226 200 q 312 108 274 128 q 401 88 349 88 q 490 107 453 88 q 551 159 527 125 q 586 238 575 192 q 597 337 597 284 q 570 508 597 435 q 493 642 543 581 l 453 642 q 341 627 388 642 q 264 578 294 612 q 219 490 233 545 q 204 356 204 435 "},"θ":{x_min:77,x_max:710,ha:786,o:"m 710 528 q 692 300 710 401 q 636 129 674 199 q 538 22 598 59 q 392 -14 477 -14 q 252 22 312 -14 q 154 129 193 59 q 95 300 114 199 q 77 528 77 401 q 94 757 77 656 q 149 927 111 857 q 246 1034 186 997 q 392 1071 306 1071 q 531 1034 472 1071 q 631 928 591 998 q 690 758 670 859 q 710 528 710 657 m 392 88 q 477 113 442 88 q 537 189 513 138 q 572 315 560 239 q 586 493 584 391 l 200 493 q 213 317 201 393 q 247 190 224 241 q 306 113 270 139 q 392 88 341 88 m 392 968 q 309 945 343 968 q 251 875 274 921 q 215 758 227 828 q 200 596 203 689 l 585 596 q 533 875 579 781 q 392 968 488 968 "}," ":{x_min:0,x_max:0,ha:361},"∑":{x_min:50,x_max:848,ha:876,o:"m 50 -334 l 50 -255 l 473 364 l 60 914 l 60 992 l 804 992 l 804 880 l 237 880 l 606 365 l 222 -222 l 848 -222 l 848 -334 l 50 -334 "},"Ώ":{x_min:-17,x_max:1041.9375,ha:1092,o:"m 578 895 q 445 872 500 895 q 353 805 389 849 q 300 699 317 762 q 283 556 283 636 q 295 425 283 488 q 334 304 307 362 q 406 194 362 246 q 516 99 451 143 l 516 0 l 114 0 l 114 111 l 382 111 q 290 189 332 143 q 216 292 247 235 q 167 416 185 349 q 150 559 150 484 q 177 743 150 661 q 259 884 204 826 q 393 975 313 943 q 578 1007 473 1007 q 762 975 683 1007 q 896 884 842 943 q 978 743 951 826 q 1006 559 1006 661 q 988 416 1006 484 q 939 292 970 349 q 866 189 908 235 q 773 111 823 143 l 1041 111 l 1041 0 l 640 0 l 640 99 q 749 194 704 143 q 821 304 793 246 q 860 425 848 362 q 872 556 872 488 q 855 699 872 636 q 802 805 838 762 q 710 872 766 849 q 578 895 655 895 m -17 789 q -3 835 -10 809 q 9 889 3 861 q 21 943 16 916 q 30 993 27 970 l 165 993 l 165 978 q 149 936 160 962 q 123 880 138 909 q 90 821 107 850 q 56 771 72 792 l -17 771 l -17 789 "},"ẃ":{x_min:13.75,x_max:1022.25,ha:1036,o:"m 683 0 l 570 417 q 563 445 567 430 q 555 477 559 460 q 546 512 551 494 q 538 546 542 529 q 518 628 528 586 l 514 628 q 496 546 505 585 q 480 476 488 512 q 464 415 471 440 l 347 0 l 204 0 l 13 745 l 143 745 l 232 348 q 245 282 239 318 q 258 211 252 246 q 269 146 264 177 q 277 95 274 115 l 281 95 q 290 142 284 113 q 303 205 296 172 q 317 270 310 238 q 331 324 325 302 l 453 745 l 586 745 l 702 324 q 716 270 709 301 q 732 207 724 239 q 745 145 739 175 q 754 95 751 115 l 758 95 q 764 142 760 113 q 775 207 769 172 q 788 279 781 242 q 803 348 795 316 l 896 745 l 1022 745 l 829 0 l 683 0 m 456 860 q 486 905 470 879 q 518 958 502 931 q 549 1013 534 986 q 574 1064 563 1040 l 723 1064 l 723 1049 q 690 1004 712 1031 q 643 946 669 976 q 589 889 617 917 q 538 842 561 860 l 456 842 l 456 860 "},"+":{x_min:69.515625,x_max:696.203125,ha:765,o:"m 332 439 l 69 439 l 69 541 l 332 541 l 332 804 l 433 804 l 433 541 l 696 541 l 696 439 l 433 439 l 433 178 l 332 178 l 332 439 "},"Ë":{x_min:135,x_max:650,ha:733,o:"m 650 0 l 135 0 l 135 992 l 650 992 l 650 880 l 261 880 l 261 574 l 624 574 l 624 462 l 261 462 l 261 111 l 650 111 l 650 0 m 201 1174 q 219 1227 201 1211 q 266 1244 238 1244 q 312 1227 292 1244 q 331 1174 331 1210 q 312 1121 331 1138 q 266 1105 292 1105 q 219 1121 238 1105 q 201 1174 201 1138 m 455 1174 q 474 1227 455 1211 q 520 1244 493 1244 q 545 1239 533 1244 q 566 1227 557 1235 q 580 1206 575 1218 q 586 1174 586 1193 q 566 1121 586 1138 q 520 1105 546 1105 q 474 1121 493 1105 q 455 1174 455 1138 "},"Š":{x_min:70.109375,x_max:657,ha:721,o:"m 657 264 q 633 147 657 199 q 566 59 610 95 q 460 4 523 23 q 320 -14 398 -14 q 179 -2 245 -14 q 70 32 114 9 l 70 153 q 122 131 93 142 q 184 112 151 120 q 251 99 216 104 q 319 93 285 93 q 479 134 427 93 q 530 252 530 176 q 521 316 530 289 q 486 366 511 343 q 420 410 461 389 q 316 456 379 431 q 212 508 256 480 q 139 572 168 537 q 96 652 110 607 q 83 754 83 697 q 104 860 83 813 q 165 939 126 907 q 259 989 205 972 q 380 1006 314 1006 q 525 990 460 1006 q 640 951 589 975 l 595 845 q 495 880 551 865 q 381 894 440 894 q 254 856 299 894 q 209 752 209 818 q 219 686 209 714 q 252 635 229 657 q 315 592 276 612 q 410 549 353 572 q 517 499 471 525 q 594 441 563 473 q 641 366 625 408 q 657 264 657 323 m 607 1274 q 566 1229 590 1255 q 520 1176 543 1203 q 477 1121 497 1148 q 447 1071 457 1094 l 316 1071 q 286 1121 306 1094 q 243 1176 266 1148 q 197 1229 220 1203 q 157 1274 174 1255 l 157 1293 l 239 1293 q 309 1237 273 1270 q 382 1166 345 1204 q 453 1237 417 1204 q 525 1293 490 1270 l 607 1293 l 607 1274 "}," ":{x_min:0,x_max:0,ha:1389},"ð":{x_min:75,x_max:725,ha:802,o:"m 725 388 q 702 217 725 291 q 637 91 679 142 q 534 12 594 39 q 398 -14 473 -14 q 268 8 328 -14 q 166 73 209 30 q 99 179 123 116 q 75 323 75 242 q 96 466 75 403 q 157 571 117 528 q 254 635 197 613 q 383 658 311 658 q 504 637 452 658 q 585 577 556 617 l 591 580 q 529 725 570 660 q 427 845 488 790 l 254 742 l 204 819 l 350 907 q 294 945 323 926 q 234 981 265 964 l 281 1065 q 367 1018 325 1043 q 448 964 408 994 l 602 1058 l 653 981 l 520 902 q 603 805 566 858 q 668 689 641 752 q 710 550 695 625 q 725 388 725 475 m 597 355 q 585 429 597 393 q 550 493 574 466 q 488 538 526 521 q 400 555 451 555 q 310 540 347 555 q 248 494 272 524 q 213 420 225 464 q 202 318 202 376 q 213 224 202 267 q 249 152 225 182 q 310 104 273 121 q 400 88 348 88 q 551 155 505 88 q 597 355 597 223 "},"щ":{x_min:118,x_max:1197,ha:1218,o:"m 1197 -258 l 1073 -258 l 1073 0 l 118 0 l 118 745 l 241 745 l 241 102 l 542 102 l 542 745 l 665 745 l 665 102 l 965 102 l 965 745 l 1089 745 l 1089 102 l 1197 102 l 1197 -258 "},"℮":{x_min:69,x_max:789,ha:860,o:"m 429 -24 q 273 7 341 -24 q 161 92 206 39 q 92 215 115 146 q 69 359 69 284 q 83 480 69 426 q 124 577 98 534 q 185 651 150 620 q 259 702 219 682 q 343 733 299 723 q 429 743 386 743 q 571 716 506 743 q 685 639 637 689 q 761 518 734 589 q 789 359 789 448 l 213 359 l 213 117 q 251 86 228 100 q 300 59 273 71 q 357 40 327 47 q 420 33 388 33 q 512 44 472 33 q 585 75 553 55 q 645 125 618 96 q 696 193 672 155 l 746 165 q 693 92 721 126 q 628 31 665 58 q 542 -9 590 5 q 429 -24 493 -24 m 644 417 l 644 604 q 609 632 630 618 q 560 658 588 646 q 498 677 532 670 q 426 685 465 685 q 358 678 389 685 q 300 661 327 672 q 252 635 274 650 q 213 606 230 621 l 213 417 l 644 417 "},"Φ":{x_min:71,x_max:994,ha:1065,o:"m 468 1006 l 594 1006 l 594 884 l 643 884 q 801 852 735 884 q 910 768 867 820 q 973 649 953 716 q 994 514 994 583 q 985 429 994 472 q 959 343 977 385 q 913 264 942 301 q 844 199 885 227 q 749 155 803 171 q 626 139 694 139 l 594 139 l 594 -14 l 468 -14 l 468 139 l 436 139 q 314 155 368 139 q 220 199 260 171 q 151 264 179 227 q 105 343 122 301 q 79 429 87 385 q 71 514 71 472 q 91 649 71 583 q 154 768 112 716 q 262 852 197 820 q 418 884 328 884 l 468 884 l 468 1006 m 594 246 l 611 246 q 721 266 674 246 q 798 322 768 286 q 844 408 829 358 q 860 517 860 458 q 846 617 860 570 q 804 700 832 665 q 734 755 776 735 q 632 776 691 776 l 594 776 l 594 246 m 468 776 l 429 776 q 329 755 371 776 q 259 700 287 735 q 217 617 231 665 q 204 517 204 570 q 219 408 204 458 q 265 322 235 358 q 342 266 295 286 q 450 246 388 246 l 468 246 l 468 776 "},"ş":{x_min:61.15625,x_max:564,ha:627,o:"m 564 203 q 544 108 564 149 q 487 40 524 68 q 398 0 450 13 q 281 -14 346 -14 q 154 -2 207 -14 q 61 33 101 9 l 61 146 q 107 125 82 135 q 161 106 133 114 q 219 93 189 98 q 279 88 249 88 q 353 95 323 88 q 403 116 384 103 q 431 150 423 130 q 440 194 440 170 q 433 232 440 215 q 409 265 427 249 q 360 299 391 282 q 280 337 329 316 q 193 378 232 358 q 127 424 154 399 q 86 482 100 449 q 72 560 72 515 q 90 645 72 608 q 143 707 109 682 q 224 745 177 732 q 330 758 272 758 q 451 743 396 758 q 554 706 505 729 l 512 606 q 422 641 468 626 q 329 655 376 655 q 228 632 261 655 q 195 568 195 610 q 203 526 195 544 q 229 493 210 509 q 279 461 248 477 q 358 426 311 445 q 444 385 406 405 q 509 339 482 365 q 549 281 535 314 q 564 203 564 249 m 440 -194 q 392 -297 440 -260 q 242 -334 344 -334 q 212 -331 227 -334 q 187 -327 197 -329 l 187 -254 q 213 -257 197 -256 q 240 -258 230 -258 q 315 -247 288 -258 q 342 -208 342 -235 q 333 -186 342 -195 q 309 -169 324 -176 q 272 -157 294 -162 q 227 -147 251 -152 l 288 0 l 370 0 l 331 -78 q 374 -92 354 -83 q 408 -115 393 -101 q 431 -148 423 -128 q 440 -194 440 -168 "}," ":{x_min:0,x_max:0,ha:765},"ı":{x_min:118,x_max:241.4375,ha:359,o:"m 241 0 l 118 0 l 118 745 l 241 745 l 241 0 "},"ä":{x_min:64,x_max:626,ha:737,o:"m 536 0 l 511 102 l 505 102 q 461 50 483 72 q 412 13 439 28 q 353 -7 386 0 q 278 -14 321 -14 q 193 0 232 -14 q 125 40 153 12 q 80 109 96 67 q 64 208 64 151 q 142 379 64 320 q 379 445 220 439 l 503 450 l 503 496 q 494 572 503 541 q 465 620 484 602 q 419 647 447 639 q 357 655 392 655 q 253 639 301 655 q 160 599 204 623 l 117 692 q 228 739 167 720 q 357 758 290 758 q 477 744 427 758 q 560 700 527 730 q 609 623 593 669 q 626 509 626 576 l 626 0 l 536 0 m 310 88 q 386 101 351 88 q 447 140 422 114 q 488 205 473 166 q 502 298 502 245 l 502 365 l 405 360 q 303 346 345 357 q 237 316 262 336 q 202 270 213 297 q 191 208 191 243 q 224 117 191 146 q 310 88 257 88 m 185 945 q 203 998 185 982 q 250 1015 222 1015 q 296 998 276 1015 q 315 945 315 981 q 296 892 315 909 q 250 876 276 876 q 203 892 222 876 q 185 945 185 909 m 439 945 q 458 998 439 982 q 504 1015 477 1015 q 529 1010 517 1015 q 550 998 541 1006 q 564 977 559 989 q 570 945 570 964 q 550 892 570 909 q 504 876 530 876 q 458 892 477 876 q 439 945 439 909 "},"¹":{x_min:42,x_max:297.984375,ha:460,o:"m 207 992 l 297 992 l 297 397 l 201 397 l 201 754 q 201 792 201 771 q 202 833 201 813 q 204 873 203 854 q 206 908 205 893 q 184 881 196 895 q 156 853 171 866 l 92 799 l 42 864 l 207 992 "},W:{x_min:13.75,x_max:1214.25,ha:1228,o:"m 549 992 l 682 992 l 837 411 q 857 335 847 373 q 876 261 867 297 q 891 194 884 225 q 901 136 897 162 q 908 192 904 162 q 917 256 912 223 q 929 325 923 290 q 943 393 936 360 l 1079 992 l 1214 992 l 965 0 l 837 0 l 665 636 q 647 707 656 671 q 631 776 638 744 q 615 848 622 813 q 600 776 608 814 q 585 707 593 745 q 567 632 576 669 l 402 0 l 275 0 l 13 992 l 147 992 l 298 388 q 313 323 306 357 q 325 257 320 290 q 336 192 331 223 q 344 136 341 162 q 352 194 347 161 q 364 264 358 227 q 379 338 371 301 q 396 409 387 376 l 549 992 "},"λ":{x_min:-10.25,x_max:710,ha:710,o:"m -10 0 l 288 729 l 252 837 q 233 887 243 864 q 208 926 222 910 q 172 952 193 943 q 122 961 152 961 q 82 959 99 961 q 52 953 65 956 l 52 1052 q 92 1060 69 1057 q 138 1064 114 1064 q 224 1049 188 1064 q 286 1005 260 1035 q 335 929 313 975 q 377 820 356 883 l 600 163 q 627 107 612 127 q 669 88 643 88 q 691 90 678 88 q 710 95 704 93 l 710 3 q 675 -9 694 -4 q 632 -14 657 -14 q 585 -8 605 -14 q 549 11 565 -2 q 521 46 533 24 q 498 99 508 68 l 406 382 q 389 437 399 405 q 370 502 379 469 q 353 564 361 534 q 343 610 346 594 l 338 610 q 312 501 330 558 q 272 389 294 443 l 117 0 l -10 0 "},">":{x_min:69,x_max:696,ha:765,o:"m 69 270 l 568 488 l 69 735 l 69 844 l 696 517 l 696 448 l 69 161 l 69 270 "},"τ":{x_min:13,x_max:590.296875,ha:624,o:"m 590 745 l 590 642 l 337 642 l 337 230 q 345 162 337 190 q 369 117 354 134 q 406 92 385 100 q 451 84 427 84 q 478 85 463 84 q 506 88 492 86 q 531 92 519 90 q 553 97 544 95 l 553 5 q 530 -2 544 1 q 502 -10 517 -6 q 468 -15 486 -13 q 432 -18 450 -18 q 349 -8 388 -18 q 279 27 309 1 q 231 99 249 54 q 214 216 214 145 l 214 642 l 13 642 l 13 691 l 103 745 l 590 745 "},"Ų":{x_min:125,x_max:845,ha:970,o:"m 845 993 l 845 349 q 822 205 845 272 q 755 90 800 139 q 641 13 709 41 q 481 -14 573 -14 q 327 12 394 -14 q 216 86 261 38 q 148 202 171 134 q 125 352 125 269 l 125 991 l 251 991 l 251 346 q 309 162 251 227 q 487 97 368 97 q 591 115 548 97 q 663 167 635 133 q 704 246 690 200 q 718 347 718 292 l 718 993 l 845 993 m 483 -161 q 501 -206 483 -191 q 543 -220 519 -220 q 576 -218 560 -220 q 602 -214 592 -217 l 602 -291 q 562 -299 584 -296 q 521 -302 541 -302 q 419 -266 453 -302 q 386 -170 386 -231 q 395 -116 386 -142 q 421 -69 405 -91 q 454 -30 436 -48 q 490 0 473 -12 l 577 0 q 483 -161 483 -90 "
},"Ŵ":{x_min:13.75,x_max:1214.25,ha:1228,o:"m 549 992 l 682 992 l 837 411 q 857 335 847 373 q 876 261 867 297 q 891 194 884 225 q 901 136 897 162 q 908 192 904 162 q 917 256 912 223 q 929 325 923 290 q 943 393 936 360 l 1079 992 l 1214 992 l 965 0 l 837 0 l 665 636 q 647 707 656 671 q 631 776 638 744 q 615 848 622 813 q 600 776 608 814 q 585 707 593 745 q 567 632 576 669 l 402 0 l 275 0 l 13 992 l 147 992 l 298 388 q 313 323 306 357 q 325 257 320 290 q 336 192 331 223 q 344 136 341 162 q 352 194 347 161 q 364 264 358 227 q 379 338 371 301 q 396 409 387 376 l 549 992 m 839 1071 l 757 1071 q 685 1126 722 1093 q 614 1196 649 1159 q 541 1126 577 1159 q 471 1071 505 1093 l 389 1071 l 389 1089 q 429 1134 406 1108 q 475 1187 452 1160 q 518 1242 498 1215 q 548 1293 538 1269 l 679 1293 q 709 1242 689 1269 q 752 1187 729 1215 q 798 1134 775 1160 q 839 1089 822 1108 l 839 1071 "},"‛":{x_min:17,x_max:229,ha:243,o:"m 150 992 q 165 913 156 956 q 184 827 174 871 q 205 737 194 782 q 229 652 217 692 l 136 652 q 101 731 119 690 q 68 815 83 772 q 39 898 52 857 q 17 977 26 939 l 25 992 l 150 992 "},"Ð":{x_min:32,x_max:865,ha:950,o:"m 32 546 l 135 546 l 135 992 l 410 992 q 598 960 514 992 q 741 868 682 929 q 832 715 800 806 q 865 505 865 624 q 832 285 865 379 q 738 127 799 190 q 586 31 676 63 q 383 0 496 0 l 135 0 l 135 434 l 32 434 l 32 546 m 731 501 q 709 672 731 600 q 643 791 686 744 q 538 861 601 838 q 397 884 476 884 l 261 884 l 261 546 l 489 546 l 489 434 l 261 434 l 261 107 l 370 107 q 640 207 549 107 q 731 501 731 306 "},"Λ":{x_min:-.25,x_max:789.25,ha:789,o:"m 789 0 l 654 0 l 455 625 q 419 748 434 691 q 393 856 403 805 q 367 748 381 805 q 333 629 353 691 l 133 0 l 0 0 l 330 992 l 457 992 l 789 0 "},"·":{x_min:100,x_max:272,ha:372,o:"m 100 490 q 106 534 100 516 q 125 563 113 552 q 152 579 136 574 q 186 585 167 585 q 219 579 203 585 q 246 563 235 574 q 265 534 258 552 q 272 490 272 516 q 265 447 272 465 q 246 418 258 430 q 219 401 235 406 q 186 396 203 396 q 152 401 167 396 q 125 418 136 406 q 106 447 113 430 q 100 490 100 465 "},"Х":{x_min:-.25,x_max:760.25,ha:760,o:"m 760 0 l 617 0 l 376 430 l 127 0 l 0 0 l 307 518 l 20 992 l 155 992 l 380 612 l 608 992 l 737 992 l 450 522 l 760 0 "},"Υ":{x_min:-.25,x_max:731.25,ha:732,o:"m 364 490 l 595 992 l 731 992 l 428 386 l 428 0 l 302 0 l 302 379 l 0 992 l 137 992 l 364 490 "},r:{x_min:118,x_max:526,ha:554,o:"m 439 758 q 483 756 459 758 q 526 751 508 754 l 509 637 q 470 643 490 640 q 433 645 450 645 q 355 628 390 645 q 294 578 320 610 q 255 501 269 546 q 241 401 241 456 l 241 0 l 118 0 l 118 745 l 218 745 l 233 608 l 238 608 q 274 664 255 637 q 318 712 294 691 q 372 745 342 732 q 439 758 402 758 "},"ж":{x_min:2.75,x_max:997.25,ha:1e3,o:"m 444 383 l 444 745 l 560 745 l 560 383 l 837 745 l 971 745 l 688 383 l 997 0 l 857 0 l 560 377 l 560 0 l 444 0 l 444 377 l 143 0 l 2 0 l 316 383 l 29 745 l 162 745 l 444 383 "},"Ø":{x_min:85,x_max:945,ha:1031,o:"m 881 985 l 819 884 q 913 719 881 817 q 945 496 945 620 q 917 287 945 382 q 835 126 890 193 q 701 22 781 59 q 515 -14 620 -14 q 297 34 387 -14 l 244 -51 l 151 0 l 212 99 q 115 268 146 167 q 85 498 85 369 q 110 707 85 613 q 190 867 136 801 q 325 970 243 934 q 517 1007 406 1007 q 635 992 580 1007 q 734 952 689 978 l 789 1038 l 881 985 m 218 497 q 234 337 218 408 q 282 213 249 266 l 675 854 q 603 884 642 874 q 517 895 565 895 q 383 868 439 895 q 290 789 327 840 q 236 664 253 738 q 218 497 218 590 m 811 497 q 751 773 811 671 l 359 136 q 430 107 391 117 q 515 97 468 97 q 648 124 593 97 q 741 204 704 152 q 794 330 777 255 q 811 497 811 404 "},"Ỳ":{x_min:-.25,x_max:731.25,ha:732,o:"m 364 490 l 595 992 l 731 992 l 428 386 l 428 0 l 302 0 l 302 379 l 0 992 l 137 992 l 364 490 m 437 1071 l 355 1071 q 303 1118 331 1089 q 249 1175 275 1146 q 202 1233 223 1205 q 170 1278 180 1260 l 170 1293 l 318 1293 q 344 1242 329 1269 q 374 1187 358 1215 q 406 1134 390 1160 q 437 1089 422 1108 l 437 1071 "},"÷":{x_min:69.65625,x_max:696.34375,ha:765,o:"m 69 439 l 69 541 l 696 541 l 696 439 l 69 439 m 305 219 q 309 243 305 234 q 319 259 313 253 q 335 268 326 265 q 355 270 344 270 q 375 268 365 270 q 391 259 384 265 q 402 243 398 253 q 406 219 406 234 q 402 196 406 206 q 391 181 398 187 q 375 171 384 174 q 355 169 365 169 q 335 171 344 169 q 319 181 326 174 q 309 196 313 187 q 305 219 305 206 m 305 761 q 309 784 305 775 q 319 800 313 794 q 335 809 326 806 q 355 812 344 812 q 375 809 365 812 q 391 800 384 806 q 402 784 398 794 q 406 761 406 775 q 402 738 406 747 q 391 722 398 728 q 375 713 384 715 q 355 710 365 710 q 335 713 344 710 q 319 722 326 715 q 309 738 313 728 q 305 761 305 747 "},"с":{x_min:77,x_max:596,ha:643,o:"m 402 -14 q 274 7 334 -14 q 171 75 215 28 q 102 193 127 121 q 77 367 77 266 q 102 548 77 474 q 173 669 128 623 q 278 736 218 715 q 408 758 339 758 q 511 746 461 758 q 596 718 562 735 l 559 614 q 524 627 543 621 q 485 638 505 633 q 445 647 465 644 q 408 650 425 650 q 253 581 302 650 q 204 369 204 513 q 253 160 204 226 q 402 93 302 93 q 502 106 457 93 q 583 135 546 118 l 583 26 q 504 -3 546 6 q 402 -14 463 -14 "},h:{x_min:118,x_max:707,ha:818,o:"m 583 0 l 583 479 q 547 611 583 567 q 436 655 512 655 q 343 637 381 655 q 283 585 306 620 q 251 501 261 551 q 241 385 241 450 l 241 0 l 118 0 l 118 1055 l 241 1055 l 241 741 l 236 644 l 242 644 q 283 694 259 673 q 334 730 306 715 q 393 751 362 744 q 457 758 424 758 q 644 693 581 758 q 707 486 707 628 l 707 0 l 583 0 "},f:{x_min:19,x_max:509,ha:457,o:"m 441 656 l 274 656 l 274 0 l 151 0 l 151 656 l 19 656 l 19 704 l 151 749 l 151 814 q 166 934 151 886 q 210 1010 181 982 q 280 1051 238 1039 q 375 1063 322 1063 q 449 1055 415 1063 q 509 1037 482 1047 l 477 941 q 431 954 456 949 q 379 960 406 960 q 332 954 352 960 q 300 931 313 947 q 280 887 287 915 q 274 815 274 859 l 274 745 l 441 745 l 441 656 "},"“":{x_min:16,x_max:489,ha:504,o:"m 285 652 l 277 666 q 299 744 286 703 q 328 828 312 786 q 361 912 343 870 q 396 992 379 954 l 489 992 q 465 905 477 950 q 444 816 454 861 q 425 730 434 772 q 410 652 416 687 l 285 652 m 24 652 l 16 666 q 38 744 25 703 q 67 828 51 786 q 100 912 82 870 q 135 992 118 954 l 228 992 q 204 905 216 950 q 183 816 193 861 q 164 730 173 772 q 149 652 155 687 l 24 652 "},A:{x_min:-.25,x_max:844.25,ha:844,o:"m 715 0 l 606 307 l 237 307 l 127 0 l 0 0 l 364 996 l 479 996 l 844 0 l 715 0 m 566 419 l 466 706 q 456 736 462 719 q 444 774 450 754 q 432 817 438 795 q 421 860 426 839 q 410 816 416 839 q 397 773 404 794 q 386 735 391 752 q 376 706 380 718 l 277 419 l 566 419 "},O:{x_min:85,x_max:945,ha:1031,o:"m 945 496 q 917 287 945 382 q 835 126 890 193 q 701 22 781 59 q 515 -14 620 -14 q 324 22 405 -14 q 189 126 243 59 q 110 288 136 193 q 85 498 85 382 q 110 707 85 613 q 190 867 136 801 q 325 970 243 934 q 517 1007 406 1007 q 701 970 622 1007 q 835 867 781 934 q 917 706 890 800 q 945 496 945 612 m 218 497 q 236 330 218 404 q 290 204 253 255 q 382 124 326 152 q 515 97 438 97 q 648 124 593 97 q 741 204 704 152 q 794 330 777 255 q 811 497 811 404 q 794 664 811 590 q 741 789 777 738 q 649 868 705 840 q 517 895 594 895 q 383 868 439 895 q 290 789 327 840 q 236 664 253 738 q 218 497 218 590 "},"Đ":{x_min:32,x_max:865,ha:950,o:"m 32 546 l 135 546 l 135 992 l 410 992 q 598 960 514 992 q 741 868 682 929 q 832 715 800 806 q 865 505 865 624 q 832 285 865 379 q 738 127 799 190 q 586 31 676 63 q 383 0 496 0 l 135 0 l 135 434 l 32 434 l 32 546 m 731 501 q 709 672 731 600 q 643 791 686 744 q 538 861 601 838 q 397 884 476 884 l 261 884 l 261 546 l 489 546 l 489 434 l 261 434 l 261 107 l 370 107 q 640 207 549 107 q 731 501 731 306 "},3:{x_min:56,x_max:682,ha:765,o:"m 651 759 q 635 668 651 709 q 591 598 619 628 q 524 548 563 568 q 436 521 484 529 l 436 517 q 619 441 556 502 q 682 281 682 379 q 659 162 682 216 q 593 68 637 108 q 480 7 548 29 q 318 -14 411 -14 q 178 -2 244 -14 q 56 39 113 9 l 56 154 q 184 107 115 124 q 316 91 252 91 q 424 104 378 91 q 499 142 469 118 q 542 204 528 167 q 556 285 556 240 q 538 363 556 331 q 487 417 520 396 q 405 448 453 438 q 297 458 357 458 l 207 458 l 207 564 l 297 564 q 395 577 352 564 q 466 616 437 591 q 510 675 495 641 q 525 751 525 710 q 513 814 525 786 q 478 861 501 842 q 425 890 456 880 q 355 900 393 900 q 227 878 283 900 q 122 819 172 855 l 60 904 q 117 943 85 925 q 185 975 148 961 q 265 997 223 989 q 355 1006 307 1006 q 483 987 428 1006 q 575 936 538 969 q 632 858 613 903 q 651 759 651 812 "},"Ǿ":{x_min:85,x_max:945,ha:1031,o:"m 881 985 l 819 884 q 913 719 881 817 q 945 496 945 620 q 917 287 945 382 q 835 126 890 193 q 701 22 781 59 q 515 -14 620 -14 q 297 34 387 -14 l 244 -51 l 151 0 l 212 99 q 115 268 146 167 q 85 498 85 369 q 110 707 85 613 q 190 867 136 801 q 325 970 243 934 q 517 1007 406 1007 q 635 992 580 1007 q 734 952 689 978 l 789 1038 l 881 985 m 218 497 q 234 337 218 408 q 282 213 249 266 l 675 854 q 603 884 642 874 q 517 895 565 895 q 383 868 439 895 q 290 789 327 840 q 236 664 253 738 q 218 497 218 590 m 811 497 q 751 773 811 671 l 359 136 q 430 107 391 117 q 515 97 468 97 q 648 124 593 97 q 741 204 704 152 q 794 330 777 255 q 811 497 811 404 m 441 1089 q 471 1134 455 1108 q 503 1187 487 1160 q 534 1242 519 1215 q 559 1293 548 1269 l 708 1293 l 708 1278 q 675 1233 697 1260 q 628 1175 654 1205 q 574 1118 602 1146 q 523 1071 546 1089 l 441 1071 l 441 1089 "},"⅛":{x_min:56,x_max:1011,ha:1051,o:"m 221 992 l 311 992 l 311 397 l 215 397 l 215 754 q 215 792 215 771 q 216 833 215 813 q 218 873 217 854 q 220 908 219 893 q 198 881 210 895 q 170 853 185 866 l 106 799 l 56 864 l 221 992 m 829 992 l 278 0 l 171 0 l 722 992 l 829 992 m 815 604 q 883 594 851 604 q 938 567 914 585 q 976 519 962 548 q 991 453 991 491 q 983 407 991 428 q 962 369 976 386 q 931 338 949 352 q 893 313 914 325 q 938 285 917 300 q 975 251 959 270 q 1001 209 991 233 q 1011 157 1011 186 q 996 87 1011 119 q 956 33 982 56 q 894 0 930 11 q 816 -13 858 -13 q 670 31 721 -13 q 620 153 620 75 q 628 205 620 182 q 651 247 636 228 q 684 281 665 266 q 724 307 703 295 q 690 335 705 321 q 662 368 674 350 q 644 407 650 386 q 638 453 638 428 q 652 519 638 491 q 691 566 667 547 q 748 594 716 585 q 815 604 780 604 m 716 155 q 741 93 716 116 q 814 70 766 70 q 888 93 863 70 q 914 155 914 116 q 906 190 914 174 q 885 219 899 206 q 854 242 872 232 q 813 262 835 253 l 802 266 q 738 219 760 244 q 716 155 716 193 m 813 520 q 755 502 776 520 q 734 449 734 484 q 741 417 734 431 q 757 392 747 404 q 783 371 768 380 q 815 353 798 361 q 846 370 831 360 q 871 390 860 379 q 887 416 881 402 q 894 449 894 430 q 872 502 894 484 q 813 520 850 520 "},4:{x_min:16,x_max:738,ha:765,o:"m 738 222 l 593 222 l 593 0 l 474 0 l 474 222 l 16 222 l 16 329 l 465 997 l 593 997 l 593 334 l 738 334 l 738 222 m 474 334 l 474 576 q 475 656 474 614 q 477 737 476 697 q 480 811 478 777 q 482 869 482 846 l 476 869 q 464 839 471 855 q 449 806 457 822 q 431 773 440 789 q 415 747 423 758 l 136 334 l 474 334 "},"Ẁ":{x_min:13.75,x_max:1214.25,ha:1228,o:"m 549 992 l 682 992 l 837 411 q 857 335 847 373 q 876 261 867 297 q 891 194 884 225 q 901 136 897 162 q 908 192 904 162 q 917 256 912 223 q 929 325 923 290 q 943 393 936 360 l 1079 992 l 1214 992 l 965 0 l 837 0 l 665 636 q 647 707 656 671 q 631 776 638 744 q 615 848 622 813 q 600 776 608 814 q 585 707 593 745 q 567 632 576 669 l 402 0 l 275 0 l 13 992 l 147 992 l 298 388 q 313 323 306 357 q 325 257 320 290 q 336 192 331 223 q 344 136 341 162 q 352 194 347 161 q 364 264 358 227 q 379 338 371 301 q 396 409 387 376 l 549 992 m 691 1071 l 609 1071 q 557 1118 585 1089 q 503 1175 529 1146 q 456 1233 477 1205 q 424 1278 434 1260 l 424 1293 l 572 1293 q 598 1242 583 1269 q 628 1187 612 1215 q 660 1134 644 1160 q 691 1089 676 1108 l 691 1071 "},"Ť":{x_min:14,x_max:706,ha:721,o:"m 423 0 l 297 0 l 297 880 l 14 880 l 14 992 l 706 992 l 706 880 l 423 880 l 423 0 m 587 1274 q 546 1229 570 1255 q 500 1176 523 1203 q 457 1121 477 1148 q 427 1071 437 1094 l 296 1071 q 266 1121 286 1094 q 223 1176 246 1148 q 177 1229 200 1203 q 137 1274 154 1255 l 137 1293 l 219 1293 q 289 1237 253 1270 q 362 1166 325 1204 q 433 1237 397 1204 q 505 1293 470 1270 l 587 1293 l 587 1274 "},"ψ":{x_min:111,x_max:945,ha:1028,o:"m 582 1054 l 582 91 q 678 118 634 97 q 754 175 722 138 q 804 264 786 211 q 821 386 821 317 q 818 478 821 434 q 811 564 816 521 q 797 651 805 606 q 778 745 789 695 l 901 745 q 920 651 912 696 q 934 564 928 607 q 942 479 939 521 q 945 390 945 436 q 915 209 945 283 q 837 87 886 134 q 721 16 787 39 q 582 -12 655 -7 l 582 -334 l 459 -334 l 459 -12 q 319 12 383 -9 q 209 80 255 34 q 136 199 162 127 q 111 376 111 272 l 111 745 l 234 745 l 234 372 q 252 242 234 294 q 301 157 271 190 q 373 109 332 124 q 459 90 414 93 l 459 1054 l 582 1054 "},"ŗ":{x_min:65,x_max:526,ha:554,o:"m 439 758 q 483 756 459 758 q 526 751 508 754 l 509 637 q 470 643 490 640 q 433 645 450 645 q 355 628 390 645 q 294 578 320 610 q 255 501 269 546 q 241 401 241 456 l 241 0 l 118 0 l 118 745 l 218 745 l 233 608 l 238 608 q 274 664 255 637 q 318 712 294 691 q 372 745 342 732 q 439 758 402 758 m 65 -288 q 81 -246 72 -271 q 98 -191 90 -220 q 112 -135 106 -163 q 121 -85 119 -107 l 244 -85 l 244 -98 q 229 -141 239 -115 q 203 -197 218 -167 q 169 -255 188 -226 q 131 -307 151 -284 l 65 -307 l 65 -288 "}},cssFontWeight:"normal",ascender:1290,underlinePosition:-154,cssFontStyle:"normal",boundingBox:{yMin:-377,xMin:-239.25,yMax:1363,xMax:1555},resolution:1e3,original_font_information:{postscript_name:"DroidSans",version_string:"Version 1.00 build 107",vendor_url:"http://www.ascendercorp.com/",full_font_name:"Droid Sans",font_family_name:"Droid Sans",copyright:"Digitized data copyright © 2006, Google Corporation.",description:"Droid Sans is a humanist sans serif typeface designed for user interfaces and electronic communication.",trademark:"Droid is a trademark of Google and may be registered in certain jurisdictions.",designer:"",designer_url:"http://www.ascendercorp.com/typedesigners.html",unique_font_identifier:"Ascender - Droid Sans",license_url:"http://ascendercorp.com/eula10.html",license_description:"This font software is the valuable property of Ascender Corporation and/or its suppliers and its use by you is covered under the terms of a license agreement. This font software is licensed to you by Ascender Corporation for your personal or business use on up to five personal computers. You may not use this font software on more than five personal computers unless you have obtained a license from Ascender to do so. Except as specifically permitted by the license, you may not copy this font software.\n\nIf you have any questions, please review the license agreement you received with this font software, and/or contact Ascender Corporation. \n\nContact Information:\nAscender Corporation\nWeb http://www.ascendercorp.com/",manufacturer_name:"Ascender Corporation",font_sub_family_name:"Regular"},descender:-328,familyName:"Droid Sans",lineHeight:1617,underlineThickness:102}),function(){function a(a){function b(b,c,d,e,f,g){for(;f>=0&&g>f;f+=a){var h=e?e[f]:f;d=c(d,b[h],h,b)}return d}return function(c,d,e,f){d=t(d,f,4);var g=!A(c)&&s.keys(c),h=(g||c).length,i=a>0?0:h-1;return arguments.length<3&&(e=c[g?g[i]:i],i+=a),b(c,d,e,g,i,h)}}function b(a){return function(b,c,d){c=u(c,d);for(var e=z(b),f=a>0?0:e-1;f>=0&&e>f;f+=a)if(c(b[f],f,b))return f;return-1}}function c(a,b,c){return function(d,e,f){var g=0,h=z(d);if("number"==typeof f)a>0?g=f>=0?f:Math.max(f+h,g):h=f>=0?Math.min(f+1,h):f+h+1;else if(c&&f&&h)return f=c(d,e),d[f]===e?f:-1;if(e!==e)return f=b(k.call(d,g,h),s.isNaN),f>=0?f+g:-1;for(f=a>0?g:h-1;f>=0&&h>f;f+=a)if(d[f]===e)return f;return-1}}function d(a,b){var c=F.length,d=a.constructor,e=s.isFunction(d)&&d.prototype||h,f="constructor";for(s.has(a,f)&&!s.contains(b,f)&&b.push(f);c--;)f=F[c],f in a&&a[f]!==e[f]&&!s.contains(b,f)&&b.push(f)}var e=this,f=e._,g=Array.prototype,h=Object.prototype,i=Function.prototype,j=g.push,k=g.slice,l=h.toString,m=h.hasOwnProperty,n=Array.isArray,o=Object.keys,p=i.bind,q=Object.create,r=function(){},s=function(a){return a instanceof s?a:this instanceof s?void(this._wrapped=a):new s(a)};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=s),exports._=s):e._=s,s.VERSION="1.8.3";var t=function(a,b,c){if(void 0===b)return a;switch(null==c?3:c){case 1:return function(c){return a.call(b,c)};case 2:return function(c,d){return a.call(b,c,d)};case 3:return function(c,d,e){return a.call(b,c,d,e)};case 4:return function(c,d,e,f){return a.call(b,c,d,e,f)}}return function(){return a.apply(b,arguments)}},u=function(a,b,c){return null==a?s.identity:s.isFunction(a)?t(a,b,c):s.isObject(a)?s.matcher(a):s.property(a)};s.iteratee=function(a,b){return u(a,b,1/0)};var v=function(a,b){return function(c){var d=arguments.length;if(2>d||null==c)return c;for(var e=1;d>e;e++)for(var f=arguments[e],g=a(f),h=g.length,i=0;h>i;i++){var j=g[i];b&&void 0!==c[j]||(c[j]=f[j])}return c}},w=function(a){if(!s.isObject(a))return{};if(q)return q(a);r.prototype=a;var b=new r;return r.prototype=null,b},x=function(a){return function(b){return null==b?void 0:b[a]}},y=Math.pow(2,53)-1,z=x("length"),A=function(a){var b=z(a);return"number"==typeof b&&b>=0&&y>=b};s.each=s.forEach=function(a,b,c){b=t(b,c);var d,e;if(A(a))for(d=0,e=a.length;e>d;d++)b(a[d],d,a);else{var f=s.keys(a);for(d=0,e=f.length;e>d;d++)b(a[f[d]],f[d],a)}return a},s.map=s.collect=function(a,b,c){b=u(b,c);for(var d=!A(a)&&s.keys(a),e=(d||a).length,f=Array(e),g=0;e>g;g++){var h=d?d[g]:g;f[g]=b(a[h],h,a)}return f},s.reduce=s.foldl=s.inject=a(1),s.reduceRight=s.foldr=a(-1),s.find=s.detect=function(a,b,c){var d;return d=A(a)?s.findIndex(a,b,c):s.findKey(a,b,c),void 0!==d&&-1!==d?a[d]:void 0},s.filter=s.select=function(a,b,c){var d=[];return b=u(b,c),s.each(a,function(a,c,e){b(a,c,e)&&d.push(a)}),d},s.reject=function(a,b,c){return s.filter(a,s.negate(u(b)),c)},s.every=s.all=function(a,b,c){b=u(b,c);for(var d=!A(a)&&s.keys(a),e=(d||a).length,f=0;e>f;f++){var g=d?d[f]:f;if(!b(a[g],g,a))return!1}return!0},s.some=s.any=function(a,b,c){b=u(b,c);for(var d=!A(a)&&s.keys(a),e=(d||a).length,f=0;e>f;f++){var g=d?d[f]:f;if(b(a[g],g,a))return!0}return!1},s.contains=s.includes=s.include=function(a,b,c,d){return A(a)||(a=s.values(a)),("number"!=typeof c||d)&&(c=0),s.indexOf(a,b,c)>=0},s.invoke=function(a,b){var c=k.call(arguments,2),d=s.isFunction(b);return s.map(a,function(a){var e=d?b:a[b];return null==e?e:e.apply(a,c)})},s.pluck=function(a,b){return s.map(a,s.property(b))},s.where=function(a,b){return s.filter(a,s.matcher(b))},s.findWhere=function(a,b){return s.find(a,s.matcher(b))},s.max=function(a,b,c){var d,e,f=-1/0,g=-1/0;if(null==b&&null!=a){a=A(a)?a:s.values(a);for(var h=0,i=a.length;i>h;h++)d=a[h],d>f&&(f=d)}else b=u(b,c),s.each(a,function(a,c,d){e=b(a,c,d),(e>g||e===-1/0&&f===-1/0)&&(f=a,g=e)});return f},s.min=function(a,b,c){var d,e,f=1/0,g=1/0;if(null==b&&null!=a){a=A(a)?a:s.values(a);for(var h=0,i=a.length;i>h;h++)d=a[h],f>d&&(f=d)}else b=u(b,c),s.each(a,function(a,c,d){e=b(a,c,d),(g>e||1/0===e&&1/0===f)&&(f=a,g=e)});return f},s.shuffle=function(a){for(var b,c=A(a)?a:s.values(a),d=c.length,e=Array(d),f=0;d>f;f++)b=s.random(0,f),b!==f&&(e[f]=e[b]),e[b]=c[f];return e},s.sample=function(a,b,c){return null==b||c?(A(a)||(a=s.values(a)),a[s.random(a.length-1)]):s.shuffle(a).slice(0,Math.max(0,b))},s.sortBy=function(a,b,c){return b=u(b,c),s.pluck(s.map(a,function(a,c,d){return{value:a,index:c,criteria:b(a,c,d)}}).sort(function(a,b){var c=a.criteria,d=b.criteria;if(c!==d){if(c>d||void 0===c)return 1;if(d>c||void 0===d)return-1}return a.index-b.index}),"value")};var B=function(a){return function(b,c,d){var e={};return c=u(c,d),s.each(b,function(d,f){var g=c(d,f,b);a(e,d,g)}),e}};s.groupBy=B(function(a,b,c){s.has(a,c)?a[c].push(b):a[c]=[b]}),s.indexBy=B(function(a,b,c){a[c]=b}),s.countBy=B(function(a,b,c){s.has(a,c)?a[c]++:a[c]=1}),s.toArray=function(a){return a?s.isArray(a)?k.call(a):A(a)?s.map(a,s.identity):s.values(a):[]},s.size=function(a){return null==a?0:A(a)?a.length:s.keys(a).length},s.partition=function(a,b,c){b=u(b,c);var d=[],e=[];return s.each(a,function(a,c,f){(b(a,c,f)?d:e).push(a)}),[d,e]},s.first=s.head=s.take=function(a,b,c){return null==a?void 0:null==b||c?a[0]:s.initial(a,a.length-b)},s.initial=function(a,b,c){return k.call(a,0,Math.max(0,a.length-(null==b||c?1:b)))},s.last=function(a,b,c){return null==a?void 0:null==b||c?a[a.length-1]:s.rest(a,Math.max(0,a.length-b))},s.rest=s.tail=s.drop=function(a,b,c){return k.call(a,null==b||c?1:b)},s.compact=function(a){return s.filter(a,s.identity)};var C=function(a,b,c,d){for(var e=[],f=0,g=d||0,h=z(a);h>g;g++){var i=a[g];if(A(i)&&(s.isArray(i)||s.isArguments(i))){b||(i=C(i,b,c));var j=0,k=i.length;for(e.length+=k;k>j;)e[f++]=i[j++]}else c||(e[f++]=i)}return e};s.flatten=function(a,b){return C(a,b,!1)},s.without=function(a){return s.difference(a,k.call(arguments,1))},s.uniq=s.unique=function(a,b,c,d){s.isBoolean(b)||(d=c,c=b,b=!1),null!=c&&(c=u(c,d));for(var e=[],f=[],g=0,h=z(a);h>g;g++){var i=a[g],j=c?c(i,g,a):i;b?(g&&f===j||e.push(i),f=j):c?s.contains(f,j)||(f.push(j),e.push(i)):s.contains(e,i)||e.push(i)}return e},s.union=function(){return s.uniq(C(arguments,!0,!0))},s.intersection=function(a){for(var b=[],c=arguments.length,d=0,e=z(a);e>d;d++){var f=a[d];if(!s.contains(b,f)){for(var g=1;c>g&&s.contains(arguments[g],f);g++);g===c&&b.push(f)}}return b},s.difference=function(a){var b=C(arguments,!0,!0,1);return s.filter(a,function(a){return!s.contains(b,a)})},s.zip=function(){return s.unzip(arguments)},s.unzip=function(a){for(var b=a&&s.max(a,z).length||0,c=Array(b),d=0;b>d;d++)c[d]=s.pluck(a,d);return c},s.object=function(a,b){for(var c={},d=0,e=z(a);e>d;d++)b?c[a[d]]=b[d]:c[a[d][0]]=a[d][1];return c},s.findIndex=b(1),s.findLastIndex=b(-1),s.sortedIndex=function(a,b,c,d){c=u(c,d,1);for(var e=c(b),f=0,g=z(a);g>f;){var h=Math.floor((f+g)/2);c(a[h])<e?f=h+1:g=h}return f},s.indexOf=c(1,s.findIndex,s.sortedIndex),s.lastIndexOf=c(-1,s.findLastIndex),s.range=function(a,b,c){null==b&&(b=a||0,a=0),c=c||1;for(var d=Math.max(Math.ceil((b-a)/c),0),e=Array(d),f=0;d>f;f++,a+=c)e[f]=a;return e};var D=function(a,b,c,d,e){if(!(d instanceof b))return a.apply(c,e);var f=w(a.prototype),g=a.apply(f,e);return s.isObject(g)?g:f};s.bind=function(a,b){if(p&&a.bind===p)return p.apply(a,k.call(arguments,1));if(!s.isFunction(a))throw new TypeError("Bind must be called on a function");var c=k.call(arguments,2),d=function(){return D(a,d,b,this,c.concat(k.call(arguments)))};return d},s.partial=function(a){var b=k.call(arguments,1),c=function(){for(var d=0,e=b.length,f=Array(e),g=0;e>g;g++)f[g]=b[g]===s?arguments[d++]:b[g];for(;d<arguments.length;)f.push(arguments[d++]);return D(a,c,this,this,f)};return c},s.bindAll=function(a){var b,c,d=arguments.length;if(1>=d)throw new Error("bindAll must be passed function names");for(b=1;d>b;b++)c=arguments[b],a[c]=s.bind(a[c],a);return a},s.memoize=function(a,b){var c=function(d){var e=c.cache,f=""+(b?b.apply(this,arguments):d);return s.has(e,f)||(e[f]=a.apply(this,arguments)),e[f]};return c.cache={},c},s.delay=function(a,b){var c=k.call(arguments,2);return setTimeout(function(){return a.apply(null,c)},b)},s.defer=s.partial(s.delay,s,1),s.throttle=function(a,b,c){var d,e,f,g=null,h=0;c||(c={});var i=function(){h=c.leading===!1?0:s.now(),g=null,f=a.apply(d,e),g||(d=e=null)};return function(){var j=s.now();h||c.leading!==!1||(h=j);var k=b-(j-h);return d=this,e=arguments,0>=k||k>b?(g&&(clearTimeout(g),g=null),h=j,f=a.apply(d,e),g||(d=e=null)):g||c.trailing===!1||(g=setTimeout(i,k)),f}},s.debounce=function(a,b,c){var d,e,f,g,h,i=function(){var j=s.now()-g;b>j&&j>=0?d=setTimeout(i,b-j):(d=null,c||(h=a.apply(f,e),d||(f=e=null)))};return function(){f=this,e=arguments,g=s.now();var j=c&&!d;return d||(d=setTimeout(i,b)),j&&(h=a.apply(f,e),f=e=null),h}},s.wrap=function(a,b){return s.partial(b,a)},s.negate=function(a){return function(){return!a.apply(this,arguments)}},s.compose=function(){var a=arguments,b=a.length-1;return function(){for(var c=b,d=a[b].apply(this,arguments);c--;)d=a[c].call(this,d);return d}},s.after=function(a,b){return function(){return--a<1?b.apply(this,arguments):void 0}},s.before=function(a,b){var c;return function(){return--a>0&&(c=b.apply(this,arguments)),1>=a&&(b=null),c}},s.once=s.partial(s.before,2);var E=!{toString:null}.propertyIsEnumerable("toString"),F=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"];s.keys=function(a){if(!s.isObject(a))return[];if(o)return o(a);var b=[];for(var c in a)s.has(a,c)&&b.push(c);return E&&d(a,b),b},s.allKeys=function(a){if(!s.isObject(a))return[];var b=[];for(var c in a)b.push(c);return E&&d(a,b),b},s.values=function(a){for(var b=s.keys(a),c=b.length,d=Array(c),e=0;c>e;e++)d[e]=a[b[e]];return d},s.mapObject=function(a,b,c){b=u(b,c);for(var d,e=s.keys(a),f=e.length,g={},h=0;f>h;h++)d=e[h],g[d]=b(a[d],d,a);return g},s.pairs=function(a){for(var b=s.keys(a),c=b.length,d=Array(c),e=0;c>e;e++)d[e]=[b[e],a[b[e]]];return d},s.invert=function(a){for(var b={},c=s.keys(a),d=0,e=c.length;e>d;d++)b[a[c[d]]]=c[d];return b},s.functions=s.methods=function(a){var b=[];for(var c in a)s.isFunction(a[c])&&b.push(c);return b.sort()},s.extend=v(s.allKeys),s.extendOwn=s.assign=v(s.keys),s.findKey=function(a,b,c){b=u(b,c);for(var d,e=s.keys(a),f=0,g=e.length;g>f;f++)if(d=e[f],b(a[d],d,a))return d},s.pick=function(a,b,c){var d,e,f={},g=a;if(null==g)return f;s.isFunction(b)?(e=s.allKeys(g),d=t(b,c)):(e=C(arguments,!1,!1,1),d=function(a,b,c){return b in c},g=Object(g));for(var h=0,i=e.length;i>h;h++){var j=e[h],k=g[j];d(k,j,g)&&(f[j]=k)}return f},s.omit=function(a,b,c){if(s.isFunction(b))b=s.negate(b);else{var d=s.map(C(arguments,!1,!1,1),String);b=function(a,b){return!s.contains(d,b)}}return s.pick(a,b,c)},s.defaults=v(s.allKeys,!0),s.create=function(a,b){var c=w(a);return b&&s.extendOwn(c,b),c},s.clone=function(a){return s.isObject(a)?s.isArray(a)?a.slice():s.extend({},a):a},s.tap=function(a,b){return b(a),a},s.isMatch=function(a,b){var c=s.keys(b),d=c.length;if(null==a)return!d;for(var e=Object(a),f=0;d>f;f++){var g=c[f];if(b[g]!==e[g]||!(g in e))return!1}return!0};var G=function(a,b,c,d){if(a===b)return 0!==a||1/a===1/b;if(null==a||null==b)return a===b;a instanceof s&&(a=a._wrapped),b instanceof s&&(b=b._wrapped);var e=l.call(a);if(e!==l.call(b))return!1;switch(e){case"[object RegExp]":case"[object String]":return""+a==""+b;case"[object Number]":return+a!==+a?+b!==+b:0===+a?1/+a===1/b:+a===+b;case"[object Date]":case"[object Boolean]":return+a===+b}var f="[object Array]"===e;if(!f){if("object"!=typeof a||"object"!=typeof b)return!1;var g=a.constructor,h=b.constructor;if(g!==h&&!(s.isFunction(g)&&g instanceof g&&s.isFunction(h)&&h instanceof h)&&"constructor"in a&&"constructor"in b)return!1}c=c||[],d=d||[];for(var i=c.length;i--;)if(c[i]===a)return d[i]===b;if(c.push(a),d.push(b),f){if(i=a.length,i!==b.length)return!1;for(;i--;)if(!G(a[i],b[i],c,d))return!1}else{var j,k=s.keys(a);if(i=k.length,s.keys(b).length!==i)return!1;for(;i--;)if(j=k[i],!s.has(b,j)||!G(a[j],b[j],c,d))return!1}return c.pop(),d.pop(),!0};s.isEqual=function(a,b){return G(a,b)},s.isEmpty=function(a){return null==a?!0:A(a)&&(s.isArray(a)||s.isString(a)||s.isArguments(a))?0===a.length:0===s.keys(a).length},s.isElement=function(a){return!(!a||1!==a.nodeType)},s.isArray=n||function(a){return"[object Array]"===l.call(a)},s.isObject=function(a){var b=typeof a;return"function"===b||"object"===b&&!!a},s.each(["Arguments","Function","String","Number","Date","RegExp","Error"],function(a){s["is"+a]=function(b){return l.call(b)==="[object "+a+"]"}}),s.isArguments(arguments)||(s.isArguments=function(a){return s.has(a,"callee")}),"function"!=typeof/./&&"object"!=typeof Int8Array&&(s.isFunction=function(a){return"function"==typeof a||!1}),s.isFinite=function(a){return isFinite(a)&&!isNaN(parseFloat(a))},s.isNaN=function(a){return s.isNumber(a)&&a!==+a},s.isBoolean=function(a){return a===!0||a===!1||"[object Boolean]"===l.call(a)},s.isNull=function(a){return null===a},s.isUndefined=function(a){return void 0===a},s.has=function(a,b){return null!=a&&m.call(a,b)},s.noConflict=function(){return e._=f,this},s.identity=function(a){return a},s.constant=function(a){return function(){return a}},s.noop=function(){},s.property=x,s.propertyOf=function(a){return null==a?function(){}:function(b){return a[b]}},s.matcher=s.matches=function(a){return a=s.extendOwn({},a),function(b){return s.isMatch(b,a)}},s.times=function(a,b,c){var d=Array(Math.max(0,a));b=t(b,c,1);for(var e=0;a>e;e++)d[e]=b(e);return d},s.random=function(a,b){return null==b&&(b=a,a=0),a+Math.floor(Math.random()*(b-a+1))},s.now=Date.now||function(){return(new Date).getTime()};var H={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},I=s.invert(H),J=function(a){var b=function(b){return a[b]},c="(?:"+s.keys(a).join("|")+")",d=RegExp(c),e=RegExp(c,"g");return function(a){return a=null==a?"":""+a,d.test(a)?a.replace(e,b):a}};s.escape=J(H),s.unescape=J(I),s.result=function(a,b,c){var d=null==a?void 0:a[b];return void 0===d&&(d=c),s.isFunction(d)?d.call(a):d};var K=0;s.uniqueId=function(a){var b=++K+"";return a?a+b:b},s.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var L=/(.)^/,M={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},N=/\\|'|\r|\n|\u2028|\u2029/g,O=function(a){return"\\"+M[a]};s.template=function(a,b,c){!b&&c&&(b=c),b=s.defaults({},b,s.templateSettings);var d=RegExp([(b.escape||L).source,(b.interpolate||L).source,(b.evaluate||L).source].join("|")+"|$","g"),e=0,f="__p+='";a.replace(d,function(b,c,d,g,h){return f+=a.slice(e,h).replace(N,O),e=h+b.length,c?f+="'+\n((__t=("+c+"))==null?'':_.escape(__t))+\n'":d?f+="'+\n((__t=("+d+"))==null?'':__t)+\n'":g&&(f+="';\n"+g+"\n__p+='"),b}),f+="';\n",b.variable||(f="with(obj||{}){\n"+f+"}\n"),f="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+f+"return __p;\n";try{var g=new Function(b.variable||"obj","_",f)}catch(h){throw h.source=f,h}var i=function(a){return g.call(this,a,s)},j=b.variable||"obj";return i.source="function("+j+"){\n"+f+"}",i},s.chain=function(a){var b=s(a);return b._chain=!0,b};var P=function(a,b){return a._chain?s(b).chain():b};s.mixin=function(a){s.each(s.functions(a),function(b){var c=s[b]=a[b];s.prototype[b]=function(){var a=[this._wrapped];return j.apply(a,arguments),P(this,c.apply(s,a))}})},s.mixin(s),s.each(["pop","push","reverse","shift","sort","splice","unshift"],function(a){var b=g[a];s.prototype[a]=function(){var c=this._wrapped;return b.apply(c,arguments),"shift"!==a&&"splice"!==a||0!==c.length||delete c[0],P(this,c)}}),s.each(["concat","join","slice"],function(a){var b=g[a];s.prototype[a]=function(){return P(this,b.apply(this._wrapped,arguments))}}),s.prototype.value=function(){return this._wrapped},s.prototype.valueOf=s.prototype.toJSON=s.prototype.value,s.prototype.toString=function(){return""+this._wrapped},"function"==typeof define&&define.amd&&define("underscore",[],function(){return s})}.call(this);var __extends=this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);c.prototype=b.prototype,a.prototype=new c},GravityGraph;!function(a){var b=function(b){function c(d,e){c.nodesColor||(c.nodesColor=e.colorBuilder);var f,g=c.nodesColor(d.group);c.materialsMap[g]?f=c.materialsMap[g]:e.quality==a.EQuality.HIGH?(c.OPACITY=.95,f=new THREE.MeshLambertMaterial({color:g,transparent:!0,opacity:c.OPACITY,wireframe:!1,shininess:5}),c.materialsMap[g]=f):e.quality<a.EQuality.HIGH&&(c.OPACITY=1,f=new THREE.MeshBasicMaterial({color:g,transparent:!0,opacity:c.OPACITY,wireframe:!1}),c.materialsMap[g]=f),e.isWebGL()?b.call(this,c.basicGeometry,f.clone()):b.call(this,c.degradedGeometry,f.clone()),this.data=d,this.quality=e.quality,this.selected=!1,this.walked=!1,this.changeDefaults(e)}return __extends(c,b),c.prototype.changeDefaults=function(a){this.position.set(0,0,0),this.castShadow=a.shadows;
},c.setColorMethod=function(a){c.nodesColor=a},c.resetColorMethod=function(){c.nodesColor=null},c.prototype.getColor=function(){var a=this.material;return a.color},c.prototype.setColor=function(a){var b=this.material;b.color.set(a)},c.prototype.getData=function(){return this.data},c.prototype.update=function(){this.setColor(c.nodesColor(this.data.group)),this.material.needsUpdate=!0},c.prototype.updateTarget=function(b){this.quality==a.EQuality.LOW&&this.lookAt(b)},c.prototype.distanceTo=function(a){return this.position.distanceTo(a.position)},c.prototype.equals=function(a){return this.getData()==a.getData()},c.prototype.isSameGroupOf=function(a){return this.getData().group==a.getData().group},c.prototype.setFocused=function(){this.material.opacity=c.OPACITY,this.material.needsUpdate=!0,this.scale.set(1,1,1)},c.prototype.setUnFocused=function(){this.material.opacity=.375,this.material.needsUpdate=!0,this.scale.set(1,1,1)},c.basicGeometry=new THREE.IcosahedronGeometry(10,2),c.degradedGeometry=new THREE.IcosahedronGeometry(10,0),c.materialsMap={},c.OPACITY=.95,c}(THREE.Mesh);a.Node3D=b}(GravityGraph||(GravityGraph={}));var GravityGraph;!function(a){var b=function(a){function b(c){this.support=c,this.velocity=0,this.nbParticles=10;for(var d=new THREE.Geometry,e=0;e<this.nbParticles;e++)d.vertices.push(new THREE.Vector3(0,0,0));a.call(this,d,b.defaultMaterial),this.support.setCloud(this)}return __extends(b,a),b.prototype.changeDefaults=function(){},b.prototype.update=function(){this.position.copy(this.support.getSource().position),this.lookAt(this.support.getTarget().position)},b.prototype.start=function(){this.velocity<b.baseVelocity&&(this.velocity+=.005)},b.prototype.stop=function(){this.velocity>0&&(this.velocity-=.0035)},b.prototype.animate=function(){if(this.velocity>0){for(var a,b,c=0,d=this.geometry.vertices.length,e=this.support.getLineLength();d>c;)a=this.geometry.vertices[c],a.z+=this.velocity,a.z>e&&(a.z=0),b&&a.z-b.z<e/this.nbParticles&&(a.z+=this.velocity),b=a,c++;this.geometry.verticesNeedUpdate=!0}},b.imgMap="assets/img/light.png",b.particleMap=THREE.ImageUtils.loadTexture(b.imgMap),b.defaultMaterial=new THREE.PointCloudMaterial({color:16777215,size:5,map:b.particleMap,blending:THREE.AdditiveBlending,transparent:!0,depthWrite:!1,sizeAttenuation:!0}),b.baseVelocity=.25,b}(THREE.PointCloud);a.Cloud=b}(GravityGraph||(GravityGraph={}));var GravityGraph;!function(a){var b=function(a){function b(b){this.support=b;var c=new THREE.MeshBasicMaterial({color:16777215}),d=new THREE.TextGeometry(b.getData().value+" >",{size:3,height:0,curveSegments:1,font:"droid sans"});a.call(this,d,c),d.computeBoundingBox(),this.width=d.boundingBox.max.x-d.boundingBox.min.x,this.rotateZ(Math.PI/2),this.setUnFocused()}return __extends(b,a),b.prototype.update=function(){this.position.copy(this.support.getSource().position),this.position.add(this.support.getTarget().position.clone().sub(this.position).divideScalar(2)),this.lookAt(this.support.getTarget().position),this.rotateY(-Math.PI/2)},b.prototype.setFocused=function(){this.visible=!0},b.prototype.setUnFocused=function(){this.visible=!1},b}(THREE.Mesh);a.Text3D=b}(GravityGraph||(GravityGraph={}));var GravityGraph;!function(a){var b=function(b){function c(d,e,f,g){this.config=g,this.data={source:f.source,target:f.target,value:f.value},this.text=new a.Text3D(this),this.source=d,this.target=e;var h=new THREE.Geometry;h.vertices.push(this.source.position),h.vertices.push(this.target.position),b.call(this,h,c.material),this.add(this.text),this.position=this.source.position,this.castShadow=g.shadows,this.visible=!this.config.flow}return __extends(c,b),c.prototype.getData=function(){return this.data},c.prototype.setCloud=function(a){this.cloud=a},c.prototype.getCloud=function(){return this.cloud},c.prototype.getLineLength=function(){return this.lineLength},c.prototype.getSource=function(){return this.source},c.prototype.getTarget=function(){return this.target},c.prototype.getArrow=function(){return this.arrow},c.prototype.getText=function(){return this.text},c.prototype.update=function(){this.lineLength=this.source.distanceTo(this.target),this.geometry.verticesNeedUpdate=!0,this.cloud&&this.cloud.update(),this.text.update()},c.prototype.setFocused=function(){this.cloud&&(this.cloud.visible=!0),this.visible=!0},c.prototype.setUnFocused=function(){this.config.flow||this.cloud&&(this.cloud.visible=!1),this.visible=!1},c.material=new THREE.LineBasicMaterial({color:16777215}),c}(THREE.Line);a.Link3D=b}(GravityGraph||(GravityGraph={}));var GravityGraph;!function(a){!function(a){a[a.LOW=0]="LOW",a[a.MEDIUM=1]="MEDIUM",a[a.HIGH=2]="HIGH"}(a.EQuality||(a.EQuality={}));var b=(a.EQuality,function(){function a(){}return a.prototype.isNumeric=function(a){return!isNaN(parseFloat(a))},a.prototype.isArray=function(a){return"[object Array]"===Object.prototype.toString.call(a)},a.prototype.isObject=function(a){return"[object Object]"===Object.prototype.toString.call(a)},a.prototype.parseBoolean=function(a){var b=!!a;return"true"==a?b=!0:"false"==a&&(b=!1),b},a}());a.Utils=b}(GravityGraph||(GravityGraph={}));var GravityGraph;!function(a){var b=function(){function b(b){this.U=new a.Utils,this._config=b,this.webglAvailable=Detector.webgl,this.quality>a.EQuality.MEDIUM&&!this.isWebGL()&&(this._config.quality="medium")}return Object.defineProperty(b.prototype,"target",{get:function(){return this._config.target},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"quality",{get:function(){var b=a.EQuality.HIGH;switch(this._config.quality){case"high":b=a.EQuality.HIGH;break;case"medium":b=a.EQuality.MEDIUM;break;case"low":b=a.EQuality.LOW}return b},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"opacity",{get:function(){return parseFloat(this._config.opacity)||1},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"backgroundColor",{get:function(){return this._config.backgroundColor||2105376},enumerable:!0,configurable:!0}),b.prototype.isTransparent=function(){return this.U.isNumeric(this._config.opacity)&&this._config.opacity>=0&&this._config.opacity<1},b.prototype.isFlat=function(){return this.U.parseBoolean(this._config.flat)},Object.defineProperty(b.prototype,"flow",{get:function(){return this.U.parseBoolean(this._config.flow)},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"stats",{get:function(){return this.U.parseBoolean(this._config.stats)},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"charge",{get:function(){return this.U.isNumeric(this._config.charge)?this._config.charge:-100},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"distance",{get:function(){return this.U.isNumeric(this._config.distance)?this._config.distance:60},enumerable:!0,configurable:!0}),Object.defineProperty(b.prototype,"colorBuilder",{get:function(){if(!b.colorBuilder){var a=d3.scale.category20;switch(this._config.colorType){case"10":a=d3.scale.category10;break;case"20b":a=d3.scale.category20b;break;case"20c":a=d3.scale.category20c}b.colorBuilder=a()}return b.colorBuilder},enumerable:!0,configurable:!0}),b.prototype.resetColorBuilder=function(){b.colorBuilder=null},b.prototype.isWebGL=function(){return this.webglAvailable},Object.defineProperty(b.prototype,"shadows",{get:function(){return this.U.parseBoolean(this._config.shadows)&&this.quality>a.EQuality.MEDIUM&&this.isWebGL()},enumerable:!0,configurable:!0}),b.colorBuilder=null,b}();a.Config=b}(GravityGraph||(GravityGraph={}));var GravityGraph;!function(a){var b=function(a){function b(){for(var b=32,c=30,d=new THREE.Geometry,e=new THREE.LineBasicMaterial({color:16711680,transparent:!0}),f=0;b>=f;f++){var g=f/b*Math.PI*2;d.vertices.push(new THREE.Vector3(Math.cos(g)*c,Math.sin(g)*c,0))}a.call(this,d,e),this.changeDefaults()}return __extends(b,a),b.prototype.changeDefaults=function(){this.scale.set(1,1,1),this.visible=!1},b.prototype.animate=function(){var a=this;this.firstExpand=!0,this.material.opacity=1,this.material.needsUpdate=!0,this.animatedObject={scaleCircle:0,scaleNode:1},this.animation=new createjs.Tween(this.animatedObject).to({scaleCircle:3e3},1e3).call(function(){a.firstExpand=!1,a.animatedObject.scaleCircle=0,a.animation=new createjs.Tween(a.animatedObject,{loop:!0}).to({scaleCircle:100},1e3)}),this.animation2=new createjs.Tween(this.animatedObject,{loop:!0}).to({scaleNode:1.25},500,createjs.Ease.backInOut).to({scaleNode:1},500,createjs.Ease.backInOut)},b.prototype.update=function(a){if(void 0!==this.animatedObject.scaleCircle){var b=this.animatedObject.scaleCircle/100;if(this.scale.set(b,b,b),!this.firstExpand){var c=Math.sin(1-b);this.material.opacity=c,this.material.needsUpdate=!0}this.lookAt(a),b=this.animatedObject.scaleNode,this.support.scale.set(b,b,b)}},b.prototype.setPosition=function(a){this.support=a,this.position.copy(a.position)},b.prototype.show=function(){this.visible=!0},b.prototype.hide=function(){this.support.scale.set(1,1,1),this.visible=!1},b}(THREE.Line);a.NodeSelectAnimation=b}(GravityGraph||(GravityGraph={}));var GravityGraph;!function(a){var b=function(){function a(){this.foci={},this.names=[]}return a.prototype.addFocus=function(a){-1==this.names.indexOf(""+a)&&this.names.push(""+a),this.computeRepartition()},a.prototype.addAllFocus=function(a,b){var c=this;b.forEach(function(b){b[a]&&c.addFocus(""+b[a])})},a.prototype.computeRepartition=function(){this.foci={};for(var a=1e3,b=this.names.length,c=0;b>c;c++){var d=this.names[c],e=c/b*Math.PI*2;this.foci[d]={x:Math.cos(e)*a+a/2,y:Math.sin(e)*a+a/2}}},a.prototype.getPositionOf=function(a){return this.foci[""+a]},a}();a.Foci=b}(GravityGraph||(GravityGraph={}));var GravityGraph;!function(a){var b=function(){function b(b,c){this.zeroVect=new THREE.Vector3,this.nbUpdate=0,this.config=b,this.U=new a.Utils,this.d3Instance=c,this.events=new Events,this.useFoci=!1,this.nodes=[],this.links=[],this.clouds=[],this.canvas=document.getElementById(this.config.target),this.mouse={x:0,y:0},this.lights=new Array;var d=this.config.isTransparent();if(this.config.isWebGL())this.renderer=new THREE.WebGLRenderer({canvas:this.canvas,antialias:this.config.quality>a.EQuality.LOW,alpha:d,devicePixelRatio:window.devicePixelRatio});else{var e=new THREE.CanvasRenderer({canvas:this.canvas,antialias:!1,alpha:!1,devicePixelRatio:window.devicePixelRatio});this.renderer=e}d||(this.config.opacity=1),this.renderer.shadowMapEnabled=this.config.shadows,this.renderer.shadowMapType=THREE.PCFShadowMap,this.renderer.shadowMapDebug=!1,this.renderer.sortObjects=!1,this.renderer.setClearColor(this.config.backgroundColor,this.config.opacity),this.renderer.setSize(this.canvas.width,this.canvas.height),this.scene=new THREE.Scene,this.nodeSelectAnimation=new a.NodeSelectAnimation,this.config.quality==a.EQuality.HIGH&&(this.sphereBackground=this.addBackground()),this.addCamera(),this.addLights(),this.addControls(),this.addRoot(),this.bindEvents(),this.onWindowResize(),this.listenToD3()}return b.prototype.listenToD3=function(){var a=this;this.d3Instance.on("tick",function(b){if(a.useFoci)for(var c,d=.1*b,e=0,f=a.nodes.length;f>e;){c=a.nodes[e];var g=c.position.x||0;g+=(a.foci.getPositionOf(c.getData().group).x-g)*d;var h=c.position.y||0;h+=(a.foci.getPositionOf(c.getData().group).y-h)*d,c.position.set(g,h,c.position.z),e++}for(var e=0,f=a.links.length;f>e;)a.links[e].update(),e++;a.d3Instance.isStable()?a.d3Working=!1:a.d3Working=!0,a.selectedNode&&a.nodeSelectAnimation.position.copy(a.selectedNode.position)})},b.prototype.separateGroups=function(a){void 0===a&&(a=!1),this.useFoci=a},b.prototype.addCamera=function(){this.camera=new THREE.PerspectiveCamera(70,this.canvas.offsetWidth/this.canvas.offsetHeight,1,8e3),this.camera.position.z=400},b.prototype.addRoot=function(){var a=(this.config.isFlat(),0),b=new THREE.Vector3(0,0,a);this.rootObject3D=new THREE.Object3D,this.rootObject3D.position.copy(b).divideScalar(2).negate(),this.rootObject3D.add(this.nodeSelectAnimation),this.scene.add(this.rootObject3D)},b.prototype.addLights=function(){var b,c,d;b=3e3,c=3e3,d=3e3,this.config.quality<a.EQuality.HIGH?this.scene.add(new THREE.HemisphereLight(16777215,16777215)):(this.addLight(b,c,d),b=-b,this.addLight(b,c,d,this.config.shadows),c=-c,this.addLight(b,c,d),b=-b,d=-d,this.addLight(b,c,d,!1),c=-c,this.addLight(b,c,d,!1),b=-b,this.addLight(b,c,d,!1))},b.prototype.addLight=function(a,b,c,d){void 0===d&&(d=!1);var e=new THREE.SpotLight(16777215,.6);e.position.set(a,b,c),e.castShadow=d,e.shadowCameraNear=200;var f=this.camera;e.shadowCameraFar=2*f.far,e.shadowCameraFov=50,e.shadowBias=-22e-5,e.shadowDarkness=.5,e.shadowMapWidth=2048,e.shadowMapHeight=2048,this.lights.push(e),this.scene.add(e)},b.prototype.addBackground=function(){var a=20,b=new THREE.SphereGeometry(a,a,a),c=new THREE.MeshLambertMaterial({color:10526880,ambient:16777215,side:1,transparent:this.config.isTransparent(),opacity:this.config.opacity}),d=new THREE.Mesh(b,c);return d.receiveShadow=!0,d.scale.set(200,200,200),this.scene.add(d),d},b.prototype.addControls=function(){this.controls=new THREE.OrbitControls(this.camera,this.canvas),this.controls.rotateSpeed=1,this.controls.zoomSpeed=1.2,this.controls.panSpeed=.8,this.controls.noZoom=!1,this.controls.noPan=!1,this.controls.staticMoving=!0,this.controls.dynamicDampingFactor=.3},b.prototype.drawAxis=function(){var a=new THREE.LineBasicMaterial({color:16711680}),b=new THREE.Geometry;b.vertices.push(new THREE.Vector3(0,0,0)),b.vertices.push(new THREE.Vector3(1e4,0,0));var c=new THREE.Line(b,a),d=new THREE.LineBasicMaterial({color:65280}),e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0)),e.vertices.push(new THREE.Vector3(0,1e4,0));var f=new THREE.Line(e,d),g=new THREE.LineBasicMaterial({color:255}),h=new THREE.Geometry;h.vertices.push(new THREE.Vector3(0,0,0)),h.vertices.push(new THREE.Vector3(0,0,1e4));var i=new THREE.Line(h,g);this.scene.add(c),this.scene.add(f),this.scene.add(i)},b.prototype.bindEvents=function(){var a=this;window.addEventListener("resize",function(b){a.onWindowResize()},!1),this.renderer.domElement.addEventListener("mousemove",function(b){a.onDocumentMouseMove(b)},!1),this.renderer.domElement.addEventListener("mousedown",function(b){a.onDocumentMouseDown(b)},!1),this.renderer.domElement.addEventListener("mouseup",function(b){a.onDocumentMouseUp(b)},!1),this.renderer.domElement.addEventListener("dblclick",function(b){a.events.emit("dblclick",[])},!1),this.renderer.domElement.addEventListener("contextmenu",function(b){a.events.emit("contextmenu",[])},!1),this.raycaster=new THREE.Raycaster,this.projectionOffset=new THREE.Vector3(0,0,0),this.intersectPlane=new THREE.Mesh(new THREE.PlaneBufferGeometry(10,10,2,2),new THREE.MeshBasicMaterial({color:2105376,opacity:.75,transparent:!1})),this.intersectPlane.visible=!1,this.intersectPlane.receiveShadow=!0,this.intersectPlane.scale.set(1e3,1e3,1e3),this.scene.add(this.intersectPlane)},b.prototype.onWindowResize=function(){var a=this.renderer.domElement.parentElement.offsetWidth,b=this.renderer.domElement.parentElement.offsetHeight;this.canvas.width=a,this.canvas.height=b,this.canvas.style.width=a+"px",this.canvas.style.height=b+"px";var c=this.camera;c.aspect=a/b,c.updateProjectionMatrix(),this.renderer.setSize(a,b)},b.prototype.onDocumentMouseMove=function(a){a.preventDefault();var b=this.canvas.getBoundingClientRect();if(this.mouse.x=(a.clientX-b.left)/this.canvas.offsetWidth*2-1,this.mouse.y=2*-((a.clientY-b.top)/this.canvas.offsetHeight)+1,this.currentlySelectedObject){var c=this.getPlanIntersect();return void(c&&(c.point.sub(this.rootObject3D.position),this.currentlySelectedObject.position.copy(c.point),this.config.isFlat()&&(this.currentlyIntersectedObject.position.z=0),this.update()))}var d=this.getTargetObject();d?(this.currentlyIntersectedObject!=d.object&&(this.currentlyIntersectedObject=d.object,this.intersectPlane.position.copy(this.currentlyIntersectedObject.position),this.intersectPlane.position.add(this.rootObject3D.position),this.intersectPlane.lookAt(this.camera.position),this.events.emit("nodeOvered",[a,this.currentlyIntersectedObject.getData()])),this.canvas.style.cursor="pointer"):(this.currentlyIntersectedObject&&this.events.emit("nodeBlur",[a]),this.currentlyIntersectedObject=null,this.canvas.style.cursor="auto")},b.prototype.onDocumentMouseDown=function(a){var b=this;this.isAClick&&(this.isAClick=!1,clearTimeout(this.dragTimout));var c=this.getTargetObject();c&&(this.currentlySelectedObject=c.object,this.isAClick=!0,this.dragTimout=setTimeout(function(){b.isAClick=!1,b.controls.enabled=!1,b.getPlanIntersect(),b.canvas.style.cursor="move",b.d3Instance.isStable()&&b.d3Instance.shake()},150))},b.prototype.onDocumentMouseUp=function(a){this.controls.enabled=!0,this.currentlySelectedObject&&(this.isAClick?(clearTimeout(this.dragTimout),this.selectNode(this.currentlyIntersectedObject,a)):this.d3Instance.isStable()&&this.d3Instance.shake(),this.currentlySelectedObject=null),this.canvas.style.cursor="auto"},b.prototype.selectNode=function(a,b){this.events.emit("nodeSelected",[b,a.getData()]),this.selectedNode&&this.unselectNode(this.selectedNode),a.selected=!0,this.selectedNode=a,this.nodeSelectAnimation.setPosition(a),this.nodeSelectAnimation.show(),this.nodeSelectAnimation.animate()},b.prototype.unselectNode=function(a){void 0===a&&(a=this.selectedNode),a&&(a.selected=!1,this.selectedNode=null,this.nodeSelectAnimation.hide())},b.prototype.getPlanIntersect=function(){var a=new THREE.Vector3(this.mouse.x,this.mouse.y,.5);a.unproject(this.camera),this.raycaster.set(this.camera.position,a.sub(this.camera.position).normalize());var b=this.raycaster.intersectObjects([this.intersectPlane]);return b.length>0?(this.projectionOffset.copy(b[0].point).sub(this.intersectPlane.position).add(this.rootObject3D.position),b[0]):null},b.prototype.getTargetObject=function(){var a=new THREE.Vector3(this.mouse.x,this.mouse.y,1);a.unproject(this.camera),this.raycaster.set(this.camera.position,a.sub(this.camera.position).normalize());var b=this.raycaster.intersectObjects(this.nodes);return b.length>0?b[0]:null},b.prototype.start=function(){this.d3Instance.shake(),this.d3Instance.stabilize(),this.d3Working=!1},b.prototype.shake=function(){this.d3Instance.shake()},b.prototype.update=function(){this.nbUpdate++,void 0==this.lastCameraPosition?this.lastCameraPosition=this.camera.position.clone():this.camera.position.distanceTo(this.zeroVect)>4100?this.camera.position.copy(this.lastCameraPosition):this.lastCameraPosition.copy(this.camera.position);var a,b;if(a=0,b=this.clouds.length,this.nbUpdate%2==0)for(;b>a;)this.d3Working?this.clouds[a].stop():(this.clouds[a].start(),this.clouds[a].update()),this.clouds[a].animate(),a++;a=0,b=this.nodes.length;var c=this.camera.position.clone().sub(this.rootObject3D.position);if(this.nbUpdate%20==0){a=0,b=this.links.length;for(var d;b>a;)d=this.links[a],d.geometry.computeBoundingBox(),a++}this.selectedNode&&this.nodeSelectAnimation.update(c)},b.prototype.render=function(){this.renderer.render(this.scene,this.camera)},b.prototype.setForce=function(a){this.d3Instance=a},b.prototype.setNodes=function(b){var c=this;this.config.resetColorBuilder(),a.Node3D.resetColorMethod(),this.nodes.forEach(function(a){c.rootObject3D.remove(a)}),this.links.forEach(function(a){c.rootObject3D.remove(a)}),this.nodes=[],this.foci=new a.Foci;var d=[],e=b;if(this.U.isObject(b)){e=[];for(var f in b)b.hasOwnProperty(f)&&e.push(b[f])}return e.forEach(function(b,e){b.id=e;var f=new a.Node3D(b,c.config);c.nodes.push(f),c.rootObject3D.add(f),d.push(f.position),c.foci.addFocus(b.group)}),this.d3Instance.setNodes(d),this.setLinks([]),this.listenToD3(),this.nodes},b.prototype.setLinks=function(b){if(this.nodes){for(var c=0;c<this.links.length;c++){var d=this.links[c];this.rootObject3D.remove(d)}this.links=[],this.clouds=[],this.d3Instance.setLinks([]);for(var e=[],f=0;f<b.length;f++){var g=b[f];"string"==typeof g.source&&(g.source=this.indexOf(g.source)),"string"==typeof g.target&&(g.target=this.indexOf(g.target));var h=this.nodes[g.source],i=this.nodes[g.target];if(h&&i&&h!=i){e.push(g);var j=new a.Link3D(h,i,g,this.config);if(this.links.push(j),this.config.flow&&this.config.isWebGL()&&this.config.quality>a.EQuality.LOW){var k=new a.Cloud(j);this.clouds.push(k),this.rootObject3D.add(k)}this.rootObject3D.add(j)}else this.events.emit("warn",["Bad link : "+g.source+"->"+g.target+"  =  "+h+"->"+i])}return this.d3Instance.setLinks(e),this.links}throw"GG: setLinks() : no nodes founds. You must set nodes before links"},b.prototype.indexOf=function(a){for(var b,c=0,d=0;d<this.nodes.length;d++)if(b=this.nodes[d].getData(),b.name==a){c=d;break}return c},b.prototype.on=function(a,b){this.events.add(a,b)},b.prototype.getSelectedNode=function(){return this.selectedNode},b.prototype.isOverSomething=function(){return!!this.getTargetObject()},b}();a.Visualisation3D=b}(GravityGraph||(GravityGraph={}));var GravityGraph;!function(a){var b=function(){function a(a,b,c){var d=this;void 0===b&&(b=[]),void 0===c&&(c=[]),this.config=a,this.events=new Events,this.nodes=b,this.links=c,this.working=!1,this.config.isFlat()?this.force=d3.layout.force():this.force=d3.layout.force3d(),this.force.charge(this.config.charge).linkDistance(this.config.distance).nodes(this.nodes).links(this.links).on("tick",function(){d.tick()}),this.force.on("end",function(){d.working=!1})}return a.prototype.isWorking=function(){return this.working},a.prototype.setNodes=function(a){void 0===a&&(a=[]),this.nodes=a,this.force.nodes(this.nodes)},a.prototype.setLinks=function(a){void 0===a&&(a=[]),this.links=a,this.force.links(this.links)},a.prototype.on=function(a,b){this.events.add(a,b)},a.prototype.isStable=function(){return this.force.alpha()<=.01||!1},a.prototype.isCalm=function(){return this.force.alpha()<=.1},a.prototype.stabilize=function(a){void 0===a&&(a=150),this.idle=!0;for(var b=0;!this.isStable()&&a>b;)this.force.tick(),b+=1;this.idle=!1,this.force.tick()},a.prototype.calmDown=function(){},a.prototype.shake=function(){this.working?this.force.resume():this.force.start()},a.prototype.shakeHard=function(){var a=this,b=this.force.charge(),c=this.force.linkDistance();this.force.charge(10),this.force.linkDistance(0),this.force.start(),setTimeout(function(){a.force.charge(b),a.force.linkDistance(c),a.force.start()},1500)},a.prototype.tick=function(){if(this.working=!0,this.isCalm){if(!this.idle){var a=this.force.alpha();this.events.emit("tick",[a])}}else this.force.tick()},a.prototype.setDistance=function(a){this.force.linkDistance(a),this.force.start()},a.prototype.setCharge=function(a){this.force.charge(a),this.force.start()},a}();a.D3Wrapper=b}(GravityGraph||(GravityGraph={}));var Events=function(){function a(){this.eventsMap={}}return a.prototype.emit=function(a,b){this.eventsMap[a]&&this.eventsMap[a].apply(null,b)},a.prototype.add=function(a,b){this.eventsMap[a]=b},a}(),GravityGraph;!function(a){"use strict";!function(a){a[a.INNER=0]="INNER",a[a.OUTER=1]="OUTER",a[a.INNER_OUTER=2]="INNER_OUTER",a[a.SELF=3]="SELF"}(a.ERelation||(a.ERelation={}));var b=a.ERelation,c=(new a.Utils,function(){function c(b){this.events=new Events,this.config=new a.Config(b),this.canvas=document.getElementById(this.config.target),this.paused=!1,this.config.stats&&this.addStats()}return c.prototype.initialize=function(){var b=this;this.events.emit("info",["GravityGraph : Init"]),this.config.isWebGL()||(this.events.emit("warn",["Degraded mode ! (slower)"]),this.events.emit("warn",["WebGL is disabled, your drivers, your DirectX version, or your browser are outdated."]),this.events.emit("warn",["Please update your software.  (https://get.webgl.org/)"])),this.force=new a.D3Wrapper(this.config),this.vis3D=new a.Visualisation3D(this.config,this.force),this.vis3D.on("info",function(){for(var a=[],c=0;c<arguments.length;c++)a[c-0]=arguments[c];b.events.emit("info",a)}),this.vis3D.on("warn",function(){for(var a=[],c=0;c<arguments.length;c++)a[c-0]=arguments[c];b.events.emit("warn",a)}),this.vis3D.on("nodeOvered",function(){for(var a=[],c=0;c<arguments.length;c++)a[c-0]=arguments[c];b.events.emit("nodeOvered",a)}),this.vis3D.on("nodeBlur",function(){for(var a=[],c=0;c<arguments.length;c++)a[c-0]=arguments[c];b.events.emit("nodeBlur",a)}),this.vis3D.on("nodeSelected",function(){for(var a=[],c=0;c<arguments.length;c++)a[c-0]=arguments[c];b.events.emit("nodeSelected",a)}),this.vis3D.on("dblclick",function(){b.vis3D.isOverSomething()?b.focusOnRelations():b.resetFocus()}),this.vis3D.on("contextmenu",function(){}),this.config.isWebGL()?this.events.emit("info",["GG: Everything ok ! Starting main loop."]):this.events.emit("info",["GG: Starting main loop, running in compatibility mode"]),this.run()},c.prototype.setNodes=function(b,c){this.events.emit("busy",[]);var d=(new Date).getTime(),e=JSON.parse(JSON.stringify(b));this.force=new a.D3Wrapper(this.config),this.vis3D.setForce(this.force),this.nodes=this.vis3D.setNodes(e);var f=(new Date).getTime();return this.events.emit("done",["Nodes generation",f-d]),c&&c(this.nodes),this.nodes},c.prototype.setLinks=function(a,b){this.events.emit("busy",[]);var c=(new Date).getTime(),d=JSON.parse(JSON.stringify(a));d=this.groupLinks(d),this.links=this.vis3D.setLinks(d);var e=(new Date).getTime();this.events.emit("done",["Links generation",e-c]),b&&b()},c.prototype.groupLinks=function(a){for(var b,c=[],d={},e=0;e<a.length;e++){var f=a[e];f.value=f.value||0,b=f.source+":"+f.target,d[b]?d[b].value+=f.value:d[b]=f}for(var b in d)if(d.hasOwnProperty(b)){var g=d[b];c.push(g)}return c},c.prototype.run=function(a){var b=this;this.stats&&this.stats.begin(),this.paused||(this.update(),this.render(),requestAnimationFrame(function(){b.run()})),this.stats&&this.stats.end()},c.prototype.update=function(){this.vis3D.update()},c.prototype.render=function(){this.vis3D.render()},c.prototype.start=function(){this.vis3D.start()},c.prototype.pause=function(){this.paused=!0},c.prototype.resume=function(){this.paused=!1},c.prototype.setCharge=function(a){this.force.setCharge(a)},c.prototype.setDistance=function(a){this.force.setDistance(a)},c.prototype.color=function(a){return this.config.colorBuilder(a)},c.prototype.addStats=function(){var a=document.getElementById("stats");a&&(a.remove(),a=void 0);var b=new Stats;b.setMode(0),b.domElement.style.position="absolute",b.domElement.style.right=0,b.domElement.style.bottom=0,this.canvas.parentElement.appendChild(b.domElement),this.stats=b},c.prototype.on=function(a,b){this.events.add(a,b)},c.prototype.selectBy=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c];if(d.getData()[a]===b){this.vis3D.selectNode(d);break}}},c.prototype.unSelect=function(){this.vis3D.unselectNode()},c.prototype.resetFocus=function(){var a=this;this.nodes.forEach(function(a){a.setFocused()}),this.links&&this.links.forEach(function(b){a.config.flow||b.setFocused(),b.getText().setUnFocused()})},c.prototype.focusOnRelations=function(a,c){var d=this;void 0===c&&(c=b.SELF);var e,f={nodes:[],links:[]};c==b.SELF&&this.vis3D.getSelectedNode()?(e=this.vis3D.getSelectedNode(),f=this.getRelationsOf(this.vis3D.getSelectedNode())):a&&(e=a[0],a.forEach(function(a){var b=d.getRelationsOf(a);f.nodes=f.nodes.concat(b.nodes),f.links=f.links.concat(b.links)})),f.nodes&&(this.nodes.forEach(function(a){-1!=f.nodes.indexOf(a)?a.setFocused():a.setUnFocused()}),this.links.forEach(function(a){-1!=f.links.indexOf(a)?c==b.SELF||c==b.INNER_OUTER?(a.setFocused(),a.getText().setFocused()):c!=b.OUTER||a.getTarget().isSameGroupOf(a.getSource())?c==b.INNER&&a.getTarget().isSameGroupOf(a.getSource())?(a.setFocused(),a.getText().setFocused()):(a.setUnFocused(),a.getText().setUnFocused()):(a.setFocused(),a.getText().setFocused()):(a.setUnFocused(),a.getText().setUnFocused())}))},c.prototype.focusOnGroupRelations=function(a){var c=this;void 0===a&&(a=b.INNER);var d=[];this.vis3D.getSelectedNode()&&(this.nodes.forEach(function(a){a.isSameGroupOf(c.vis3D.getSelectedNode())?(a.setFocused(),d.push(a)):a.setUnFocused()}),d&&this.focusOnRelations(d,a))},c.prototype.separateGroups=function(a){void 0===a&&(a=!1),this.vis3D.separateGroups(a),this.force.shake()},c.prototype.shake=function(){this.vis3D.separateGroups(!1),this.force.shakeHard()},c.prototype.getRelationsOf=function(a){var b=this,c=this.getNameOrIndexOf(a),d={nodes:[],links:[]};return void 0!==c&&this.links.forEach(function(a){if(a.getData().source==c||a.getData().target==c){var e=b.nodes[a.getData().source];-1==d.nodes.indexOf(e)&&e&&d.nodes.push(e),e=b.nodes[a.getData().target],-1==d.nodes.indexOf(e)&&e&&d.nodes.push(e),d.links.push(a)}}),d},c.prototype.getNameOrIndexOf=function(a){for(var b,c=0;c<this.links.length;c++){var d=this.links[c],e=d.getData().source,f=d.getData().target;if(this.nodes[e]&&this.nodes[e].equals(a)){b=e;break}if(this.nodes[f]&&this.nodes[f].equals(a)){b=f;break}}return b},c}());a.Graph=c}(GravityGraph||(GravityGraph={}));var GravityGraph;!function(a){var b=function(a){function b(c){this.sourcePosition=c.getSource().position,this.targetPosition=c.getTarget().position;var d=this.targetPosition.clone().sub(this.sourcePosition);a.call(this,d.clone().normalize(),this.sourcePosition,d.length(),b.COLOR),this.changeDefaults()}return __extends(b,a),b.prototype.changeDefaults=function(){this.position=this.sourcePosition},b.prototype.update=function(){var a=this.targetPosition.clone().sub(this.sourcePosition);this.setDirection(a.normalize());var b=this.sourcePosition.distanceTo(this.targetPosition),c=this.targetPosition.clone().sub(this.sourcePosition).normalize().multiplyScalar(1);this.position.copy(this.sourcePosition.clone().add(c)),this.setLength(.9*b)},b.prototype.setFocused=function(){this.line.visible=!0,this.cone.visible=!0},b.prototype.setUnFocused=function(){this.line.visible=!1,this.cone.visible=!1},b.COLOR=16777215,b}(THREE.ArrowHelper);a.Arrow3D=b}(GravityGraph||(GravityGraph={}));